{
  "id": "01249f7d803da4dc1bfe88abfe2b3728",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.20",
  "solcLongVersion": "0.8.20+commit.a1b79de6",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "contracts/FincubeDAO.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.8;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title FinCubeDAO\n * @notice This contract implements a decentralized autonomous organization (DAO) for managing a community of members and proposals.\n */\n\ncontract FinCubeDAO is Ownable {\n    event MemberRegistered(address indexed _newMember, string _memberURI);\n    event ProposalCreated(\n        uint256 indexed proposalId,\n        ProposalType indexed proposalType,\n        bytes data\n    );\n\n    event MemberApproved(address indexed member);\n    event ProposalExecuted(uint256 indexed proposalId);\n    event ProposalCanceled(uint256 indexed proposalId);\n    uint256 private memberCount;\n    uint256 private proposalCount;\n    string public daoURI;\n    /** @dev Represents a member of the DAO.\n     * @param memberURI The URI that identifies the member.\n     * @param status Whether the member is approved or not.\n     */\n    struct Member {\n        bool status;\n        string memberURI;\n    }\n    /**\n     * @dev Represents the different types of proposals that can be created.\n     */\n    enum ProposalType {\n        NewMemberProposal,\n        GeneralProposal\n    }\n\n    /**\n     * @dev Represents a proposal within the DAO.\n     * @param proposer The address of the member who created the proposal.\n     * @param voteStart The timestamp when the voting period starts.\n     * @param voteDuration The duration of the voting period in seconds.\n     * @param executed Whether the proposal has been executed or not.\n     * @param canceled Whether the proposal has been canceled or not.\n     * @param data The data associated with the proposal (e.g., new member address, token address).\n     * @param yesvotes The number of \"yes\" votes for the proposal.\n     * @param novotes The number of \"no\" votes for the proposal.\n     */\n    struct Proposal {\n        bool executed;\n        bool canceled;\n        address proposer;\n        bytes data;\n        address target;\n        uint48 voteStart;\n        uint48 voteDuration;\n        uint256 yesvotes;\n        uint256 novotes;\n    }\n\n    /**\n     * @dev Stores the vote information for a proposal.\n     * @param isYesVote Mapping of addresses to whether they voted \"yes\" or not.\n     * @param isNoVote Mapping of addresses to whether they voted \"no\" or not.\n     */\n    struct ProposalVotes {\n        mapping(address => bool) isYesVote;\n        mapping(address => bool) isNoVote;\n    }\n    mapping(address => Member) private members;\n    mapping(uint256 => Proposal) private proposals;\n    mapping(uint256 => ProposalVotes) private proposalVotes;\n    mapping(uint256 => ProposalType) private proposalType;\n\n    /**\n     * @notice Initializes the contract with the owner as the first member.\n     * @param _ownerURI The URI that identifies the owner member.\n     */\n    constructor(\n        string memory _daoURI,\n        string memory _ownerURI\n    ) Ownable(msg.sender) {\n        Member memory member;\n        member.memberURI = _ownerURI;\n        member.status = true;\n        members[msg.sender] = member;\n        memberCount = 1;\n        daoURI = _daoURI;\n    }\n\n    /**\n     * @notice Returns the voting delay period in seconds.\n     * @dev This function is marked as `pure` because it does not read or modify the contract's state.\n     * @return The voting delay period in seconds (currently 5 seconds).\n     */\n    function votingDelay() public pure returns (uint256) {\n        return 5; // 5 seconds\n    }\n\n    /**\n     * @notice Returns the voting period duration in seconds.\n     * @dev This function is marked as `pure` because it does not read or modify the contract's state.\n     * @return The voting period duration in seconds (currently 60 seconds).\n     */\n    function votingPeriod() public pure returns (uint256) {\n        return 60; // 1 minute\n    }\n\n    /**\n     * @notice Returns the proposal threshold, which is the minimum number of \"yes\" votes required for a proposal to be executed.\n     * @dev The proposal threshold is calculated as (memberCount + 1) / 2.\n     * @return threshold The proposal threshold.\n     */\n    function proposalThreshold() public view returns (uint256 threshold) {\n        threshold = (memberCount + 1) / 2;\n    }\n\n    /**\n     * @notice Modifier to ensure that the provided address is not already a member.\n     * @param _address The address to be checked.\n     */\n    modifier isNotExistingMember(address _address) {\n        require(\n            !(bytes(members[_address].memberURI).length > 0),\n            \"Already a member\"\n        );\n        _;\n    }\n    /**\n     * @notice Modifier to ensure that the provided address is a valid and approved member.\n     * @param _address The address to be checked.\n     */\n    modifier onlyMember(address _address) {\n        require(\n            (bytes(members[_address].memberURI).length > 0),\n            \"Not a member\"\n        );\n        require(members[_address].status == true, \"Member not approved\");\n        _;\n    }\n\n    /**\n     * @notice Register a new member.\n     * @dev This function can only be called by non-existing members.\n     * @param _newMember The address of the new member to be registered.\n     * @param _memberURI The URI of the new member.\n     */\n    function registerMember(\n        address _newMember,\n        string memory _memberURI\n    ) external isNotExistingMember(_newMember) {\n        Member memory member;\n        member.memberURI = _memberURI;\n        member.status = false;\n        members[_newMember] = member;\n        emit MemberRegistered(_newMember, _memberURI);\n    }\n\n    /**\n     * @notice Creates a new proposal for approving a new member.\n     * @dev This function can only be called by an existing member.\n     * @param _newMember The address of the new member to be approved.\n     */\n    function newMemberApprovalProposal(\n        address _newMember\n    ) external onlyMember(msg.sender) {\n        uint48 currentTime = uint48(block.timestamp);\n        uint48 start = currentTime + uint48(votingDelay());\n        uint48 end = start + uint48(votingPeriod());\n        bytes memory _data = toBytes(_newMember);\n        proposals[proposalCount] = Proposal({\n            proposer: msg.sender,\n            voteStart: start,\n            voteDuration: end,\n            executed: false,\n            canceled: false,\n            data: _data,\n            target: address(0xdead),\n            yesvotes: 0,\n            novotes: 0\n        });\n        proposalType[proposalCount] = ProposalType.NewMemberProposal;\n        emit ProposalCreated(\n            proposalCount,\n            ProposalType.NewMemberProposal,\n            _data\n        );\n        unchecked {\n            proposalCount++;\n        }\n    }\n\n    /**\n     * @notice Creates a new proposal. This is a generalized proposal which can invoke any public function of any contract using calldata.\n     * @dev This function can only be called by an existing member.\n     * @param _calldata the calldata of function to be invoked. _target the address of contract having the function\n     */\n    function newProposal(\n        bytes memory _calldata,\n        address _target\n    ) external onlyMember(msg.sender) {\n        uint48 currentTime = uint48(block.timestamp);\n        uint48 start = currentTime + uint48(votingDelay());\n        uint48 end = start + uint48(votingPeriod());\n        proposals[proposalCount] = Proposal({\n            proposer: msg.sender,\n            voteStart: start,\n            voteDuration: end,\n            executed: false,\n            canceled: false,\n            data: _calldata,\n            target: _target,\n            yesvotes: 0,\n            novotes: 0\n        });\n        proposalType[proposalCount] = ProposalType.GeneralProposal;\n        emit ProposalCreated(\n            proposalCount,\n            ProposalType.GeneralProposal,\n            _calldata\n        );\n        unchecked {\n            proposalCount++;\n        }\n    }\n\n    /**\n     * @notice Casts a vote for a proposal.\n     * @dev This function can only be called by an existing member. It also checks if the voting period is active and if the member has not already voted for this proposal.\n     * @param _proposalId The ID of the proposal to vote for.\n     * @param _isYesVote Whether the vote is a \"yes\" vote (true) or a \"no\" vote (false).\n     */\n\n    function castVote(\n        uint256 _proposalId,\n        bool _isYesVote\n    ) external onlyMember(msg.sender) {\n        ProposalVotes storage votes = proposalVotes[_proposalId];\n        Proposal storage proposal = proposals[_proposalId];\n\n        require(\n            block.timestamp > proposal.voteStart &&\n                block.timestamp < proposal.voteDuration,\n            \"Voting is not allowed at this time\"\n        );\n        require(\n            !votes.isYesVote[msg.sender] && !votes.isNoVote[msg.sender],\n            \"Already voted for this proposal\"\n        );\n\n        if (_isYesVote) {\n            unchecked {\n                proposal.yesvotes++;\n            }\n            votes.isYesVote[msg.sender] = true;\n        } else {\n            unchecked {\n                proposal.novotes++;\n            }\n            votes.isNoVote[msg.sender] = true;\n        }\n    }\n\n    /**\n     * @notice Executes a proposal if it meets the requirements.\n     * @dev This function checks if the voting period has ended, if the proposal has not been executed or canceled, and if the proposal has received enough \"yes\" votes to meet the proposal threshold. It then executes the proposal based on its type (approving a new member or setting a token address).\n     * @param proposalId The ID of the proposal to be executed.\n     */\n    function executeProposal(uint256 proposalId) public {\n        Proposal storage proposal = proposals[proposalId];\n        require(\n            !(block.timestamp > proposal.voteStart &&\n                block.timestamp < proposal.voteDuration),\n            \"Voting still going on\"\n        );\n        require(\n            !proposal.executed && !proposal.canceled,\n            \"Proposal already executed or canceled\"\n        );\n        require(\n            proposal.yesvotes > proposalThreshold() - 1,\n            \"Proposal doesn't have majority vote\"\n        );\n        if (proposalType[proposalId] == ProposalType.NewMemberProposal) {\n            approveMember(bytesToAddress(proposal.data));\n            proposal.executed = true;\n            emit ProposalExecuted(proposalId);\n        } else if (proposalType[proposalId] == ProposalType.GeneralProposal) {\n            (bool success, ) = proposal.target.call(proposal.data);\n            if (!success) {\n                revert(\"Proposal execution failed\");\n            }\n            proposal.executed = true;\n            emit ProposalExecuted(proposalId);\n        }\n    }\n\n    /**\n     * @notice Returns the count of ongoing proposals.\n     * @dev This function iterates through the proposals mapping and counts the proposals that have not been executed or canceled and are within the voting period.\n     * @return  ongoingCount The count of ongoing proposals.\n     */\n\n    function getOngoingProposalsCount()\n        public\n        view\n        returns (uint256 ongoingCount)\n    {\n        uint256 count = proposalCount;\n        uint256 currentTimestamp = block.timestamp;\n\n        for (uint256 i; i < count; ) {\n            if (\n                !proposals[i].executed &&\n                !proposals[i].canceled &&\n                currentTimestamp > proposals[i].voteStart &&\n                currentTimestamp < proposals[i].voteDuration\n            ) {\n                unchecked {\n                    ongoingCount++;\n                }\n            }\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n     * @notice Returns an array of ongoing proposals.\n     * @dev This function first calls `getOngoingProposalsCount` to get the count of ongoing proposals, then iterates through the proposals mapping and populates an array with the ongoing proposals.\n     * @return An array of ongoing proposals.\n     */\n\n    function getOngoingProposals() public view returns (Proposal[] memory) {\n        uint256 ongoingCount = getOngoingProposalsCount();\n        Proposal[] memory ongoingProposals = new Proposal[](ongoingCount);\n        uint256 currentTimestamp = block.timestamp; // Cache block.timestamp\n        uint256 index = 0;\n        for (uint256 i; i < proposalCount; ) {\n            if (\n                !proposals[i].executed &&\n                !proposals[i].canceled &&\n                currentTimestamp > proposals[i].voteStart &&\n                currentTimestamp < proposals[i].voteDuration\n            ) {\n                ongoingProposals[index] = proposals[i];\n                unchecked {\n                    index++;\n                }\n            }\n            unchecked {\n                ++i;\n            }\n        }\n\n        return ongoingProposals;\n    }\n\n    /**\n     * @notice Cancels a proposal that has not been executed or canceled yet.\n     * @param proposalId The ID of the proposal to be canceled.\n     * @dev Only the proposer of the proposal can call this function.\n     * @dev The proposal must not have been executed or canceled before.\n     */\n    function cancelProposal(uint256 proposalId) public onlyMember(msg.sender) {\n        Proposal storage proposal = proposals[proposalId];\n        require(\n            proposal.proposer == msg.sender,\n            \"No permission to cancel proposal\"\n        );\n        require(\n            !proposal.executed && !proposal.canceled,\n            \"Proposal already executed or canceled\"\n        );\n        proposal.canceled = true;\n        emit ProposalCanceled(proposalId);\n    }\n\n    /**\n     * @notice Approves a new member.\n     * @dev This function is marked as `private` because it should only be called internally by the `executeProposal` function.\n     * @param newMember The address of the new member to be approved.\n     */\n    function approveMember(address newMember) private {\n        require(!members[newMember].status, \"Member already approved\");\n        members[newMember].status = true;\n        unchecked {\n            memberCount++;\n        }\n        emit MemberApproved(newMember);\n    }\n\n    /**\n     * @notice Converts a byte array to an address.\n     * @dev This function is marked as `private` and `pure` because it does not read or modify the contract's state and is only used internally.\n     * @param bys The byte array to be converted.\n     * @return addr The address converted from the byte array.\n     */\n    function bytesToAddress(\n        bytes memory bys\n    ) private pure returns (address addr) {\n        assembly {\n            addr := mload(add(bys, 20))\n        }\n    }\n\n    /**\n     * @notice Converts an address to a byte array.\n     * @dev This function is marked as `private` and `pure` because it does not read or modify the contract's state and is only used internally.\n     * @param a The address to be converted.\n     * @return The byte array representation of the address.\n     */\n    function toBytes(address a) private pure returns (bytes memory) {\n        return abi.encodePacked(a);\n    }\n\n    //@warning: function only defined for testing purposes\n    /**\n     * @notice Checks if a member is approved.\n     * @dev This function can only be called by an existing member.\n     * @param _member The address of the member to be checked.\n     * @return A boolean indicating whether the member is approved or not.\n     */\n    function checkIsMemberApproved(\n        address _member\n    ) public view onlyMember(msg.sender) returns (bool) {\n        return members[_member].status;\n    }\n}\n"
      },
      "contracts/TokenAddress.sol": {
        "content": "// SPDX-License-Identifier: MIT\n \npragma solidity ^0.8.8;\n \ncontract TokenAddressContract {\n    address public token;\n    \n    function set(address tokenAddress) public {\n        token = tokenAddress;\n    }\n    \n    function remove(address ) public {\n        delete token;\n    }\n \n    function getToken() public view returns(address) {\n        return token;\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "storageLayout"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              177
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 178,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 177,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 177,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                177
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 159,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 159,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              177
            ]
          },
          "id": 178,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:1"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 150,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:1",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 177,
              "linearizedBaseContracts": [
                177
              ],
              "name": "Context",
              "nameLocation": "642:7:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 158,
                    "nodeType": "Block",
                    "src": "718:34:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 155,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 154,
                        "id": 157,
                        "nodeType": "Return",
                        "src": "728:17:1"
                      }
                    ]
                  },
                  "id": 159,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 151,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:1"
                  },
                  "returnParameters": {
                    "id": 154,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 153,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "709:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:1"
                  },
                  "scope": 177,
                  "src": "656:96:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 167,
                    "nodeType": "Block",
                    "src": "825:32:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 164,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:1",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 163,
                        "id": 166,
                        "nodeType": "Return",
                        "src": "835:15:1"
                      }
                    ]
                  },
                  "id": 168,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 160,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:1"
                  },
                  "returnParameters": {
                    "id": 163,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "809:14:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:1"
                  },
                  "scope": 177,
                  "src": "758:99:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 175,
                    "nodeType": "Block",
                    "src": "935:25:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 172,
                        "id": 174,
                        "nodeType": "Return",
                        "src": "945:8:1"
                      }
                    ]
                  },
                  "id": 176,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 169,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:1"
                  },
                  "returnParameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 176,
                        "src": "926:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:1"
                  },
                  "scope": 177,
                  "src": "863:97:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 178,
              "src": "624:338:1",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:1"
        },
        "id": 1
      },
      "contracts/FincubeDAO.sol": {
        "ast": {
          "absolutePath": "contracts/FincubeDAO.sol",
          "exportedSymbols": {
            "Context": [
              177
            ],
            "FinCubeDAO": [
              1082
            ],
            "Ownable": [
              147
            ]
          },
          "id": 1083,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 179,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".8"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 180,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1083,
              "sourceUnit": 148,
              "src": "57:52:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 182,
                    "name": "Ownable",
                    "nameLocations": [
                      "297:7:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "297:7:2"
                  },
                  "id": 183,
                  "nodeType": "InheritanceSpecifier",
                  "src": "297:7:2"
                }
              ],
              "canonicalName": "FinCubeDAO",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 181,
                "nodeType": "StructuredDocumentation",
                "src": "111:161:2",
                "text": " @title FinCubeDAO\n @notice This contract implements a decentralized autonomous organization (DAO) for managing a community of members and proposals."
              },
              "fullyImplemented": true,
              "id": 1082,
              "linearizedBaseContracts": [
                1082,
                147,
                177
              ],
              "name": "FinCubeDAO",
              "nameLocation": "283:10:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "3b09349069a59bcde8c2609afc86c80b77c81085ac8cd8662981621f7ea3574b",
                  "id": 189,
                  "name": "MemberRegistered",
                  "nameLocation": "317:16:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 185,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_newMember",
                        "nameLocation": "350:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "334:26:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "334:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 187,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_memberURI",
                        "nameLocation": "369:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "362:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "362:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "333:47:2"
                  },
                  "src": "311:70:2"
                },
                {
                  "anonymous": false,
                  "eventSelector": "3cd05952bf89447515ba76534b26df87104c2ba104027f22a518d767243973c1",
                  "id": 198,
                  "name": "ProposalCreated",
                  "nameLocation": "392:15:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 197,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 191,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "proposalId",
                        "nameLocation": "433:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 198,
                        "src": "417:26:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 190,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 194,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "proposalType",
                        "nameLocation": "474:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 198,
                        "src": "453:33:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProposalType_$226",
                          "typeString": "enum FinCubeDAO.ProposalType"
                        },
                        "typeName": {
                          "id": 193,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 192,
                            "name": "ProposalType",
                            "nameLocations": [
                              "453:12:2"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 226,
                            "src": "453:12:2"
                          },
                          "referencedDeclaration": 226,
                          "src": "453:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalType_$226",
                            "typeString": "enum FinCubeDAO.ProposalType"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 196,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "502:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 198,
                        "src": "496:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 195,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "496:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "407:105:2"
                  },
                  "src": "386:127:2"
                },
                {
                  "anonymous": false,
                  "eventSelector": "3da74045128fff0396b39203f81bcedcbcf28586f0f97fb0f41ceb5521566a15",
                  "id": 202,
                  "name": "MemberApproved",
                  "nameLocation": "525:14:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 201,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 200,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "member",
                        "nameLocation": "556:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "540:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:24:2"
                  },
                  "src": "519:45:2"
                },
                {
                  "anonymous": false,
                  "eventSelector": "712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f",
                  "id": 206,
                  "name": "ProposalExecuted",
                  "nameLocation": "575:16:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 205,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 204,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "proposalId",
                        "nameLocation": "608:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "592:26:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 203,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "592:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "591:28:2"
                  },
                  "src": "569:51:2"
                },
                {
                  "anonymous": false,
                  "eventSelector": "789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c",
                  "id": 210,
                  "name": "ProposalCanceled",
                  "nameLocation": "631:16:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 209,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 208,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "proposalId",
                        "nameLocation": "664:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 210,
                        "src": "648:26:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 207,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "648:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "647:28:2"
                  },
                  "src": "625:51:2"
                },
                {
                  "constant": false,
                  "id": 212,
                  "mutability": "mutable",
                  "name": "memberCount",
                  "nameLocation": "697:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1082,
                  "src": "681:27:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "681:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "proposalCount",
                  "nameLocation": "730:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1082,
                  "src": "714:29:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "7034731b",
                  "id": 216,
                  "mutability": "mutable",
                  "name": "daoURI",
                  "nameLocation": "763:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1082,
                  "src": "749:20:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "749:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "FinCubeDAO.Member",
                  "documentation": {
                    "id": 217,
                    "nodeType": "StructuredDocumentation",
                    "src": "775:168:2",
                    "text": "@dev Represents a member of the DAO.\n @param memberURI The URI that identifies the member.\n @param status Whether the member is approved or not."
                  },
                  "id": 222,
                  "members": [
                    {
                      "constant": false,
                      "id": 219,
                      "mutability": "mutable",
                      "name": "status",
                      "nameLocation": "977:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 222,
                      "src": "972:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 218,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "972:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 221,
                      "mutability": "mutable",
                      "name": "memberURI",
                      "nameLocation": "1000:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 222,
                      "src": "993:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 220,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "993:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Member",
                  "nameLocation": "955:6:2",
                  "nodeType": "StructDefinition",
                  "scope": 1082,
                  "src": "948:68:2",
                  "visibility": "public"
                },
                {
                  "canonicalName": "FinCubeDAO.ProposalType",
                  "documentation": {
                    "id": 223,
                    "nodeType": "StructuredDocumentation",
                    "src": "1021:88:2",
                    "text": " @dev Represents the different types of proposals that can be created."
                  },
                  "id": 226,
                  "members": [
                    {
                      "id": 224,
                      "name": "NewMemberProposal",
                      "nameLocation": "1142:17:2",
                      "nodeType": "EnumValue",
                      "src": "1142:17:2"
                    },
                    {
                      "id": 225,
                      "name": "GeneralProposal",
                      "nameLocation": "1169:15:2",
                      "nodeType": "EnumValue",
                      "src": "1169:15:2"
                    }
                  ],
                  "name": "ProposalType",
                  "nameLocation": "1119:12:2",
                  "nodeType": "EnumDefinition",
                  "src": "1114:76:2"
                },
                {
                  "canonicalName": "FinCubeDAO.Proposal",
                  "documentation": {
                    "id": 227,
                    "nodeType": "StructuredDocumentation",
                    "src": "1196:650:2",
                    "text": " @dev Represents a proposal within the DAO.\n @param proposer The address of the member who created the proposal.\n @param voteStart The timestamp when the voting period starts.\n @param voteDuration The duration of the voting period in seconds.\n @param executed Whether the proposal has been executed or not.\n @param canceled Whether the proposal has been canceled or not.\n @param data The data associated with the proposal (e.g., new member address, token address).\n @param yesvotes The number of \"yes\" votes for the proposal.\n @param novotes The number of \"no\" votes for the proposal."
                  },
                  "id": 246,
                  "members": [
                    {
                      "constant": false,
                      "id": 229,
                      "mutability": "mutable",
                      "name": "executed",
                      "nameLocation": "1882:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "1877:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 228,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1877:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 231,
                      "mutability": "mutable",
                      "name": "canceled",
                      "nameLocation": "1905:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "1900:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 230,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1900:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 233,
                      "mutability": "mutable",
                      "name": "proposer",
                      "nameLocation": "1931:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "1923:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 232,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1923:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 235,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "1955:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "1949:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 234,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1949:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 237,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "1977:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "1969:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 236,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1969:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 239,
                      "mutability": "mutable",
                      "name": "voteStart",
                      "nameLocation": "2000:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "1993:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 238,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "1993:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 241,
                      "mutability": "mutable",
                      "name": "voteDuration",
                      "nameLocation": "2026:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "2019:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 240,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "2019:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 243,
                      "mutability": "mutable",
                      "name": "yesvotes",
                      "nameLocation": "2056:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "2048:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 242,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2048:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 245,
                      "mutability": "mutable",
                      "name": "novotes",
                      "nameLocation": "2082:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "2074:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 244,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2074:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Proposal",
                  "nameLocation": "1858:8:2",
                  "nodeType": "StructDefinition",
                  "scope": 1082,
                  "src": "1851:245:2",
                  "visibility": "public"
                },
                {
                  "canonicalName": "FinCubeDAO.ProposalVotes",
                  "documentation": {
                    "id": 247,
                    "nodeType": "StructuredDocumentation",
                    "src": "2102:227:2",
                    "text": " @dev Stores the vote information for a proposal.\n @param isYesVote Mapping of addresses to whether they voted \"yes\" or not.\n @param isNoVote Mapping of addresses to whether they voted \"no\" or not."
                  },
                  "id": 256,
                  "members": [
                    {
                      "constant": false,
                      "id": 251,
                      "mutability": "mutable",
                      "name": "isYesVote",
                      "nameLocation": "2390:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 256,
                      "src": "2365:34:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      },
                      "typeName": {
                        "id": 250,
                        "keyName": "",
                        "keyNameLocation": "-1:-1:-1",
                        "keyType": {
                          "id": 248,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2373:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "2365:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        },
                        "valueName": "",
                        "valueNameLocation": "-1:-1:-1",
                        "valueType": {
                          "id": 249,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2384:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 255,
                      "mutability": "mutable",
                      "name": "isNoVote",
                      "nameLocation": "2434:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 256,
                      "src": "2409:33:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      },
                      "typeName": {
                        "id": 254,
                        "keyName": "",
                        "keyNameLocation": "-1:-1:-1",
                        "keyType": {
                          "id": 252,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2417:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "2409:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        },
                        "valueName": "",
                        "valueNameLocation": "-1:-1:-1",
                        "valueType": {
                          "id": 253,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2428:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "ProposalVotes",
                  "nameLocation": "2341:13:2",
                  "nodeType": "StructDefinition",
                  "scope": 1082,
                  "src": "2334:115:2",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 261,
                  "mutability": "mutable",
                  "name": "members",
                  "nameLocation": "2489:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1082,
                  "src": "2454:42:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$222_storage_$",
                    "typeString": "mapping(address => struct FinCubeDAO.Member)"
                  },
                  "typeName": {
                    "id": 260,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 257,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2462:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2454:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$222_storage_$",
                      "typeString": "mapping(address => struct FinCubeDAO.Member)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 259,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 258,
                        "name": "Member",
                        "nameLocations": [
                          "2473:6:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 222,
                        "src": "2473:6:2"
                      },
                      "referencedDeclaration": 222,
                      "src": "2473:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Member_$222_storage_ptr",
                        "typeString": "struct FinCubeDAO.Member"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "proposals",
                  "nameLocation": "2539:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1082,
                  "src": "2502:46:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$246_storage_$",
                    "typeString": "mapping(uint256 => struct FinCubeDAO.Proposal)"
                  },
                  "typeName": {
                    "id": 265,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 262,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2510:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2502:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$246_storage_$",
                      "typeString": "mapping(uint256 => struct FinCubeDAO.Proposal)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 264,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 263,
                        "name": "Proposal",
                        "nameLocations": [
                          "2521:8:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 246,
                        "src": "2521:8:2"
                      },
                      "referencedDeclaration": 246,
                      "src": "2521:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                        "typeString": "struct FinCubeDAO.Proposal"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "proposalVotes",
                  "nameLocation": "2596:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1082,
                  "src": "2554:55:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ProposalVotes_$256_storage_$",
                    "typeString": "mapping(uint256 => struct FinCubeDAO.ProposalVotes)"
                  },
                  "typeName": {
                    "id": 270,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 267,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2562:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2554:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ProposalVotes_$256_storage_$",
                      "typeString": "mapping(uint256 => struct FinCubeDAO.ProposalVotes)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 269,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 268,
                        "name": "ProposalVotes",
                        "nameLocations": [
                          "2573:13:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 256,
                        "src": "2573:13:2"
                      },
                      "referencedDeclaration": 256,
                      "src": "2573:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalVotes_$256_storage_ptr",
                        "typeString": "struct FinCubeDAO.ProposalVotes"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 276,
                  "mutability": "mutable",
                  "name": "proposalType",
                  "nameLocation": "2656:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1082,
                  "src": "2615:53:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_ProposalType_$226_$",
                    "typeString": "mapping(uint256 => enum FinCubeDAO.ProposalType)"
                  },
                  "typeName": {
                    "id": 275,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 272,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2623:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2615:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_ProposalType_$226_$",
                      "typeString": "mapping(uint256 => enum FinCubeDAO.ProposalType)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 274,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 273,
                        "name": "ProposalType",
                        "nameLocations": [
                          "2634:12:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 226,
                        "src": "2634:12:2"
                      },
                      "referencedDeclaration": 226,
                      "src": "2634:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalType_$226",
                        "typeString": "enum FinCubeDAO.ProposalType"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 319,
                    "nodeType": "Block",
                    "src": "2935:194:2",
                    "statements": [
                      {
                        "assignments": [
                          290
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 290,
                            "mutability": "mutable",
                            "name": "member",
                            "nameLocation": "2959:6:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 319,
                            "src": "2945:20:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Member_$222_memory_ptr",
                              "typeString": "struct FinCubeDAO.Member"
                            },
                            "typeName": {
                              "id": 289,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 288,
                                "name": "Member",
                                "nameLocations": [
                                  "2945:6:2"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 222,
                                "src": "2945:6:2"
                              },
                              "referencedDeclaration": 222,
                              "src": "2945:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Member_$222_storage_ptr",
                                "typeString": "struct FinCubeDAO.Member"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 291,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2945:20:2"
                      },
                      {
                        "expression": {
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 292,
                              "name": "member",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 290,
                              "src": "2975:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Member_$222_memory_ptr",
                                "typeString": "struct FinCubeDAO.Member memory"
                              }
                            },
                            "id": 294,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2982:9:2",
                            "memberName": "memberURI",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 221,
                            "src": "2975:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 295,
                            "name": "_ownerURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 281,
                            "src": "2994:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2975:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 297,
                        "nodeType": "ExpressionStatement",
                        "src": "2975:28:2"
                      },
                      {
                        "expression": {
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 298,
                              "name": "member",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 290,
                              "src": "3013:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Member_$222_memory_ptr",
                                "typeString": "struct FinCubeDAO.Member memory"
                              }
                            },
                            "id": 300,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3020:6:2",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 219,
                            "src": "3013:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3029:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3013:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 303,
                        "nodeType": "ExpressionStatement",
                        "src": "3013:20:2"
                      },
                      {
                        "expression": {
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 304,
                              "name": "members",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 261,
                              "src": "3043:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$222_storage_$",
                                "typeString": "mapping(address => struct FinCubeDAO.Member storage ref)"
                              }
                            },
                            "id": 307,
                            "indexExpression": {
                              "expression": {
                                "id": 305,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3051:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3055:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3051:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3043:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Member_$222_storage",
                              "typeString": "struct FinCubeDAO.Member storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 308,
                            "name": "member",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 290,
                            "src": "3065:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Member_$222_memory_ptr",
                              "typeString": "struct FinCubeDAO.Member memory"
                            }
                          },
                          "src": "3043:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Member_$222_storage",
                            "typeString": "struct FinCubeDAO.Member storage ref"
                          }
                        },
                        "id": 310,
                        "nodeType": "ExpressionStatement",
                        "src": "3043:28:2"
                      },
                      {
                        "expression": {
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 311,
                            "name": "memberCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 212,
                            "src": "3081:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3095:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3081:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 314,
                        "nodeType": "ExpressionStatement",
                        "src": "3081:15:2"
                      },
                      {
                        "expression": {
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 315,
                            "name": "daoURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "3106:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 316,
                            "name": "_daoURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "3115:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "3106:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 318,
                        "nodeType": "ExpressionStatement",
                        "src": "3106:16:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 277,
                    "nodeType": "StructuredDocumentation",
                    "src": "2675:153:2",
                    "text": " @notice Initializes the contract with the owner as the first member.\n @param _ownerURI The URI that identifies the owner member."
                  },
                  "id": 320,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 284,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2923:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2927:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2923:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 286,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 283,
                        "name": "Ownable",
                        "nameLocations": [
                          "2915:7:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "2915:7:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2915:19:2"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 282,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 279,
                        "mutability": "mutable",
                        "name": "_daoURI",
                        "nameLocation": "2868:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 320,
                        "src": "2854:21:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 278,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2854:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 281,
                        "mutability": "mutable",
                        "name": "_ownerURI",
                        "nameLocation": "2899:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 320,
                        "src": "2885:23:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 280,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2885:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2844:70:2"
                  },
                  "returnParameters": {
                    "id": 287,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2935:0:2"
                  },
                  "scope": 1082,
                  "src": "2833:296:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 328,
                    "nodeType": "Block",
                    "src": "3439:38:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "35",
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3456:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "functionReturnParameters": 325,
                        "id": 327,
                        "nodeType": "Return",
                        "src": "3449:8:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 321,
                    "nodeType": "StructuredDocumentation",
                    "src": "3135:246:2",
                    "text": " @notice Returns the voting delay period in seconds.\n @dev This function is marked as `pure` because it does not read or modify the contract's state.\n @return The voting delay period in seconds (currently 5 seconds)."
                  },
                  "functionSelector": "3932abb1",
                  "id": 329,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "votingDelay",
                  "nameLocation": "3395:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 322,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3406:2:2"
                  },
                  "returnParameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 324,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 329,
                        "src": "3430:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3430:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3429:9:2"
                  },
                  "scope": 1082,
                  "src": "3386:91:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 337,
                    "nodeType": "Block",
                    "src": "3795:38:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3630",
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3812:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "functionReturnParameters": 334,
                        "id": 336,
                        "nodeType": "Return",
                        "src": "3805:9:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 330,
                    "nodeType": "StructuredDocumentation",
                    "src": "3483:253:2",
                    "text": " @notice Returns the voting period duration in seconds.\n @dev This function is marked as `pure` because it does not read or modify the contract's state.\n @return The voting period duration in seconds (currently 60 seconds)."
                  },
                  "functionSelector": "02a251a3",
                  "id": 338,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "votingPeriod",
                  "nameLocation": "3750:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 331,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3762:2:2"
                  },
                  "returnParameters": {
                    "id": 334,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 333,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 338,
                        "src": "3786:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 332,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3786:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3785:9:2"
                  },
                  "scope": 1082,
                  "src": "3741:92:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 353,
                    "nodeType": "Block",
                    "src": "4178:50:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 344,
                            "name": "threshold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 342,
                            "src": "4188:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 347,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 345,
                                    "name": "memberCount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 212,
                                    "src": "4201:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 346,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4215:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "4201:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 348,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4200:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4220:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "4200:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4188:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 352,
                        "nodeType": "ExpressionStatement",
                        "src": "4188:33:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 339,
                    "nodeType": "StructuredDocumentation",
                    "src": "3839:265:2",
                    "text": " @notice Returns the proposal threshold, which is the minimum number of \"yes\" votes required for a proposal to be executed.\n @dev The proposal threshold is calculated as (memberCount + 1) / 2.\n @return threshold The proposal threshold."
                  },
                  "functionSelector": "b58131b0",
                  "id": 354,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "proposalThreshold",
                  "nameLocation": "4118:17:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 340,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4135:2:2"
                  },
                  "returnParameters": {
                    "id": 343,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 342,
                        "mutability": "mutable",
                        "name": "threshold",
                        "nameLocation": "4167:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 354,
                        "src": "4159:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 341,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4159:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4158:19:2"
                  },
                  "scope": 1082,
                  "src": "4109:119:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 376,
                    "nodeType": "Block",
                    "src": "4432:139:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4463:48:2",
                              "subExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 369,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 362,
                                                "name": "members",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 261,
                                                "src": "4471:7:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$222_storage_$",
                                                  "typeString": "mapping(address => struct FinCubeDAO.Member storage ref)"
                                                }
                                              },
                                              "id": 364,
                                              "indexExpression": {
                                                "id": 363,
                                                "name": "_address",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 357,
                                                "src": "4479:8:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "4471:17:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Member_$222_storage",
                                                "typeString": "struct FinCubeDAO.Member storage ref"
                                              }
                                            },
                                            "id": 365,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "4489:9:2",
                                            "memberName": "memberURI",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 221,
                                            "src": "4471:27:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_string_storage",
                                              "typeString": "string storage ref"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_storage",
                                              "typeString": "string storage ref"
                                            }
                                          ],
                                          "id": 361,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4465:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                            "typeString": "type(bytes storage pointer)"
                                          },
                                          "typeName": {
                                            "id": 360,
                                            "name": "bytes",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "4465:5:2",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 366,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4465:34:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_storage_ptr",
                                          "typeString": "bytes storage pointer"
                                        }
                                      },
                                      "id": 367,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4500:6:2",
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "4465:41:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 368,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4509:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "4465:45:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 370,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4464:47:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416c72656164792061206d656d626572",
                              "id": 372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4525:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dfc1e7d81d5851bb6264d6497aa3b1c2293167cdc5b1d514e67ce45c171905c1",
                                "typeString": "literal_string \"Already a member\""
                              },
                              "value": "Already a member"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dfc1e7d81d5851bb6264d6497aa3b1c2293167cdc5b1d514e67ce45c171905c1",
                                "typeString": "literal_string \"Already a member\""
                              }
                            ],
                            "id": 359,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4442:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4442:111:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 374,
                        "nodeType": "ExpressionStatement",
                        "src": "4442:111:2"
                      },
                      {
                        "id": 375,
                        "nodeType": "PlaceholderStatement",
                        "src": "4563:1:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 355,
                    "nodeType": "StructuredDocumentation",
                    "src": "4234:146:2",
                    "text": " @notice Modifier to ensure that the provided address is not already a member.\n @param _address The address to be checked."
                  },
                  "id": 377,
                  "name": "isNotExistingMember",
                  "nameLocation": "4394:19:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 358,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 357,
                        "mutability": "mutable",
                        "name": "_address",
                        "nameLocation": "4422:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "4414:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 356,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4414:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4413:18:2"
                  },
                  "src": "4385:186:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 408,
                    "nodeType": "Block",
                    "src": "4772:208:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 392,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 385,
                                              "name": "members",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 261,
                                              "src": "4810:7:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$222_storage_$",
                                                "typeString": "mapping(address => struct FinCubeDAO.Member storage ref)"
                                              }
                                            },
                                            "id": 387,
                                            "indexExpression": {
                                              "id": 386,
                                              "name": "_address",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 380,
                                              "src": "4818:8:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "4810:17:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Member_$222_storage",
                                              "typeString": "struct FinCubeDAO.Member storage ref"
                                            }
                                          },
                                          "id": 388,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "4828:9:2",
                                          "memberName": "memberURI",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 221,
                                          "src": "4810:27:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                          }
                                        ],
                                        "id": 384,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4804:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                          "typeString": "type(bytes storage pointer)"
                                        },
                                        "typeName": {
                                          "id": 383,
                                          "name": "bytes",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "4804:5:2",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 389,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4804:34:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage_ptr",
                                        "typeString": "bytes storage pointer"
                                      }
                                    },
                                    "id": 390,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4839:6:2",
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "4804:41:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 391,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4848:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "4804:45:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 393,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4803:47:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f742061206d656d626572",
                              "id": 394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4864:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8cfc078b32cffb255e9e243136e6cde5d6a128600e2bb8733edd3b242e99fb55",
                                "typeString": "literal_string \"Not a member\""
                              },
                              "value": "Not a member"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8cfc078b32cffb255e9e243136e6cde5d6a128600e2bb8733edd3b242e99fb55",
                                "typeString": "literal_string \"Not a member\""
                              }
                            ],
                            "id": 382,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4782:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4782:106:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 396,
                        "nodeType": "ExpressionStatement",
                        "src": "4782:106:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 398,
                                    "name": "members",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 261,
                                    "src": "4906:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$222_storage_$",
                                      "typeString": "mapping(address => struct FinCubeDAO.Member storage ref)"
                                    }
                                  },
                                  "id": 400,
                                  "indexExpression": {
                                    "id": 399,
                                    "name": "_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 380,
                                    "src": "4914:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4906:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Member_$222_storage",
                                    "typeString": "struct FinCubeDAO.Member storage ref"
                                  }
                                },
                                "id": 401,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4924:6:2",
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 219,
                                "src": "4906:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4934:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "4906:32:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d656d626572206e6f7420617070726f766564",
                              "id": 404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4940:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bec830c85e64815bcd0949fd1f66579df95e396bf9d122729ccf8df63010f70a",
                                "typeString": "literal_string \"Member not approved\""
                              },
                              "value": "Member not approved"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bec830c85e64815bcd0949fd1f66579df95e396bf9d122729ccf8df63010f70a",
                                "typeString": "literal_string \"Member not approved\""
                              }
                            ],
                            "id": 397,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4898:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4898:64:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 406,
                        "nodeType": "ExpressionStatement",
                        "src": "4898:64:2"
                      },
                      {
                        "id": 407,
                        "nodeType": "PlaceholderStatement",
                        "src": "4972:1:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 378,
                    "nodeType": "StructuredDocumentation",
                    "src": "4576:153:2",
                    "text": " @notice Modifier to ensure that the provided address is a valid and approved member.\n @param _address The address to be checked."
                  },
                  "id": 409,
                  "name": "onlyMember",
                  "nameLocation": "4743:10:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 381,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 380,
                        "mutability": "mutable",
                        "name": "_address",
                        "nameLocation": "4762:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "4754:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 379,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4754:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4753:18:2"
                  },
                  "src": "4734:246:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 447,
                    "nodeType": "Block",
                    "src": "5368:200:2",
                    "statements": [
                      {
                        "assignments": [
                          422
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 422,
                            "mutability": "mutable",
                            "name": "member",
                            "nameLocation": "5392:6:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 447,
                            "src": "5378:20:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Member_$222_memory_ptr",
                              "typeString": "struct FinCubeDAO.Member"
                            },
                            "typeName": {
                              "id": 421,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 420,
                                "name": "Member",
                                "nameLocations": [
                                  "5378:6:2"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 222,
                                "src": "5378:6:2"
                              },
                              "referencedDeclaration": 222,
                              "src": "5378:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Member_$222_storage_ptr",
                                "typeString": "struct FinCubeDAO.Member"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 423,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5378:20:2"
                      },
                      {
                        "expression": {
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 424,
                              "name": "member",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 422,
                              "src": "5408:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Member_$222_memory_ptr",
                                "typeString": "struct FinCubeDAO.Member memory"
                              }
                            },
                            "id": 426,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5415:9:2",
                            "memberName": "memberURI",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 221,
                            "src": "5408:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 427,
                            "name": "_memberURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "5427:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "5408:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 429,
                        "nodeType": "ExpressionStatement",
                        "src": "5408:29:2"
                      },
                      {
                        "expression": {
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 430,
                              "name": "member",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 422,
                              "src": "5447:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Member_$222_memory_ptr",
                                "typeString": "struct FinCubeDAO.Member memory"
                              }
                            },
                            "id": 432,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5454:6:2",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 219,
                            "src": "5447:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5463:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "5447:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 435,
                        "nodeType": "ExpressionStatement",
                        "src": "5447:21:2"
                      },
                      {
                        "expression": {
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 436,
                              "name": "members",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 261,
                              "src": "5478:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$222_storage_$",
                                "typeString": "mapping(address => struct FinCubeDAO.Member storage ref)"
                              }
                            },
                            "id": 438,
                            "indexExpression": {
                              "id": 437,
                              "name": "_newMember",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 412,
                              "src": "5486:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5478:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Member_$222_storage",
                              "typeString": "struct FinCubeDAO.Member storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 439,
                            "name": "member",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 422,
                            "src": "5500:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Member_$222_memory_ptr",
                              "typeString": "struct FinCubeDAO.Member memory"
                            }
                          },
                          "src": "5478:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Member_$222_storage",
                            "typeString": "struct FinCubeDAO.Member storage ref"
                          }
                        },
                        "id": 441,
                        "nodeType": "ExpressionStatement",
                        "src": "5478:28:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 443,
                              "name": "_newMember",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 412,
                              "src": "5538:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 444,
                              "name": "_memberURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 414,
                              "src": "5550:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 442,
                            "name": "MemberRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 189,
                            "src": "5521:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (address,string memory)"
                            }
                          },
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5521:40:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 446,
                        "nodeType": "EmitStatement",
                        "src": "5516:45:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 410,
                    "nodeType": "StructuredDocumentation",
                    "src": "4986:244:2",
                    "text": " @notice Register a new member.\n @dev This function can only be called by non-existing members.\n @param _newMember The address of the new member to be registered.\n @param _memberURI The URI of the new member."
                  },
                  "functionSelector": "0aa5adfc",
                  "id": 448,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 417,
                          "name": "_newMember",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 412,
                          "src": "5356:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 418,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 416,
                        "name": "isNotExistingMember",
                        "nameLocations": [
                          "5336:19:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 377,
                        "src": "5336:19:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5336:31:2"
                    }
                  ],
                  "name": "registerMember",
                  "nameLocation": "5244:14:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 415,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "_newMember",
                        "nameLocation": "5276:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "5268:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5268:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 414,
                        "mutability": "mutable",
                        "name": "_memberURI",
                        "nameLocation": "5310:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "5296:24:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 413,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5296:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5258:68:2"
                  },
                  "returnParameters": {
                    "id": 419,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5368:0:2"
                  },
                  "scope": 1082,
                  "src": "5235:333:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 530,
                    "nodeType": "Block",
                    "src": "5896:804:2",
                    "statements": [
                      {
                        "assignments": [
                          459
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 459,
                            "mutability": "mutable",
                            "name": "currentTime",
                            "nameLocation": "5913:11:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 530,
                            "src": "5906:18:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            "typeName": {
                              "id": 458,
                              "name": "uint48",
                              "nodeType": "ElementaryTypeName",
                              "src": "5906:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 465,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 462,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5934:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5940:9:2",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5934:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5927:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint48_$",
                              "typeString": "type(uint48)"
                            },
                            "typeName": {
                              "id": 460,
                              "name": "uint48",
                              "nodeType": "ElementaryTypeName",
                              "src": "5927:6:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5927:23:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5906:44:2"
                      },
                      {
                        "assignments": [
                          467
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 467,
                            "mutability": "mutable",
                            "name": "start",
                            "nameLocation": "5967:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 530,
                            "src": "5960:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            "typeName": {
                              "id": 466,
                              "name": "uint48",
                              "nodeType": "ElementaryTypeName",
                              "src": "5960:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 475,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          },
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 468,
                            "name": "currentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 459,
                            "src": "5975:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 471,
                                  "name": "votingDelay",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 329,
                                  "src": "5996:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                    "typeString": "function () pure returns (uint256)"
                                  }
                                },
                                "id": 472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5996:13:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5989:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint48_$",
                                "typeString": "type(uint48)"
                              },
                              "typeName": {
                                "id": 469,
                                "name": "uint48",
                                "nodeType": "ElementaryTypeName",
                                "src": "5989:6:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5989:21:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "src": "5975:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5960:50:2"
                      },
                      {
                        "assignments": [
                          477
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 477,
                            "mutability": "mutable",
                            "name": "end",
                            "nameLocation": "6027:3:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 530,
                            "src": "6020:10:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            "typeName": {
                              "id": 476,
                              "name": "uint48",
                              "nodeType": "ElementaryTypeName",
                              "src": "6020:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 485,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          },
                          "id": 484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 478,
                            "name": "start",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "6033:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 481,
                                  "name": "votingPeriod",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 338,
                                  "src": "6048:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                    "typeString": "function () pure returns (uint256)"
                                  }
                                },
                                "id": 482,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6048:14:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6041:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint48_$",
                                "typeString": "type(uint48)"
                              },
                              "typeName": {
                                "id": 479,
                                "name": "uint48",
                                "nodeType": "ElementaryTypeName",
                                "src": "6041:6:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6041:22:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "src": "6033:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6020:43:2"
                      },
                      {
                        "assignments": [
                          487
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 487,
                            "mutability": "mutable",
                            "name": "_data",
                            "nameLocation": "6086:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 530,
                            "src": "6073:18:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 486,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "6073:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 491,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 489,
                              "name": "_newMember",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 451,
                              "src": "6102:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 488,
                            "name": "toBytes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1063,
                            "src": "6094:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address) pure returns (bytes memory)"
                            }
                          },
                          "id": 490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6094:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6073:40:2"
                      },
                      {
                        "expression": {
                          "id": 510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 492,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 266,
                              "src": "6123:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$246_storage_$",
                                "typeString": "mapping(uint256 => struct FinCubeDAO.Proposal storage ref)"
                              }
                            },
                            "id": 494,
                            "indexExpression": {
                              "id": 493,
                              "name": "proposalCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 214,
                              "src": "6133:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6123:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$246_storage",
                              "typeString": "struct FinCubeDAO.Proposal storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 496,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6183:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6187:6:2",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "6183:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 498,
                                "name": "start",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 467,
                                "src": "6218:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              },
                              {
                                "id": 499,
                                "name": "end",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 477,
                                "src": "6251:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 500,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6278:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 501,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6307:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "id": 502,
                                "name": "_data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 487,
                                "src": "6332:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "307864656164",
                                    "id": 505,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6367:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_57005_by_1",
                                      "typeString": "int_const 57005"
                                    },
                                    "value": "0xdead"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_57005_by_1",
                                      "typeString": "int_const 57005"
                                    }
                                  ],
                                  "id": 504,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6359:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 503,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6359:7:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 506,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6359:15:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 507,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6398:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 508,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6422:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                },
                                {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 495,
                              "name": "Proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 246,
                              "src": "6150:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Proposal_$246_storage_ptr_$",
                                "typeString": "type(struct FinCubeDAO.Proposal storage pointer)"
                              }
                            },
                            "id": 509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "6173:8:2",
                              "6207:9:2",
                              "6237:12:2",
                              "6268:8:2",
                              "6297:8:2",
                              "6326:4:2",
                              "6351:6:2",
                              "6388:8:2",
                              "6413:7:2"
                            ],
                            "names": [
                              "proposer",
                              "voteStart",
                              "voteDuration",
                              "executed",
                              "canceled",
                              "data",
                              "target",
                              "yesvotes",
                              "novotes"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "6150:284:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$246_memory_ptr",
                              "typeString": "struct FinCubeDAO.Proposal memory"
                            }
                          },
                          "src": "6123:311:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$246_storage",
                            "typeString": "struct FinCubeDAO.Proposal storage ref"
                          }
                        },
                        "id": 511,
                        "nodeType": "ExpressionStatement",
                        "src": "6123:311:2"
                      },
                      {
                        "expression": {
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 512,
                              "name": "proposalType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 276,
                              "src": "6444:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_ProposalType_$226_$",
                                "typeString": "mapping(uint256 => enum FinCubeDAO.ProposalType)"
                              }
                            },
                            "id": 514,
                            "indexExpression": {
                              "id": 513,
                              "name": "proposalCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 214,
                              "src": "6457:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6444:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalType_$226",
                              "typeString": "enum FinCubeDAO.ProposalType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 515,
                              "name": "ProposalType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 226,
                              "src": "6474:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalType_$226_$",
                                "typeString": "type(enum FinCubeDAO.ProposalType)"
                              }
                            },
                            "id": 516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6487:17:2",
                            "memberName": "NewMemberProposal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 224,
                            "src": "6474:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalType_$226",
                              "typeString": "enum FinCubeDAO.ProposalType"
                            }
                          },
                          "src": "6444:60:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalType_$226",
                            "typeString": "enum FinCubeDAO.ProposalType"
                          }
                        },
                        "id": 518,
                        "nodeType": "ExpressionStatement",
                        "src": "6444:60:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 520,
                              "name": "proposalCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 214,
                              "src": "6548:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 521,
                                "name": "ProposalType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 226,
                                "src": "6575:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ProposalType_$226_$",
                                  "typeString": "type(enum FinCubeDAO.ProposalType)"
                                }
                              },
                              "id": 522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "6588:17:2",
                              "memberName": "NewMemberProposal",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 224,
                              "src": "6575:30:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalType_$226",
                                "typeString": "enum FinCubeDAO.ProposalType"
                              }
                            },
                            {
                              "id": 523,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 487,
                              "src": "6619:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_ProposalType_$226",
                                "typeString": "enum FinCubeDAO.ProposalType"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 519,
                            "name": "ProposalCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "6519:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_ProposalType_$226_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,enum FinCubeDAO.ProposalType,bytes memory)"
                            }
                          },
                          "id": 524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6519:115:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 525,
                        "nodeType": "EmitStatement",
                        "src": "6514:120:2"
                      },
                      {
                        "id": 529,
                        "nodeType": "UncheckedBlock",
                        "src": "6644:50:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 527,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "6668:15:2",
                              "subExpression": {
                                "id": 526,
                                "name": "proposalCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 214,
                                "src": "6668:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 528,
                            "nodeType": "ExpressionStatement",
                            "src": "6668:15:2"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 449,
                    "nodeType": "StructuredDocumentation",
                    "src": "5574:216:2",
                    "text": " @notice Creates a new proposal for approving a new member.\n @dev This function can only be called by an existing member.\n @param _newMember The address of the new member to be approved."
                  },
                  "functionSelector": "18a41aec",
                  "id": 531,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 454,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5884:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5888:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5884:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 456,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 453,
                        "name": "onlyMember",
                        "nameLocations": [
                          "5873:10:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 409,
                        "src": "5873:10:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5873:22:2"
                    }
                  ],
                  "name": "newMemberApprovalProposal",
                  "nameLocation": "5804:25:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 452,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 451,
                        "mutability": "mutable",
                        "name": "_newMember",
                        "nameLocation": "5847:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 531,
                        "src": "5839:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 450,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5839:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5829:34:2"
                  },
                  "returnParameters": {
                    "id": 457,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5896:0:2"
                  },
                  "scope": 1082,
                  "src": "5795:905:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 606,
                    "nodeType": "Block",
                    "src": "7161:750:2",
                    "statements": [
                      {
                        "assignments": [
                          544
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 544,
                            "mutability": "mutable",
                            "name": "currentTime",
                            "nameLocation": "7178:11:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 606,
                            "src": "7171:18:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            "typeName": {
                              "id": 543,
                              "name": "uint48",
                              "nodeType": "ElementaryTypeName",
                              "src": "7171:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 550,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 547,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7199:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7205:9:2",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "7199:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7192:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint48_$",
                              "typeString": "type(uint48)"
                            },
                            "typeName": {
                              "id": 545,
                              "name": "uint48",
                              "nodeType": "ElementaryTypeName",
                              "src": "7192:6:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7192:23:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7171:44:2"
                      },
                      {
                        "assignments": [
                          552
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 552,
                            "mutability": "mutable",
                            "name": "start",
                            "nameLocation": "7232:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 606,
                            "src": "7225:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            "typeName": {
                              "id": 551,
                              "name": "uint48",
                              "nodeType": "ElementaryTypeName",
                              "src": "7225:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 560,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          },
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 553,
                            "name": "currentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 544,
                            "src": "7240:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 556,
                                  "name": "votingDelay",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 329,
                                  "src": "7261:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                    "typeString": "function () pure returns (uint256)"
                                  }
                                },
                                "id": 557,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7261:13:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7254:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint48_$",
                                "typeString": "type(uint48)"
                              },
                              "typeName": {
                                "id": 554,
                                "name": "uint48",
                                "nodeType": "ElementaryTypeName",
                                "src": "7254:6:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7254:21:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "src": "7240:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7225:50:2"
                      },
                      {
                        "assignments": [
                          562
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 562,
                            "mutability": "mutable",
                            "name": "end",
                            "nameLocation": "7292:3:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 606,
                            "src": "7285:10:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            "typeName": {
                              "id": 561,
                              "name": "uint48",
                              "nodeType": "ElementaryTypeName",
                              "src": "7285:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 570,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          },
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 563,
                            "name": "start",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 552,
                            "src": "7298:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 566,
                                  "name": "votingPeriod",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 338,
                                  "src": "7313:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                    "typeString": "function () pure returns (uint256)"
                                  }
                                },
                                "id": 567,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7313:14:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7306:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint48_$",
                                "typeString": "type(uint48)"
                              },
                              "typeName": {
                                "id": 564,
                                "name": "uint48",
                                "nodeType": "ElementaryTypeName",
                                "src": "7306:6:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7306:22:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "src": "7298:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7285:43:2"
                      },
                      {
                        "expression": {
                          "id": 586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 571,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 266,
                              "src": "7338:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$246_storage_$",
                                "typeString": "mapping(uint256 => struct FinCubeDAO.Proposal storage ref)"
                              }
                            },
                            "id": 573,
                            "indexExpression": {
                              "id": 572,
                              "name": "proposalCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 214,
                              "src": "7348:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7338:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$246_storage",
                              "typeString": "struct FinCubeDAO.Proposal storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 575,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "7398:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7402:6:2",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "7398:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 577,
                                "name": "start",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 552,
                                "src": "7433:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              },
                              {
                                "id": 578,
                                "name": "end",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 562,
                                "src": "7466:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 579,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7493:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7522:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "id": 581,
                                "name": "_calldata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 534,
                                "src": "7547:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 582,
                                "name": "_target",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 536,
                                "src": "7578:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7609:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 584,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7633:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                },
                                {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 574,
                              "name": "Proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 246,
                              "src": "7365:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Proposal_$246_storage_ptr_$",
                                "typeString": "type(struct FinCubeDAO.Proposal storage pointer)"
                              }
                            },
                            "id": 585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "7388:8:2",
                              "7422:9:2",
                              "7452:12:2",
                              "7483:8:2",
                              "7512:8:2",
                              "7541:4:2",
                              "7570:6:2",
                              "7599:8:2",
                              "7624:7:2"
                            ],
                            "names": [
                              "proposer",
                              "voteStart",
                              "voteDuration",
                              "executed",
                              "canceled",
                              "data",
                              "target",
                              "yesvotes",
                              "novotes"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "7365:280:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$246_memory_ptr",
                              "typeString": "struct FinCubeDAO.Proposal memory"
                            }
                          },
                          "src": "7338:307:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$246_storage",
                            "typeString": "struct FinCubeDAO.Proposal storage ref"
                          }
                        },
                        "id": 587,
                        "nodeType": "ExpressionStatement",
                        "src": "7338:307:2"
                      },
                      {
                        "expression": {
                          "id": 593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 588,
                              "name": "proposalType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 276,
                              "src": "7655:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_ProposalType_$226_$",
                                "typeString": "mapping(uint256 => enum FinCubeDAO.ProposalType)"
                              }
                            },
                            "id": 590,
                            "indexExpression": {
                              "id": 589,
                              "name": "proposalCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 214,
                              "src": "7668:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7655:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalType_$226",
                              "typeString": "enum FinCubeDAO.ProposalType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 591,
                              "name": "ProposalType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 226,
                              "src": "7685:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalType_$226_$",
                                "typeString": "type(enum FinCubeDAO.ProposalType)"
                              }
                            },
                            "id": 592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "7698:15:2",
                            "memberName": "GeneralProposal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 225,
                            "src": "7685:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalType_$226",
                              "typeString": "enum FinCubeDAO.ProposalType"
                            }
                          },
                          "src": "7655:58:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalType_$226",
                            "typeString": "enum FinCubeDAO.ProposalType"
                          }
                        },
                        "id": 594,
                        "nodeType": "ExpressionStatement",
                        "src": "7655:58:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 596,
                              "name": "proposalCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 214,
                              "src": "7757:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 597,
                                "name": "ProposalType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 226,
                                "src": "7784:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ProposalType_$226_$",
                                  "typeString": "type(enum FinCubeDAO.ProposalType)"
                                }
                              },
                              "id": 598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "7797:15:2",
                              "memberName": "GeneralProposal",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 225,
                              "src": "7784:28:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalType_$226",
                                "typeString": "enum FinCubeDAO.ProposalType"
                              }
                            },
                            {
                              "id": 599,
                              "name": "_calldata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "7826:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_ProposalType_$226",
                                "typeString": "enum FinCubeDAO.ProposalType"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 595,
                            "name": "ProposalCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "7728:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_ProposalType_$226_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,enum FinCubeDAO.ProposalType,bytes memory)"
                            }
                          },
                          "id": 600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7728:117:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 601,
                        "nodeType": "EmitStatement",
                        "src": "7723:122:2"
                      },
                      {
                        "id": 605,
                        "nodeType": "UncheckedBlock",
                        "src": "7855:50:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "7879:15:2",
                              "subExpression": {
                                "id": 602,
                                "name": "proposalCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 214,
                                "src": "7879:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 604,
                            "nodeType": "ExpressionStatement",
                            "src": "7879:15:2"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 532,
                    "nodeType": "StructuredDocumentation",
                    "src": "6706:334:2",
                    "text": " @notice Creates a new proposal. This is a generalized proposal which can invoke any public function of any contract using calldata.\n @dev This function can only be called by an existing member.\n @param _calldata the calldata of function to be invoked. _target the address of contract having the function"
                  },
                  "functionSelector": "756a4ba3",
                  "id": 607,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 539,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7149:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7153:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7149:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 541,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 538,
                        "name": "onlyMember",
                        "nameLocations": [
                          "7138:10:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 409,
                        "src": "7138:10:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7138:22:2"
                    }
                  ],
                  "name": "newProposal",
                  "nameLocation": "7054:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 534,
                        "mutability": "mutable",
                        "name": "_calldata",
                        "nameLocation": "7088:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 607,
                        "src": "7075:22:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 533,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7075:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 536,
                        "mutability": "mutable",
                        "name": "_target",
                        "nameLocation": "7115:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 607,
                        "src": "7107:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7107:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7065:63:2"
                  },
                  "returnParameters": {
                    "id": 542,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7161:0:2"
                  },
                  "scope": 1082,
                  "src": "7045:866:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 699,
                    "nodeType": "Block",
                    "src": "8412:765:2",
                    "statements": [
                      {
                        "assignments": [
                          621
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 621,
                            "mutability": "mutable",
                            "name": "votes",
                            "nameLocation": "8444:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 699,
                            "src": "8422:27:2",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalVotes_$256_storage_ptr",
                              "typeString": "struct FinCubeDAO.ProposalVotes"
                            },
                            "typeName": {
                              "id": 620,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 619,
                                "name": "ProposalVotes",
                                "nameLocations": [
                                  "8422:13:2"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 256,
                                "src": "8422:13:2"
                              },
                              "referencedDeclaration": 256,
                              "src": "8422:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ProposalVotes_$256_storage_ptr",
                                "typeString": "struct FinCubeDAO.ProposalVotes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 625,
                        "initialValue": {
                          "baseExpression": {
                            "id": 622,
                            "name": "proposalVotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 271,
                            "src": "8452:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ProposalVotes_$256_storage_$",
                              "typeString": "mapping(uint256 => struct FinCubeDAO.ProposalVotes storage ref)"
                            }
                          },
                          "id": 624,
                          "indexExpression": {
                            "id": 623,
                            "name": "_proposalId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "8466:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8452:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalVotes_$256_storage",
                            "typeString": "struct FinCubeDAO.ProposalVotes storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8422:56:2"
                      },
                      {
                        "assignments": [
                          628
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 628,
                            "mutability": "mutable",
                            "name": "proposal",
                            "nameLocation": "8505:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 699,
                            "src": "8488:25:2",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                              "typeString": "struct FinCubeDAO.Proposal"
                            },
                            "typeName": {
                              "id": 627,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 626,
                                "name": "Proposal",
                                "nameLocations": [
                                  "8488:8:2"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 246,
                                "src": "8488:8:2"
                              },
                              "referencedDeclaration": 246,
                              "src": "8488:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                                "typeString": "struct FinCubeDAO.Proposal"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 632,
                        "initialValue": {
                          "baseExpression": {
                            "id": 629,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "8516:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$246_storage_$",
                              "typeString": "mapping(uint256 => struct FinCubeDAO.Proposal storage ref)"
                            }
                          },
                          "id": 631,
                          "indexExpression": {
                            "id": 630,
                            "name": "_proposalId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "8526:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8516:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$246_storage",
                            "typeString": "struct FinCubeDAO.Proposal storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8488:50:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 638,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 634,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "8570:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 635,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8576:9:2",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "8570:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "expression": {
                                    "id": 636,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 628,
                                    "src": "8588:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                                      "typeString": "struct FinCubeDAO.Proposal storage pointer"
                                    }
                                  },
                                  "id": 637,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8597:9:2",
                                  "memberName": "voteStart",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 239,
                                  "src": "8588:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                },
                                "src": "8570:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 643,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 639,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "8626:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 640,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8632:9:2",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "8626:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 641,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 628,
                                    "src": "8644:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                                      "typeString": "struct FinCubeDAO.Proposal storage pointer"
                                    }
                                  },
                                  "id": 642,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8653:12:2",
                                  "memberName": "voteDuration",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 241,
                                  "src": "8644:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                },
                                "src": "8626:39:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "8570:95:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "566f74696e67206973206e6f7420616c6c6f77656420617420746869732074696d65",
                              "id": 645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8679:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1ff520094f2722719f574911d75c1de55db2c63e3b4c3b886282397905c35e04",
                                "typeString": "literal_string \"Voting is not allowed at this time\""
                              },
                              "value": "Voting is not allowed at this time"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1ff520094f2722719f574911d75c1de55db2c63e3b4c3b886282397905c35e04",
                                "typeString": "literal_string \"Voting is not allowed at this time\""
                              }
                            ],
                            "id": 633,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8549:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8549:176:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 647,
                        "nodeType": "ExpressionStatement",
                        "src": "8549:176:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 654,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "8756:28:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 649,
                                      "name": "votes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 621,
                                      "src": "8757:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ProposalVotes_$256_storage_ptr",
                                        "typeString": "struct FinCubeDAO.ProposalVotes storage pointer"
                                      }
                                    },
                                    "id": 650,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8763:9:2",
                                    "memberName": "isYesVote",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 251,
                                    "src": "8757:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 653,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 651,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "8773:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 652,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8777:6:2",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "8773:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8757:27:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "id": 660,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "8788:27:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 655,
                                      "name": "votes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 621,
                                      "src": "8789:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ProposalVotes_$256_storage_ptr",
                                        "typeString": "struct FinCubeDAO.ProposalVotes storage pointer"
                                      }
                                    },
                                    "id": 656,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8795:8:2",
                                    "memberName": "isNoVote",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 255,
                                    "src": "8789:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 659,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 657,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "8804:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 658,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8808:6:2",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "8804:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8789:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "8756:59:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416c726561647920766f74656420666f7220746869732070726f706f73616c",
                              "id": 662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8829:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8ebabe3ccf5c2f49d1b735f59bd3c0192bcfbdb2c10693c6c90eb8e5d3c1aa34",
                                "typeString": "literal_string \"Already voted for this proposal\""
                              },
                              "value": "Already voted for this proposal"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8ebabe3ccf5c2f49d1b735f59bd3c0192bcfbdb2c10693c6c90eb8e5d3c1aa34",
                                "typeString": "literal_string \"Already voted for this proposal\""
                              }
                            ],
                            "id": 648,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8735:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8735:137:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 664,
                        "nodeType": "ExpressionStatement",
                        "src": "8735:137:2"
                      },
                      {
                        "condition": {
                          "id": 665,
                          "name": "_isYesVote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 612,
                          "src": "8887:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 697,
                          "nodeType": "Block",
                          "src": "9039:132:2",
                          "statements": [
                            {
                              "id": 687,
                              "nodeType": "UncheckedBlock",
                              "src": "9053:61:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 685,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
                                    "src": "9081:18:2",
                                    "subExpression": {
                                      "expression": {
                                        "id": 682,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 628,
                                        "src": "9081:8:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                                          "typeString": "struct FinCubeDAO.Proposal storage pointer"
                                        }
                                      },
                                      "id": 684,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberLocation": "9090:7:2",
                                      "memberName": "novotes",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 245,
                                      "src": "9081:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 686,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9081:18:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "id": 695,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 688,
                                      "name": "votes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 621,
                                      "src": "9127:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ProposalVotes_$256_storage_ptr",
                                        "typeString": "struct FinCubeDAO.ProposalVotes storage pointer"
                                      }
                                    },
                                    "id": 692,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9133:8:2",
                                    "memberName": "isNoVote",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 255,
                                    "src": "9127:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 693,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 690,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "9142:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 691,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9146:6:2",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "9142:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9127:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 694,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9156:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "9127:33:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 696,
                              "nodeType": "ExpressionStatement",
                              "src": "9127:33:2"
                            }
                          ]
                        },
                        "id": 698,
                        "nodeType": "IfStatement",
                        "src": "8883:288:2",
                        "trueBody": {
                          "id": 681,
                          "nodeType": "Block",
                          "src": "8899:134:2",
                          "statements": [
                            {
                              "id": 671,
                              "nodeType": "UncheckedBlock",
                              "src": "8913:62:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 669,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
                                    "src": "8941:19:2",
                                    "subExpression": {
                                      "expression": {
                                        "id": 666,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 628,
                                        "src": "8941:8:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                                          "typeString": "struct FinCubeDAO.Proposal storage pointer"
                                        }
                                      },
                                      "id": 668,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberLocation": "8950:8:2",
                                      "memberName": "yesvotes",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 243,
                                      "src": "8941:17:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 670,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8941:19:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "id": 679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 672,
                                      "name": "votes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 621,
                                      "src": "8988:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ProposalVotes_$256_storage_ptr",
                                        "typeString": "struct FinCubeDAO.ProposalVotes storage pointer"
                                      }
                                    },
                                    "id": 676,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8994:9:2",
                                    "memberName": "isYesVote",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 251,
                                    "src": "8988:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 677,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 674,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "9004:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 675,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9008:6:2",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "9004:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8988:27:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 678,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9018:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "8988:34:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 680,
                              "nodeType": "ExpressionStatement",
                              "src": "8988:34:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 608,
                    "nodeType": "StructuredDocumentation",
                    "src": "7917:379:2",
                    "text": " @notice Casts a vote for a proposal.\n @dev This function can only be called by an existing member. It also checks if the voting period is active and if the member has not already voted for this proposal.\n @param _proposalId The ID of the proposal to vote for.\n @param _isYesVote Whether the vote is a \"yes\" vote (true) or a \"no\" vote (false)."
                  },
                  "functionSelector": "15373e3d",
                  "id": 700,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 615,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8400:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8404:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8400:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 617,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 614,
                        "name": "onlyMember",
                        "nameLocations": [
                          "8389:10:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 409,
                        "src": "8389:10:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8389:22:2"
                    }
                  ],
                  "name": "castVote",
                  "nameLocation": "8311:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 613,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 610,
                        "mutability": "mutable",
                        "name": "_proposalId",
                        "nameLocation": "8337:11:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 700,
                        "src": "8329:19:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 609,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8329:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 612,
                        "mutability": "mutable",
                        "name": "_isYesVote",
                        "nameLocation": "8363:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 700,
                        "src": "8358:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 611,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8358:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8319:60:2"
                  },
                  "returnParameters": {
                    "id": 618,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8412:0:2"
                  },
                  "scope": 1082,
                  "src": "8302:875:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 812,
                    "nodeType": "Block",
                    "src": "9681:1065:2",
                    "statements": [
                      {
                        "assignments": [
                          708
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 708,
                            "mutability": "mutable",
                            "name": "proposal",
                            "nameLocation": "9708:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 812,
                            "src": "9691:25:2",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                              "typeString": "struct FinCubeDAO.Proposal"
                            },
                            "typeName": {
                              "id": 707,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 706,
                                "name": "Proposal",
                                "nameLocations": [
                                  "9691:8:2"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 246,
                                "src": "9691:8:2"
                              },
                              "referencedDeclaration": 246,
                              "src": "9691:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                                "typeString": "struct FinCubeDAO.Proposal"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 712,
                        "initialValue": {
                          "baseExpression": {
                            "id": 709,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "9719:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$246_storage_$",
                              "typeString": "mapping(uint256 => struct FinCubeDAO.Proposal storage ref)"
                            }
                          },
                          "id": 711,
                          "indexExpression": {
                            "id": 710,
                            "name": "proposalId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 703,
                            "src": "9729:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9719:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$246_storage",
                            "typeString": "struct FinCubeDAO.Proposal storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9691:49:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "9771:98:2",
                              "subExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 724,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 718,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 714,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "9773:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 715,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "9779:9:2",
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "9773:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 716,
                                          "name": "proposal",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 708,
                                          "src": "9791:8:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                                            "typeString": "struct FinCubeDAO.Proposal storage pointer"
                                          }
                                        },
                                        "id": 717,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "9800:9:2",
                                        "memberName": "voteStart",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 239,
                                        "src": "9791:18:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint48",
                                          "typeString": "uint48"
                                        }
                                      },
                                      "src": "9773:36:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 723,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 719,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "9829:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 720,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "9835:9:2",
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "9829:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 721,
                                          "name": "proposal",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 708,
                                          "src": "9847:8:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                                            "typeString": "struct FinCubeDAO.Proposal storage pointer"
                                          }
                                        },
                                        "id": 722,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "9856:12:2",
                                        "memberName": "voteDuration",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 241,
                                        "src": "9847:21:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint48",
                                          "typeString": "uint48"
                                        }
                                      },
                                      "src": "9829:39:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "9773:95:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 725,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "9772:97:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "566f74696e67207374696c6c20676f696e67206f6e",
                              "id": 727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9883:23:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5c9009bc8bee59dbb920e11238c507982df9038214a09ed1af52892e51b5ea54",
                                "typeString": "literal_string \"Voting still going on\""
                              },
                              "value": "Voting still going on"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5c9009bc8bee59dbb920e11238c507982df9038214a09ed1af52892e51b5ea54",
                                "typeString": "literal_string \"Voting still going on\""
                              }
                            ],
                            "id": 713,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9750:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9750:166:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 729,
                        "nodeType": "ExpressionStatement",
                        "src": "9750:166:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "9947:18:2",
                                "subExpression": {
                                  "expression": {
                                    "id": 731,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 708,
                                    "src": "9948:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                                      "typeString": "struct FinCubeDAO.Proposal storage pointer"
                                    }
                                  },
                                  "id": 732,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9957:8:2",
                                  "memberName": "executed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 229,
                                  "src": "9948:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "id": 736,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "9969:18:2",
                                "subExpression": {
                                  "expression": {
                                    "id": 734,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 708,
                                    "src": "9970:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                                      "typeString": "struct FinCubeDAO.Proposal storage pointer"
                                    }
                                  },
                                  "id": 735,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9979:8:2",
                                  "memberName": "canceled",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 231,
                                  "src": "9970:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "9947:40:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f706f73616c20616c7265616479206578656375746564206f722063616e63656c6564",
                              "id": 738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10001:39:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1ed80dbd6dca446e698a4eabb0a8cbb85820e26a7b77774a890ffefff2b63d68",
                                "typeString": "literal_string \"Proposal already executed or canceled\""
                              },
                              "value": "Proposal already executed or canceled"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1ed80dbd6dca446e698a4eabb0a8cbb85820e26a7b77774a890ffefff2b63d68",
                                "typeString": "literal_string \"Proposal already executed or canceled\""
                              }
                            ],
                            "id": 730,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9926:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9926:124:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 740,
                        "nodeType": "ExpressionStatement",
                        "src": "9926:124:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 742,
                                  "name": "proposal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 708,
                                  "src": "10081:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                                    "typeString": "struct FinCubeDAO.Proposal storage pointer"
                                  }
                                },
                                "id": 743,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10090:8:2",
                                "memberName": "yesvotes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 243,
                                "src": "10081:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 744,
                                    "name": "proposalThreshold",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 354,
                                    "src": "10101:17:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 745,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10101:19:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 746,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10123:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "10101:23:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10081:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f706f73616c20646f65736e27742068617665206d616a6f7269747920766f7465",
                              "id": 749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10138:37:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d27203fcf6fbbfad1033321a968e800bedd57a10fcf4c94010e362c1f65d2021",
                                "typeString": "literal_string \"Proposal doesn't have majority vote\""
                              },
                              "value": "Proposal doesn't have majority vote"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d27203fcf6fbbfad1033321a968e800bedd57a10fcf4c94010e362c1f65d2021",
                                "typeString": "literal_string \"Proposal doesn't have majority vote\""
                              }
                            ],
                            "id": 741,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10060:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10060:125:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 751,
                        "nodeType": "ExpressionStatement",
                        "src": "10060:125:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ProposalType_$226",
                            "typeString": "enum FinCubeDAO.ProposalType"
                          },
                          "id": 757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 752,
                              "name": "proposalType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 276,
                              "src": "10199:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_ProposalType_$226_$",
                                "typeString": "mapping(uint256 => enum FinCubeDAO.ProposalType)"
                              }
                            },
                            "id": 754,
                            "indexExpression": {
                              "id": 753,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 703,
                              "src": "10212:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10199:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalType_$226",
                              "typeString": "enum FinCubeDAO.ProposalType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 755,
                              "name": "ProposalType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 226,
                              "src": "10227:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalType_$226_$",
                                "typeString": "type(enum FinCubeDAO.ProposalType)"
                              }
                            },
                            "id": 756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10240:17:2",
                            "memberName": "NewMemberProposal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 224,
                            "src": "10227:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalType_$226",
                              "typeString": "enum FinCubeDAO.ProposalType"
                            }
                          },
                          "src": "10199:58:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_ProposalType_$226",
                              "typeString": "enum FinCubeDAO.ProposalType"
                            },
                            "id": 781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 776,
                                "name": "proposalType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 276,
                                "src": "10423:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_ProposalType_$226_$",
                                  "typeString": "mapping(uint256 => enum FinCubeDAO.ProposalType)"
                                }
                              },
                              "id": 778,
                              "indexExpression": {
                                "id": 777,
                                "name": "proposalId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 703,
                                "src": "10436:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10423:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalType_$226",
                                "typeString": "enum FinCubeDAO.ProposalType"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 779,
                                "name": "ProposalType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 226,
                                "src": "10451:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ProposalType_$226_$",
                                  "typeString": "type(enum FinCubeDAO.ProposalType)"
                                }
                              },
                              "id": 780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "10464:15:2",
                              "memberName": "GeneralProposal",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 225,
                              "src": "10451:28:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalType_$226",
                                "typeString": "enum FinCubeDAO.ProposalType"
                              }
                            },
                            "src": "10423:56:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 810,
                          "nodeType": "IfStatement",
                          "src": "10419:321:2",
                          "trueBody": {
                            "id": 809,
                            "nodeType": "Block",
                            "src": "10481:259:2",
                            "statements": [
                              {
                                "assignments": [
                                  783,
                                  null
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 783,
                                    "mutability": "mutable",
                                    "name": "success",
                                    "nameLocation": "10501:7:2",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 809,
                                    "src": "10496:12:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "typeName": {
                                      "id": 782,
                                      "name": "bool",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10496:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "visibility": "internal"
                                  },
                                  null
                                ],
                                "id": 790,
                                "initialValue": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 787,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 708,
                                        "src": "10535:8:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                                          "typeString": "struct FinCubeDAO.Proposal storage pointer"
                                        }
                                      },
                                      "id": 788,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "10544:4:2",
                                      "memberName": "data",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 235,
                                      "src": "10535:13:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage",
                                        "typeString": "bytes storage ref"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_storage",
                                        "typeString": "bytes storage ref"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "id": 784,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 708,
                                        "src": "10514:8:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                                          "typeString": "struct FinCubeDAO.Proposal storage pointer"
                                        }
                                      },
                                      "id": 785,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "10523:6:2",
                                      "memberName": "target",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 237,
                                      "src": "10514:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 786,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "10530:4:2",
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "10514:20:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 789,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10514:35:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "10495:54:2"
                              },
                              {
                                "condition": {
                                  "id": 792,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
                                  "src": "10567:8:2",
                                  "subExpression": {
                                    "id": 791,
                                    "name": "success",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 783,
                                    "src": "10568:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 798,
                                "nodeType": "IfStatement",
                                "src": "10563:82:2",
                                "trueBody": {
                                  "id": 797,
                                  "nodeType": "Block",
                                  "src": "10577:68:2",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "hexValue": "50726f706f73616c20657865637574696f6e206661696c6564",
                                            "id": 794,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "10602:27:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_e5d9f649299ee85783b2616e2f07c28a0fc3d2f87d807d27b247fea0d242005a",
                                              "typeString": "literal_string \"Proposal execution failed\""
                                            },
                                            "value": "Proposal execution failed"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_stringliteral_e5d9f649299ee85783b2616e2f07c28a0fc3d2f87d807d27b247fea0d242005a",
                                              "typeString": "literal_string \"Proposal execution failed\""
                                            }
                                          ],
                                          "id": 793,
                                          "name": "revert",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [
                                            -19,
                                            -19
                                          ],
                                          "referencedDeclaration": -19,
                                          "src": "10595:6:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                            "typeString": "function (string memory) pure"
                                          }
                                        },
                                        "id": 795,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "10595:35:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 796,
                                      "nodeType": "ExpressionStatement",
                                      "src": "10595:35:2"
                                    }
                                  ]
                                }
                              },
                              {
                                "expression": {
                                  "id": 803,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "expression": {
                                      "id": 799,
                                      "name": "proposal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 708,
                                      "src": "10658:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                                        "typeString": "struct FinCubeDAO.Proposal storage pointer"
                                      }
                                    },
                                    "id": 801,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberLocation": "10667:8:2",
                                    "memberName": "executed",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 229,
                                    "src": "10658:17:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "74727565",
                                    "id": 802,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10678:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  "src": "10658:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 804,
                                "nodeType": "ExpressionStatement",
                                "src": "10658:24:2"
                              },
                              {
                                "eventCall": {
                                  "arguments": [
                                    {
                                      "id": 806,
                                      "name": "proposalId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 703,
                                      "src": "10718:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 805,
                                    "name": "ProposalExecuted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 206,
                                    "src": "10701:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                                      "typeString": "function (uint256)"
                                    }
                                  },
                                  "id": 807,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10701:28:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 808,
                                "nodeType": "EmitStatement",
                                "src": "10696:33:2"
                              }
                            ]
                          }
                        },
                        "id": 811,
                        "nodeType": "IfStatement",
                        "src": "10195:545:2",
                        "trueBody": {
                          "id": 775,
                          "nodeType": "Block",
                          "src": "10259:154:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 760,
                                          "name": "proposal",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 708,
                                          "src": "10302:8:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                                            "typeString": "struct FinCubeDAO.Proposal storage pointer"
                                          }
                                        },
                                        "id": 761,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "10311:4:2",
                                        "memberName": "data",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 235,
                                        "src": "10302:13:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_storage",
                                          "typeString": "bytes storage ref"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_storage",
                                          "typeString": "bytes storage ref"
                                        }
                                      ],
                                      "id": 759,
                                      "name": "bytesToAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1049,
                                      "src": "10287:14:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$",
                                        "typeString": "function (bytes memory) pure returns (address)"
                                      }
                                    },
                                    "id": 762,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10287:29:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 758,
                                  "name": "approveMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1039,
                                  "src": "10273:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 763,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10273:44:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 764,
                              "nodeType": "ExpressionStatement",
                              "src": "10273:44:2"
                            },
                            {
                              "expression": {
                                "id": 769,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 765,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 708,
                                    "src": "10331:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                                      "typeString": "struct FinCubeDAO.Proposal storage pointer"
                                    }
                                  },
                                  "id": 767,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "10340:8:2",
                                  "memberName": "executed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 229,
                                  "src": "10331:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 768,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10351:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "10331:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 770,
                              "nodeType": "ExpressionStatement",
                              "src": "10331:24:2"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 772,
                                    "name": "proposalId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 703,
                                    "src": "10391:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 771,
                                  "name": "ProposalExecuted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 206,
                                  "src": "10374:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 773,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10374:28:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 774,
                              "nodeType": "EmitStatement",
                              "src": "10369:33:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 701,
                    "nodeType": "StructuredDocumentation",
                    "src": "9183:441:2",
                    "text": " @notice Executes a proposal if it meets the requirements.\n @dev This function checks if the voting period has ended, if the proposal has not been executed or canceled, and if the proposal has received enough \"yes\" votes to meet the proposal threshold. It then executes the proposal based on its type (approving a new member or setting a token address).\n @param proposalId The ID of the proposal to be executed."
                  },
                  "functionSelector": "0d61b519",
                  "id": 813,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "executeProposal",
                  "nameLocation": "9638:15:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 704,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 703,
                        "mutability": "mutable",
                        "name": "proposalId",
                        "nameLocation": "9662:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 813,
                        "src": "9654:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 702,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9654:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9653:20:2"
                  },
                  "returnParameters": {
                    "id": 705,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9681:0:2"
                  },
                  "scope": 1082,
                  "src": "9629:1117:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 871,
                    "nodeType": "Block",
                    "src": "11156:542:2",
                    "statements": [
                      {
                        "assignments": [
                          820
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 820,
                            "mutability": "mutable",
                            "name": "count",
                            "nameLocation": "11174:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 871,
                            "src": "11166:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 819,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11166:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 822,
                        "initialValue": {
                          "id": 821,
                          "name": "proposalCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 214,
                          "src": "11182:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11166:29:2"
                      },
                      {
                        "assignments": [
                          824
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 824,
                            "mutability": "mutable",
                            "name": "currentTimestamp",
                            "nameLocation": "11213:16:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 871,
                            "src": "11205:24:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 823,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11205:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 827,
                        "initialValue": {
                          "expression": {
                            "id": 825,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11232:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11238:9:2",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11232:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11205:42:2"
                      },
                      {
                        "body": {
                          "id": 869,
                          "nodeType": "Block",
                          "src": "11287:405:2",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 858,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 851,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 844,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 838,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "!",
                                      "prefix": true,
                                      "src": "11322:22:2",
                                      "subExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 834,
                                            "name": "proposals",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 266,
                                            "src": "11323:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$246_storage_$",
                                              "typeString": "mapping(uint256 => struct FinCubeDAO.Proposal storage ref)"
                                            }
                                          },
                                          "id": 836,
                                          "indexExpression": {
                                            "id": 835,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 829,
                                            "src": "11333:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "11323:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Proposal_$246_storage",
                                            "typeString": "struct FinCubeDAO.Proposal storage ref"
                                          }
                                        },
                                        "id": 837,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "11336:8:2",
                                        "memberName": "executed",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 229,
                                        "src": "11323:21:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "id": 843,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "!",
                                      "prefix": true,
                                      "src": "11364:22:2",
                                      "subExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 839,
                                            "name": "proposals",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 266,
                                            "src": "11365:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$246_storage_$",
                                              "typeString": "mapping(uint256 => struct FinCubeDAO.Proposal storage ref)"
                                            }
                                          },
                                          "id": 841,
                                          "indexExpression": {
                                            "id": 840,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 829,
                                            "src": "11375:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "11365:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Proposal_$246_storage",
                                            "typeString": "struct FinCubeDAO.Proposal storage ref"
                                          }
                                        },
                                        "id": 842,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "11378:8:2",
                                        "memberName": "canceled",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 231,
                                        "src": "11365:21:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "11322:64:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 850,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 845,
                                      "name": "currentTimestamp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 824,
                                      "src": "11406:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 846,
                                          "name": "proposals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 266,
                                          "src": "11425:9:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$246_storage_$",
                                            "typeString": "mapping(uint256 => struct FinCubeDAO.Proposal storage ref)"
                                          }
                                        },
                                        "id": 848,
                                        "indexExpression": {
                                          "id": 847,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 829,
                                          "src": "11435:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "11425:12:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$246_storage",
                                          "typeString": "struct FinCubeDAO.Proposal storage ref"
                                        }
                                      },
                                      "id": 849,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "11438:9:2",
                                      "memberName": "voteStart",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 239,
                                      "src": "11425:22:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint48",
                                        "typeString": "uint48"
                                      }
                                    },
                                    "src": "11406:41:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "11322:125:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 857,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 852,
                                    "name": "currentTimestamp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 824,
                                    "src": "11467:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 853,
                                        "name": "proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 266,
                                        "src": "11486:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$246_storage_$",
                                          "typeString": "mapping(uint256 => struct FinCubeDAO.Proposal storage ref)"
                                        }
                                      },
                                      "id": 855,
                                      "indexExpression": {
                                        "id": 854,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 829,
                                        "src": "11496:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "11486:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$246_storage",
                                        "typeString": "struct FinCubeDAO.Proposal storage ref"
                                      }
                                    },
                                    "id": 856,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "11499:12:2",
                                    "memberName": "voteDuration",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 241,
                                    "src": "11486:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint48",
                                      "typeString": "uint48"
                                    }
                                  },
                                  "src": "11467:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "11322:189:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 864,
                              "nodeType": "IfStatement",
                              "src": "11301:322:2",
                              "trueBody": {
                                "id": 863,
                                "nodeType": "Block",
                                "src": "11526:97:2",
                                "statements": [
                                  {
                                    "id": 862,
                                    "nodeType": "UncheckedBlock",
                                    "src": "11544:65:2",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 860,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "UnaryOperation",
                                          "operator": "++",
                                          "prefix": false,
                                          "src": "11576:14:2",
                                          "subExpression": {
                                            "id": 859,
                                            "name": "ongoingCount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 817,
                                            "src": "11576:12:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 861,
                                        "nodeType": "ExpressionStatement",
                                        "src": "11576:14:2"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "id": 868,
                              "nodeType": "UncheckedBlock",
                              "src": "11636:46:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 866,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "11664:3:2",
                                    "subExpression": {
                                      "id": 865,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 829,
                                      "src": "11666:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 867,
                                  "nodeType": "ExpressionStatement",
                                  "src": "11664:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 831,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 829,
                            "src": "11274:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 832,
                            "name": "count",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 820,
                            "src": "11278:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11274:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 870,
                        "initializationExpression": {
                          "assignments": [
                            829
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 829,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "11271:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 870,
                              "src": "11263:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 828,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11263:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 830,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11263:9:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "11258:434:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 814,
                    "nodeType": "StructuredDocumentation",
                    "src": "10752:291:2",
                    "text": " @notice Returns the count of ongoing proposals.\n @dev This function iterates through the proposals mapping and counts the proposals that have not been executed or canceled and are within the voting period.\n @return  ongoingCount The count of ongoing proposals."
                  },
                  "functionSelector": "27f5884b",
                  "id": 872,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getOngoingProposalsCount",
                  "nameLocation": "11058:24:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 815,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11082:2:2"
                  },
                  "returnParameters": {
                    "id": 818,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 817,
                        "mutability": "mutable",
                        "name": "ongoingCount",
                        "nameLocation": "11138:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 872,
                        "src": "11130:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 816,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11130:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11129:22:2"
                  },
                  "scope": 1082,
                  "src": "11049:649:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 959,
                    "nodeType": "Block",
                    "src": "12091:779:2",
                    "statements": [
                      {
                        "assignments": [
                          881
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 881,
                            "mutability": "mutable",
                            "name": "ongoingCount",
                            "nameLocation": "12109:12:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 959,
                            "src": "12101:20:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 880,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12101:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 884,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 882,
                            "name": "getOngoingProposalsCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 872,
                            "src": "12124:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12124:26:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12101:49:2"
                      },
                      {
                        "assignments": [
                          889
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 889,
                            "mutability": "mutable",
                            "name": "ongoingProposals",
                            "nameLocation": "12178:16:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 959,
                            "src": "12160:34:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Proposal_$246_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct FinCubeDAO.Proposal[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 887,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 886,
                                  "name": "Proposal",
                                  "nameLocations": [
                                    "12160:8:2"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 246,
                                  "src": "12160:8:2"
                                },
                                "referencedDeclaration": 246,
                                "src": "12160:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                                  "typeString": "struct FinCubeDAO.Proposal"
                                }
                              },
                              "id": 888,
                              "nodeType": "ArrayTypeName",
                              "src": "12160:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Proposal_$246_storage_$dyn_storage_ptr",
                                "typeString": "struct FinCubeDAO.Proposal[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 896,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 894,
                              "name": "ongoingCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 881,
                              "src": "12212:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "12197:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Proposal_$246_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct FinCubeDAO.Proposal memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 891,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 890,
                                  "name": "Proposal",
                                  "nameLocations": [
                                    "12201:8:2"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 246,
                                  "src": "12201:8:2"
                                },
                                "referencedDeclaration": 246,
                                "src": "12201:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                                  "typeString": "struct FinCubeDAO.Proposal"
                                }
                              },
                              "id": 892,
                              "nodeType": "ArrayTypeName",
                              "src": "12201:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Proposal_$246_storage_$dyn_storage_ptr",
                                "typeString": "struct FinCubeDAO.Proposal[]"
                              }
                            }
                          },
                          "id": 895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12197:28:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Proposal_$246_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct FinCubeDAO.Proposal memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12160:65:2"
                      },
                      {
                        "assignments": [
                          898
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 898,
                            "mutability": "mutable",
                            "name": "currentTimestamp",
                            "nameLocation": "12243:16:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 959,
                            "src": "12235:24:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 897,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12235:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 901,
                        "initialValue": {
                          "expression": {
                            "id": 899,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12262:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12268:9:2",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12262:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12235:42:2"
                      },
                      {
                        "assignments": [
                          903
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 903,
                            "mutability": "mutable",
                            "name": "index",
                            "nameLocation": "12320:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 959,
                            "src": "12312:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 902,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12312:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 905,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12328:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12312:17:2"
                      },
                      {
                        "body": {
                          "id": 955,
                          "nodeType": "Block",
                          "src": "12376:454:2",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 936,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 929,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 922,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 916,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "!",
                                      "prefix": true,
                                      "src": "12411:22:2",
                                      "subExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 912,
                                            "name": "proposals",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 266,
                                            "src": "12412:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$246_storage_$",
                                              "typeString": "mapping(uint256 => struct FinCubeDAO.Proposal storage ref)"
                                            }
                                          },
                                          "id": 914,
                                          "indexExpression": {
                                            "id": 913,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 907,
                                            "src": "12422:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "12412:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Proposal_$246_storage",
                                            "typeString": "struct FinCubeDAO.Proposal storage ref"
                                          }
                                        },
                                        "id": 915,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "12425:8:2",
                                        "memberName": "executed",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 229,
                                        "src": "12412:21:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "id": 921,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "!",
                                      "prefix": true,
                                      "src": "12453:22:2",
                                      "subExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 917,
                                            "name": "proposals",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 266,
                                            "src": "12454:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$246_storage_$",
                                              "typeString": "mapping(uint256 => struct FinCubeDAO.Proposal storage ref)"
                                            }
                                          },
                                          "id": 919,
                                          "indexExpression": {
                                            "id": 918,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 907,
                                            "src": "12464:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "12454:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Proposal_$246_storage",
                                            "typeString": "struct FinCubeDAO.Proposal storage ref"
                                          }
                                        },
                                        "id": 920,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "12467:8:2",
                                        "memberName": "canceled",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 231,
                                        "src": "12454:21:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "12411:64:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 928,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 923,
                                      "name": "currentTimestamp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 898,
                                      "src": "12495:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 924,
                                          "name": "proposals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 266,
                                          "src": "12514:9:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$246_storage_$",
                                            "typeString": "mapping(uint256 => struct FinCubeDAO.Proposal storage ref)"
                                          }
                                        },
                                        "id": 926,
                                        "indexExpression": {
                                          "id": 925,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 907,
                                          "src": "12524:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "12514:12:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$246_storage",
                                          "typeString": "struct FinCubeDAO.Proposal storage ref"
                                        }
                                      },
                                      "id": 927,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "12527:9:2",
                                      "memberName": "voteStart",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 239,
                                      "src": "12514:22:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint48",
                                        "typeString": "uint48"
                                      }
                                    },
                                    "src": "12495:41:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "12411:125:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 935,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 930,
                                    "name": "currentTimestamp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 898,
                                    "src": "12556:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 931,
                                        "name": "proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 266,
                                        "src": "12575:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$246_storage_$",
                                          "typeString": "mapping(uint256 => struct FinCubeDAO.Proposal storage ref)"
                                        }
                                      },
                                      "id": 933,
                                      "indexExpression": {
                                        "id": 932,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 907,
                                        "src": "12585:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "12575:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$246_storage",
                                        "typeString": "struct FinCubeDAO.Proposal storage ref"
                                      }
                                    },
                                    "id": 934,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "12588:12:2",
                                    "memberName": "voteDuration",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 241,
                                    "src": "12575:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint48",
                                      "typeString": "uint48"
                                    }
                                  },
                                  "src": "12556:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "12411:189:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 950,
                              "nodeType": "IfStatement",
                              "src": "12390:371:2",
                              "trueBody": {
                                "id": 949,
                                "nodeType": "Block",
                                "src": "12615:146:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 943,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 937,
                                          "name": "ongoingProposals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 889,
                                          "src": "12633:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Proposal_$246_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct FinCubeDAO.Proposal memory[] memory"
                                          }
                                        },
                                        "id": 939,
                                        "indexExpression": {
                                          "id": 938,
                                          "name": "index",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 903,
                                          "src": "12650:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "12633:23:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$246_memory_ptr",
                                          "typeString": "struct FinCubeDAO.Proposal memory"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 940,
                                          "name": "proposals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 266,
                                          "src": "12659:9:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$246_storage_$",
                                            "typeString": "mapping(uint256 => struct FinCubeDAO.Proposal storage ref)"
                                          }
                                        },
                                        "id": 942,
                                        "indexExpression": {
                                          "id": 941,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 907,
                                          "src": "12669:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "12659:12:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$246_storage",
                                          "typeString": "struct FinCubeDAO.Proposal storage ref"
                                        }
                                      },
                                      "src": "12633:38:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$246_memory_ptr",
                                        "typeString": "struct FinCubeDAO.Proposal memory"
                                      }
                                    },
                                    "id": 944,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12633:38:2"
                                  },
                                  {
                                    "id": 948,
                                    "nodeType": "UncheckedBlock",
                                    "src": "12689:58:2",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 946,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "UnaryOperation",
                                          "operator": "++",
                                          "prefix": false,
                                          "src": "12721:7:2",
                                          "subExpression": {
                                            "id": 945,
                                            "name": "index",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 903,
                                            "src": "12721:5:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 947,
                                        "nodeType": "ExpressionStatement",
                                        "src": "12721:7:2"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "id": 954,
                              "nodeType": "UncheckedBlock",
                              "src": "12774:46:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 952,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "12802:3:2",
                                    "subExpression": {
                                      "id": 951,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 907,
                                      "src": "12804:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 953,
                                  "nodeType": "ExpressionStatement",
                                  "src": "12802:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 909,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 907,
                            "src": "12355:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 910,
                            "name": "proposalCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "12359:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12355:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 956,
                        "initializationExpression": {
                          "assignments": [
                            907
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 907,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "12352:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 956,
                              "src": "12344:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 906,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "12344:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 908,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "12344:9:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "12339:491:2"
                      },
                      {
                        "expression": {
                          "id": 957,
                          "name": "ongoingProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 889,
                          "src": "12847:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Proposal_$246_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct FinCubeDAO.Proposal memory[] memory"
                          }
                        },
                        "functionReturnParameters": 879,
                        "id": 958,
                        "nodeType": "Return",
                        "src": "12840:23:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 873,
                    "nodeType": "StructuredDocumentation",
                    "src": "11704:310:2",
                    "text": " @notice Returns an array of ongoing proposals.\n @dev This function first calls `getOngoingProposalsCount` to get the count of ongoing proposals, then iterates through the proposals mapping and populates an array with the ongoing proposals.\n @return An array of ongoing proposals."
                  },
                  "functionSelector": "afe666f6",
                  "id": 960,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getOngoingProposals",
                  "nameLocation": "12029:19:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 874,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12048:2:2"
                  },
                  "returnParameters": {
                    "id": 879,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 878,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 960,
                        "src": "12072:17:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Proposal_$246_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct FinCubeDAO.Proposal[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 876,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 875,
                              "name": "Proposal",
                              "nameLocations": [
                                "12072:8:2"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 246,
                              "src": "12072:8:2"
                            },
                            "referencedDeclaration": 246,
                            "src": "12072:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                              "typeString": "struct FinCubeDAO.Proposal"
                            }
                          },
                          "id": 877,
                          "nodeType": "ArrayTypeName",
                          "src": "12072:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Proposal_$246_storage_$dyn_storage_ptr",
                            "typeString": "struct FinCubeDAO.Proposal[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12071:19:2"
                  },
                  "scope": 1082,
                  "src": "12020:850:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1007,
                    "nodeType": "Block",
                    "src": "13251:397:2",
                    "statements": [
                      {
                        "assignments": [
                          972
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 972,
                            "mutability": "mutable",
                            "name": "proposal",
                            "nameLocation": "13278:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1007,
                            "src": "13261:25:2",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                              "typeString": "struct FinCubeDAO.Proposal"
                            },
                            "typeName": {
                              "id": 971,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 970,
                                "name": "Proposal",
                                "nameLocations": [
                                  "13261:8:2"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 246,
                                "src": "13261:8:2"
                              },
                              "referencedDeclaration": 246,
                              "src": "13261:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                                "typeString": "struct FinCubeDAO.Proposal"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 976,
                        "initialValue": {
                          "baseExpression": {
                            "id": 973,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "13289:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$246_storage_$",
                              "typeString": "mapping(uint256 => struct FinCubeDAO.Proposal storage ref)"
                            }
                          },
                          "id": 975,
                          "indexExpression": {
                            "id": 974,
                            "name": "proposalId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 963,
                            "src": "13299:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13289:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$246_storage",
                            "typeString": "struct FinCubeDAO.Proposal storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13261:49:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 982,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 978,
                                  "name": "proposal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 972,
                                  "src": "13341:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                                    "typeString": "struct FinCubeDAO.Proposal storage pointer"
                                  }
                                },
                                "id": 979,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13350:8:2",
                                "memberName": "proposer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 233,
                                "src": "13341:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 980,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "13362:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 981,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13366:6:2",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "13362:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "13341:31:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f207065726d697373696f6e20746f2063616e63656c2070726f706f73616c",
                              "id": 983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13386:34:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c63b1fb7949d1c007ce3b16ca28881aa200a07170d86eb2bba9d2376166ca211",
                                "typeString": "literal_string \"No permission to cancel proposal\""
                              },
                              "value": "No permission to cancel proposal"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c63b1fb7949d1c007ce3b16ca28881aa200a07170d86eb2bba9d2376166ca211",
                                "typeString": "literal_string \"No permission to cancel proposal\""
                              }
                            ],
                            "id": 977,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13320:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13320:110:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 985,
                        "nodeType": "ExpressionStatement",
                        "src": "13320:110:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 989,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "13461:18:2",
                                "subExpression": {
                                  "expression": {
                                    "id": 987,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 972,
                                    "src": "13462:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                                      "typeString": "struct FinCubeDAO.Proposal storage pointer"
                                    }
                                  },
                                  "id": 988,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "13471:8:2",
                                  "memberName": "executed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 229,
                                  "src": "13462:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "id": 992,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "13483:18:2",
                                "subExpression": {
                                  "expression": {
                                    "id": 990,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 972,
                                    "src": "13484:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                                      "typeString": "struct FinCubeDAO.Proposal storage pointer"
                                    }
                                  },
                                  "id": 991,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "13493:8:2",
                                  "memberName": "canceled",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 231,
                                  "src": "13484:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "13461:40:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f706f73616c20616c7265616479206578656375746564206f722063616e63656c6564",
                              "id": 994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13515:39:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1ed80dbd6dca446e698a4eabb0a8cbb85820e26a7b77774a890ffefff2b63d68",
                                "typeString": "literal_string \"Proposal already executed or canceled\""
                              },
                              "value": "Proposal already executed or canceled"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1ed80dbd6dca446e698a4eabb0a8cbb85820e26a7b77774a890ffefff2b63d68",
                                "typeString": "literal_string \"Proposal already executed or canceled\""
                              }
                            ],
                            "id": 986,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13440:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13440:124:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 996,
                        "nodeType": "ExpressionStatement",
                        "src": "13440:124:2"
                      },
                      {
                        "expression": {
                          "id": 1001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 997,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 972,
                              "src": "13574:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$246_storage_ptr",
                                "typeString": "struct FinCubeDAO.Proposal storage pointer"
                              }
                            },
                            "id": 999,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "13583:8:2",
                            "memberName": "canceled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 231,
                            "src": "13574:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13594:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "13574:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1002,
                        "nodeType": "ExpressionStatement",
                        "src": "13574:24:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1004,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 963,
                              "src": "13630:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1003,
                            "name": "ProposalCanceled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 210,
                            "src": "13613:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13613:28:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1006,
                        "nodeType": "EmitStatement",
                        "src": "13608:33:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 961,
                    "nodeType": "StructuredDocumentation",
                    "src": "12876:296:2",
                    "text": " @notice Cancels a proposal that has not been executed or canceled yet.\n @param proposalId The ID of the proposal to be canceled.\n @dev Only the proposer of the proposal can call this function.\n @dev The proposal must not have been executed or canceled before."
                  },
                  "functionSelector": "e0a8f6f5",
                  "id": 1008,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 966,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "13239:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13243:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "13239:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 968,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 965,
                        "name": "onlyMember",
                        "nameLocations": [
                          "13228:10:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 409,
                        "src": "13228:10:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13228:22:2"
                    }
                  ],
                  "name": "cancelProposal",
                  "nameLocation": "13186:14:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 964,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 963,
                        "mutability": "mutable",
                        "name": "proposalId",
                        "nameLocation": "13209:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1008,
                        "src": "13201:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 962,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13201:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13200:20:2"
                  },
                  "returnParameters": {
                    "id": 969,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13251:0:2"
                  },
                  "scope": 1082,
                  "src": "13177:471:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1038,
                    "nodeType": "Block",
                    "src": "13956:218:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "13974:26:2",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1015,
                                    "name": "members",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 261,
                                    "src": "13975:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$222_storage_$",
                                      "typeString": "mapping(address => struct FinCubeDAO.Member storage ref)"
                                    }
                                  },
                                  "id": 1017,
                                  "indexExpression": {
                                    "id": 1016,
                                    "name": "newMember",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1011,
                                    "src": "13983:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13975:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Member_$222_storage",
                                    "typeString": "struct FinCubeDAO.Member storage ref"
                                  }
                                },
                                "id": 1018,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13994:6:2",
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 219,
                                "src": "13975:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d656d62657220616c726561647920617070726f766564",
                              "id": 1020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14002:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_71e465b213fae575eff98ef3e42ebb338fdac662569c58a19b69696474e769fc",
                                "typeString": "literal_string \"Member already approved\""
                              },
                              "value": "Member already approved"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_71e465b213fae575eff98ef3e42ebb338fdac662569c58a19b69696474e769fc",
                                "typeString": "literal_string \"Member already approved\""
                              }
                            ],
                            "id": 1014,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13966:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13966:62:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1022,
                        "nodeType": "ExpressionStatement",
                        "src": "13966:62:2"
                      },
                      {
                        "expression": {
                          "id": 1028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1023,
                                "name": "members",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 261,
                                "src": "14038:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$222_storage_$",
                                  "typeString": "mapping(address => struct FinCubeDAO.Member storage ref)"
                                }
                              },
                              "id": 1025,
                              "indexExpression": {
                                "id": 1024,
                                "name": "newMember",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1011,
                                "src": "14046:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14038:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Member_$222_storage",
                                "typeString": "struct FinCubeDAO.Member storage ref"
                              }
                            },
                            "id": 1026,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "14057:6:2",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 219,
                            "src": "14038:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14066:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "14038:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1029,
                        "nodeType": "ExpressionStatement",
                        "src": "14038:32:2"
                      },
                      {
                        "id": 1033,
                        "nodeType": "UncheckedBlock",
                        "src": "14080:48:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 1031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "14104:13:2",
                              "subExpression": {
                                "id": 1030,
                                "name": "memberCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 212,
                                "src": "14104:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1032,
                            "nodeType": "ExpressionStatement",
                            "src": "14104:13:2"
                          }
                        ]
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1035,
                              "name": "newMember",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1011,
                              "src": "14157:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1034,
                            "name": "MemberApproved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "14142:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14142:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1037,
                        "nodeType": "EmitStatement",
                        "src": "14137:30:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1009,
                    "nodeType": "StructuredDocumentation",
                    "src": "13654:247:2",
                    "text": " @notice Approves a new member.\n @dev This function is marked as `private` because it should only be called internally by the `executeProposal` function.\n @param newMember The address of the new member to be approved."
                  },
                  "id": 1039,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveMember",
                  "nameLocation": "13915:13:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1012,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1011,
                        "mutability": "mutable",
                        "name": "newMember",
                        "nameLocation": "13937:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1039,
                        "src": "13929:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1010,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13929:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13928:19:2"
                  },
                  "returnParameters": {
                    "id": 1013,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13956:0:2"
                  },
                  "scope": 1082,
                  "src": "13906:268:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1048,
                    "nodeType": "Block",
                    "src": "14598:76:2",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "14617:51:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14631:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "bys",
                                        "nodeType": "YulIdentifier",
                                        "src": "14649:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14654:2:2",
                                        "type": "",
                                        "value": "20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14645:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14645:12:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "14639:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14639:19:2"
                              },
                              "variableNames": [
                                {
                                  "name": "addr",
                                  "nodeType": "YulIdentifier",
                                  "src": "14631:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1045,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "14631:4:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1042,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "14649:3:2",
                            "valueSize": 1
                          }
                        ],
                        "id": 1047,
                        "nodeType": "InlineAssembly",
                        "src": "14608:60:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1040,
                    "nodeType": "StructuredDocumentation",
                    "src": "14180:321:2",
                    "text": " @notice Converts a byte array to an address.\n @dev This function is marked as `private` and `pure` because it does not read or modify the contract's state and is only used internally.\n @param bys The byte array to be converted.\n @return addr The address converted from the byte array."
                  },
                  "id": 1049,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "bytesToAddress",
                  "nameLocation": "14515:14:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1043,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1042,
                        "mutability": "mutable",
                        "name": "bys",
                        "nameLocation": "14552:3:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1049,
                        "src": "14539:16:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1041,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "14539:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14529:32:2"
                  },
                  "returnParameters": {
                    "id": 1046,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1045,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "14592:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1049,
                        "src": "14584:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1044,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14584:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14583:14:2"
                  },
                  "scope": 1082,
                  "src": "14506:168:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1062,
                    "nodeType": "Block",
                    "src": "15063:43:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1059,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1052,
                              "src": "15097:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1057,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "15080:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "15084:12:2",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "15080:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15080:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1056,
                        "id": 1061,
                        "nodeType": "Return",
                        "src": "15073:26:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1050,
                    "nodeType": "StructuredDocumentation",
                    "src": "14680:314:2",
                    "text": " @notice Converts an address to a byte array.\n @dev This function is marked as `private` and `pure` because it does not read or modify the contract's state and is only used internally.\n @param a The address to be converted.\n @return The byte array representation of the address."
                  },
                  "id": 1063,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toBytes",
                  "nameLocation": "15008:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1053,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1052,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "15024:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1063,
                        "src": "15016:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1051,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15016:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15015:11:2"
                  },
                  "returnParameters": {
                    "id": 1056,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1055,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1063,
                        "src": "15049:12:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1054,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "15049:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15048:14:2"
                  },
                  "scope": 1082,
                  "src": "14999:107:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1080,
                    "nodeType": "Block",
                    "src": "15552:47:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1075,
                              "name": "members",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 261,
                              "src": "15569:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$222_storage_$",
                                "typeString": "mapping(address => struct FinCubeDAO.Member storage ref)"
                              }
                            },
                            "id": 1077,
                            "indexExpression": {
                              "id": 1076,
                              "name": "_member",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1066,
                              "src": "15577:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15569:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Member_$222_storage",
                              "typeString": "struct FinCubeDAO.Member storage ref"
                            }
                          },
                          "id": 1078,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15586:6:2",
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 219,
                          "src": "15569:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1074,
                        "id": 1079,
                        "nodeType": "Return",
                        "src": "15562:30:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1064,
                    "nodeType": "StructuredDocumentation",
                    "src": "15171:264:2",
                    "text": " @notice Checks if a member is approved.\n @dev This function can only be called by an existing member.\n @param _member The address of the member to be checked.\n @return A boolean indicating whether the member is approved or not."
                  },
                  "functionSelector": "cfbc02d4",
                  "id": 1081,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1069,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "15525:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15529:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "15525:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1071,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1068,
                        "name": "onlyMember",
                        "nameLocations": [
                          "15514:10:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 409,
                        "src": "15514:10:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "15514:22:2"
                    }
                  ],
                  "name": "checkIsMemberApproved",
                  "nameLocation": "15449:21:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1067,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1066,
                        "mutability": "mutable",
                        "name": "_member",
                        "nameLocation": "15488:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1081,
                        "src": "15480:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1065,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15480:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15470:31:2"
                  },
                  "returnParameters": {
                    "id": 1074,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1073,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1081,
                        "src": "15546:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1072,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "15546:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15545:6:2"
                  },
                  "scope": 1082,
                  "src": "15440:159:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1083,
              "src": "274:15327:2",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24,
                189,
                198,
                202,
                206,
                210
              ]
            }
          ],
          "src": "32:15570:2"
        },
        "id": 2
      },
      "contracts/TokenAddress.sol": {
        "ast": {
          "absolutePath": "contracts/TokenAddress.sol",
          "exportedSymbols": {
            "TokenAddressContract": [
              1114
            ]
          },
          "id": 1115,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1084,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".8"
              ],
              "nodeType": "PragmaDirective",
              "src": "34:23:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "TokenAddressContract",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1114,
              "linearizedBaseContracts": [
                1114
              ],
              "name": "TokenAddressContract",
              "nameLocation": "69:20:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "fc0c546a",
                  "id": 1086,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "111:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1114,
                  "src": "96:20:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1085,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "96:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1095,
                    "nodeType": "Block",
                    "src": "169:37:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1091,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1086,
                            "src": "179:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1092,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1088,
                            "src": "187:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "179:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1094,
                        "nodeType": "ExpressionStatement",
                        "src": "179:20:3"
                      }
                    ]
                  },
                  "functionSelector": "2801617e",
                  "id": 1096,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "set",
                  "nameLocation": "136:3:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1089,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1088,
                        "mutability": "mutable",
                        "name": "tokenAddress",
                        "nameLocation": "148:12:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1096,
                        "src": "140:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1087,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "140:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "139:22:3"
                  },
                  "returnParameters": {
                    "id": 1090,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "169:0:3"
                  },
                  "scope": 1114,
                  "src": "127:79:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1104,
                    "nodeType": "Block",
                    "src": "249:29:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "259:12:3",
                          "subExpression": {
                            "id": 1101,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1086,
                            "src": "266:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1103,
                        "nodeType": "ExpressionStatement",
                        "src": "259:12:3"
                      }
                    ]
                  },
                  "functionSelector": "29092d0e",
                  "id": 1105,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "remove",
                  "nameLocation": "225:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1099,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1098,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1105,
                        "src": "232:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1097,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "232:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "231:10:3"
                  },
                  "returnParameters": {
                    "id": 1100,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "249:0:3"
                  },
                  "scope": 1114,
                  "src": "216:62:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1112,
                    "nodeType": "Block",
                    "src": "334:29:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1110,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1086,
                          "src": "351:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1109,
                        "id": 1111,
                        "nodeType": "Return",
                        "src": "344:12:3"
                      }
                    ]
                  },
                  "functionSelector": "21df0da7",
                  "id": 1113,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getToken",
                  "nameLocation": "294:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1106,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "302:2:3"
                  },
                  "returnParameters": {
                    "id": 1109,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1108,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1113,
                        "src": "325:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1107,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "325:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "324:9:3"
                  },
                  "scope": 1114,
                  "src": "285:78:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1115,
              "src": "60:305:3",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "34:332:3"
        },
        "id": 3
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 8,
                "contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              }
            }
          }
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "contracts/FincubeDAO.sol": {
        "FinCubeDAO": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_daoURI",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_ownerURI",
                  "type": "string"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "member",
                  "type": "address"
                }
              ],
              "name": "MemberApproved",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "_newMember",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "_memberURI",
                  "type": "string"
                }
              ],
              "name": "MemberRegistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "ProposalCanceled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "enum FinCubeDAO.ProposalType",
                  "name": "proposalType",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "ProposalCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "ProposalExecuted",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "cancelProposal",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_isYesVote",
                  "type": "bool"
                }
              ],
              "name": "castVote",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_member",
                  "type": "address"
                }
              ],
              "name": "checkIsMemberApproved",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "daoURI",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "executeProposal",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getOngoingProposals",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "executed",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "canceled",
                      "type": "bool"
                    },
                    {
                      "internalType": "address",
                      "name": "proposer",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    },
                    {
                      "internalType": "address",
                      "name": "target",
                      "type": "address"
                    },
                    {
                      "internalType": "uint48",
                      "name": "voteStart",
                      "type": "uint48"
                    },
                    {
                      "internalType": "uint48",
                      "name": "voteDuration",
                      "type": "uint48"
                    },
                    {
                      "internalType": "uint256",
                      "name": "yesvotes",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "novotes",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct FinCubeDAO.Proposal[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getOngoingProposalsCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "ongoingCount",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newMember",
                  "type": "address"
                }
              ],
              "name": "newMemberApprovalProposal",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "_calldata",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "_target",
                  "type": "address"
                }
              ],
              "name": "newProposal",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "proposalThreshold",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newMember",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "_memberURI",
                  "type": "string"
                }
              ],
              "name": "registerMember",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "votingDelay",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "votingPeriod",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_320": {
                  "entryPoint": null,
                  "id": 320,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_50": {
                  "entryPoint": null,
                  "id": 50,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_transferOwnership_146": {
                  "entryPoint": 207,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_string_fromMemory": {
                  "entryPoint": 309,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
                  "entryPoint": 484,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 650,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
                  "entryPoint": 733,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 590,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x41": {
                  "entryPoint": 287,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:4352:4",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:4",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "46:95:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "63:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "70:3:4",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "75:10:4",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "66:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "66:20:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "56:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "56:31:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "56:31:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "103:1:4",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "106:4:4",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "96:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "96:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "96:15:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "127:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "130:4:4",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "120:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "120:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "120:15:4"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "14:127:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "210:776:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "259:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "268:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "271:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "261:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "261:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "261:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "238:6:4"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "246:4:4",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "234:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "234:17:4"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "253:3:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "230:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "230:27:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "223:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "223:35:4"
                              },
                              "nodeType": "YulIf",
                              "src": "220:55:4"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "284:23:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "300:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "294:5:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "294:13:4"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "288:2:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "316:28:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "334:2:4",
                                        "type": "",
                                        "value": "64"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "338:1:4",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "330:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "330:10:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "342:1:4",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "326:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "326:18:4"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "320:2:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "367:22:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "369:16:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "369:18:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "369:18:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "359:2:4"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "363:2:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "356:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "356:10:4"
                              },
                              "nodeType": "YulIf",
                              "src": "353:36:4"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "398:17:4",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "412:2:4",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "408:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "408:7:4"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "402:2:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "424:23:4",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "444:2:4",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "438:5:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "438:9:4"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "428:6:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "456:71:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "478:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "502:2:4"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "506:4:4",
                                                    "type": "",
                                                    "value": "0x1f"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "498:3:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "498:13:4"
                                              },
                                              {
                                                "name": "_3",
                                                "nodeType": "YulIdentifier",
                                                "src": "513:2:4"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "494:3:4"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "494:22:4"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "518:2:4",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "490:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "490:31:4"
                                      },
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "523:2:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "486:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "486:40:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "474:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "474:53:4"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "460:10:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "586:22:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "588:16:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "588:18:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "588:18:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "545:10:4"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "557:2:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "542:2:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "542:18:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "565:10:4"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "577:6:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "562:2:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "562:22:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "539:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "539:46:4"
                              },
                              "nodeType": "YulIf",
                              "src": "536:72:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "624:2:4",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "628:10:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "617:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "617:22:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "617:22:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "655:6:4"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "663:2:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "648:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "648:18:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "648:18:4"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "675:14:4",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "685:4:4",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_4",
                                  "nodeType": "YulTypedName",
                                  "src": "679:2:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "735:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "744:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "747:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "737:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "737:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "737:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "712:6:4"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "720:2:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "708:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "708:15:4"
                                      },
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "725:2:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "704:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "704:24:4"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "730:3:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "701:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "701:33:4"
                              },
                              "nodeType": "YulIf",
                              "src": "698:53:4"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "760:10:4",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "769:1:4",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "764:1:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "825:87:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "memPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "854:6:4"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "862:1:4"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "850:3:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "850:14:4"
                                            },
                                            {
                                              "name": "_4",
                                              "nodeType": "YulIdentifier",
                                              "src": "866:2:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "846:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "846:23:4"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "offset",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "885:6:4"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "893:1:4"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "881:3:4"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "881:14:4"
                                                },
                                                {
                                                  "name": "_4",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "897:2:4"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "877:3:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "877:23:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "871:5:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "871:30:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "839:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "839:63:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "839:63:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "790:1:4"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "793:2:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "787:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "787:9:4"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "797:19:4",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "799:15:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "808:1:4"
                                        },
                                        {
                                          "name": "_4",
                                          "nodeType": "YulIdentifier",
                                          "src": "811:2:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "804:3:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "804:10:4"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "799:1:4"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "783:3:4",
                                "statements": []
                              },
                              "src": "779:133:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "memPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "936:6:4"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "944:2:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "932:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "932:15:4"
                                      },
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "949:2:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "928:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "928:24:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "954:1:4",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "921:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "921:35:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "921:35:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "965:15:4",
                              "value": {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "974:6:4"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "965:5:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_string_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "184:6:4",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "192:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "200:5:4",
                            "type": ""
                          }
                        ],
                        "src": "146:840:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1109:444:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1155:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1164:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1167:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1157:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1157:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1157:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1130:7:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1139:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1126:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1126:23:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1151:2:4",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1122:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1122:32:4"
                              },
                              "nodeType": "YulIf",
                              "src": "1119:52:4"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1180:30:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1200:9:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1194:5:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1194:16:4"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1184:6:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1219:28:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1237:2:4",
                                        "type": "",
                                        "value": "64"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1241:1:4",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1233:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1233:10:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1245:1:4",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1229:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1229:18:4"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1223:2:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1274:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1283:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1286:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1276:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1276:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1276:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1262:6:4"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1270:2:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1259:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1259:14:4"
                              },
                              "nodeType": "YulIf",
                              "src": "1256:34:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1299:71:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1342:9:4"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1353:6:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1338:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1338:22:4"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1362:7:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1309:28:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1309:61:4"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1299:6:4"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1379:41:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1405:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1416:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1401:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1401:18:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1395:5:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1395:25:4"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1383:8:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1449:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1458:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1461:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1451:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1451:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1451:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1435:8:4"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1445:2:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1432:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1432:16:4"
                              },
                              "nodeType": "YulIf",
                              "src": "1429:36:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1474:73:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1517:9:4"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1528:8:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1513:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1513:24:4"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1539:7:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1484:28:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1484:63:4"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1474:6:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1067:9:4",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1078:7:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1090:6:4",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1098:6:4",
                            "type": ""
                          }
                        ],
                        "src": "991:562:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1659:102:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1669:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1681:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1692:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1677:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1677:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1669:4:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1711:9:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1726:6:4"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1742:3:4",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1747:1:4",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "1738:3:4"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1738:11:4"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1751:1:4",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "1734:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1734:19:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1722:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1722:32:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1704:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1704:51:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1704:51:4"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1628:9:4",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1639:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1650:4:4",
                            "type": ""
                          }
                        ],
                        "src": "1558:203:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1821:325:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1831:22:4",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1845:1:4",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "1848:4:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1841:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1841:12:4"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "1831:6:4"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1862:38:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "1892:4:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1898:1:4",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1888:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1888:12:4"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "1866:18:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1939:31:4",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1941:27:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "1955:6:4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1963:4:4",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "1951:3:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1951:17:4"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "1941:6:4"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "1919:18:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1912:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1912:26:4"
                              },
                              "nodeType": "YulIf",
                              "src": "1909:61:4"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2029:111:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2050:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2057:3:4",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2062:10:4",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "2053:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2053:20:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2043:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2043:31:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2043:31:4"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2094:1:4",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2097:4:4",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2087:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2087:15:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2087:15:4"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2122:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2125:4:4",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2115:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2115:15:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2115:15:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "1985:18:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "2008:6:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2016:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "2005:2:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2005:14:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "1982:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1982:38:4"
                              },
                              "nodeType": "YulIf",
                              "src": "1979:161:4"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "1801:4:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "1810:6:4",
                            "type": ""
                          }
                        ],
                        "src": "1766:380:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2207:65:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2224:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2227:3:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2217:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2217:14:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2217:14:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2240:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2258:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2261:4:4",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nodeType": "YulIdentifier",
                                  "src": "2248:9:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2248:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "2240:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_string_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "2190:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "2198:4:4",
                            "type": ""
                          }
                        ],
                        "src": "2151:121:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2358:464:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2391:425:4",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2405:11:4",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2415:1:4",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulTypedName",
                                        "src": "2409:2:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "2436:2:4"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "2440:5:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2429:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2429:17:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2429:17:4"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2459:31:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "2481:2:4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2485:4:4",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "keccak256",
                                        "nodeType": "YulIdentifier",
                                        "src": "2471:9:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2471:19:4"
                                    },
                                    "variables": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulTypedName",
                                        "src": "2463:4:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2503:57:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nodeType": "YulIdentifier",
                                          "src": "2526:4:4"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2536:1:4",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "startIndex",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2543:10:4"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "2555:2:4",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "2539:3:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2539:19:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nodeType": "YulIdentifier",
                                            "src": "2532:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2532:27:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2522:3:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2522:38:4"
                                    },
                                    "variables": [
                                      {
                                        "name": "deleteStart",
                                        "nodeType": "YulTypedName",
                                        "src": "2507:11:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "2597:23:4",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "2599:19:4",
                                          "value": {
                                            "name": "data",
                                            "nodeType": "YulIdentifier",
                                            "src": "2614:4:4"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "deleteStart",
                                              "nodeType": "YulIdentifier",
                                              "src": "2599:11:4"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nodeType": "YulIdentifier",
                                          "src": "2579:10:4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2591:4:4",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nodeType": "YulIdentifier",
                                        "src": "2576:2:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2576:20:4"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "2573:47:4"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2633:41:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nodeType": "YulIdentifier",
                                          "src": "2647:4:4"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2657:1:4",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "len",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2664:3:4"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "2669:2:4",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "2660:3:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2660:12:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nodeType": "YulIdentifier",
                                            "src": "2653:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2653:20:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2643:3:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2643:31:4"
                                    },
                                    "variables": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulTypedName",
                                        "src": "2637:2:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2687:24:4",
                                    "value": {
                                      "name": "deleteStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2700:11:4"
                                    },
                                    "variables": [
                                      {
                                        "name": "start",
                                        "nodeType": "YulTypedName",
                                        "src": "2691:5:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "2785:21:4",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nodeType": "YulIdentifier",
                                                "src": "2794:5:4"
                                              },
                                              {
                                                "name": "_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "2801:2:4"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "2787:6:4"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2787:17:4"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "2787:17:4"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "start",
                                          "nodeType": "YulIdentifier",
                                          "src": "2735:5:4"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "2742:2:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nodeType": "YulIdentifier",
                                        "src": "2732:2:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2732:13:4"
                                    },
                                    "nodeType": "YulForLoop",
                                    "post": {
                                      "nodeType": "YulBlock",
                                      "src": "2746:26:4",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "2748:22:4",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nodeType": "YulIdentifier",
                                                "src": "2761:5:4"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2768:1:4",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "2757:3:4"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2757:13:4"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "start",
                                              "nodeType": "YulIdentifier",
                                              "src": "2748:5:4"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "pre": {
                                      "nodeType": "YulBlock",
                                      "src": "2728:3:4",
                                      "statements": []
                                    },
                                    "src": "2724:82:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "len",
                                    "nodeType": "YulIdentifier",
                                    "src": "2374:3:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2379:2:4",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2371:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2371:11:4"
                              },
                              "nodeType": "YulIf",
                              "src": "2368:448:4"
                            }
                          ]
                        },
                        "name": "clean_up_bytearray_end_slots_string_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "2330:5:4",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nodeType": "YulTypedName",
                            "src": "2337:3:4",
                            "type": ""
                          },
                          {
                            "name": "startIndex",
                            "nodeType": "YulTypedName",
                            "src": "2342:10:4",
                            "type": ""
                          }
                        ],
                        "src": "2277:545:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2912:81:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2922:65:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "2937:4:4"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2955:1:4",
                                                    "type": "",
                                                    "value": "3"
                                                  },
                                                  {
                                                    "name": "len",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2958:3:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2951:3:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "2951:11:4"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2968:1:4",
                                                    "type": "",
                                                    "value": "0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "not",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2964:3:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "2964:6:4"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shr",
                                              "nodeType": "YulIdentifier",
                                              "src": "2947:3:4"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2947:24:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "2943:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2943:29:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2933:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2933:40:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2979:1:4",
                                        "type": "",
                                        "value": "1"
                                      },
                                      {
                                        "name": "len",
                                        "nodeType": "YulIdentifier",
                                        "src": "2982:3:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2975:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2975:11:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "2930:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2930:57:4"
                              },
                              "variableNames": [
                                {
                                  "name": "used",
                                  "nodeType": "YulIdentifier",
                                  "src": "2922:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_used_part_and_set_length_of_short_byte_array",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "2889:4:4",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nodeType": "YulTypedName",
                            "src": "2895:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "used",
                            "nodeType": "YulTypedName",
                            "src": "2903:4:4",
                            "type": ""
                          }
                        ],
                        "src": "2827:166:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3094:1256:4",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3104:24:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "3124:3:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3118:5:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3118:10:4"
                              },
                              "variables": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulTypedName",
                                  "src": "3108:6:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3171:22:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "3173:16:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3173:18:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3173:18:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "3143:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3159:2:4",
                                            "type": "",
                                            "value": "64"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3163:1:4",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "3155:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3155:10:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3167:1:4",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3151:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3151:18:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3140:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3140:30:4"
                              },
                              "nodeType": "YulIf",
                              "src": "3137:56:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "3246:4:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nodeType": "YulIdentifier",
                                            "src": "3284:4:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nodeType": "YulIdentifier",
                                          "src": "3278:5:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3278:11:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_byte_array_length",
                                      "nodeType": "YulIdentifier",
                                      "src": "3252:25:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3252:38:4"
                                  },
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "3292:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "clean_up_bytearray_end_slots_string_storage",
                                  "nodeType": "YulIdentifier",
                                  "src": "3202:43:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3202:97:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3202:97:4"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3308:18:4",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3325:1:4",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset",
                                  "nodeType": "YulTypedName",
                                  "src": "3312:9:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3335:23:4",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3354:4:4",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "3339:11:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3367:24:4",
                              "value": {
                                "name": "srcOffset_1",
                                "nodeType": "YulIdentifier",
                                "src": "3380:11:4"
                              },
                              "variableNames": [
                                {
                                  "name": "srcOffset",
                                  "nodeType": "YulIdentifier",
                                  "src": "3367:9:4"
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "3437:656:4",
                                    "statements": [
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "3451:35:4",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "3470:6:4"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "3482:2:4",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nodeType": "YulIdentifier",
                                                "src": "3478:3:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3478:7:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "3466:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3466:20:4"
                                        },
                                        "variables": [
                                          {
                                            "name": "loopEnd",
                                            "nodeType": "YulTypedName",
                                            "src": "3455:7:4",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "3499:49:4",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "3543:4:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "array_dataslot_string_storage",
                                            "nodeType": "YulIdentifier",
                                            "src": "3513:29:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3513:35:4"
                                        },
                                        "variables": [
                                          {
                                            "name": "dstPtr",
                                            "nodeType": "YulTypedName",
                                            "src": "3503:6:4",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "3561:10:4",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3570:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nodeType": "YulTypedName",
                                            "src": "3565:1:4",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "3648:172:4",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3673:6:4"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "src",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "3691:3:4"
                                                          },
                                                          {
                                                            "name": "srcOffset",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "3696:9:4"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "3687:3:4"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "3687:19:4"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3681:5:4"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "3681:26:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3666:6:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3666:42:4"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "3666:42:4"
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "3725:24:4",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3739:6:4"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "3747:1:4",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3735:3:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3735:14:4"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dstPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3725:6:4"
                                                }
                                              ]
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "3766:40:4",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "srcOffset",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3783:9:4"
                                                  },
                                                  {
                                                    "name": "srcOffset_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3794:11:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3779:3:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3779:27:4"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "srcOffset",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3766:9:4"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "3595:1:4"
                                            },
                                            {
                                              "name": "loopEnd",
                                              "nodeType": "YulIdentifier",
                                              "src": "3598:7:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "3592:2:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3592:14:4"
                                        },
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nodeType": "YulBlock",
                                          "src": "3607:28:4",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "3609:24:4",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3618:1:4"
                                                  },
                                                  {
                                                    "name": "srcOffset_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3621:11:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3614:3:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3614:19:4"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3609:1:4"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nodeType": "YulBlock",
                                          "src": "3588:3:4",
                                          "statements": []
                                        },
                                        "src": "3584:236:4"
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "3868:166:4",
                                          "statements": [
                                            {
                                              "nodeType": "YulVariableDeclaration",
                                              "src": "3886:43:4",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "3913:3:4"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "3918:9:4"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3909:3:4"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "3909:19:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3903:5:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3903:26:4"
                                              },
                                              "variables": [
                                                {
                                                  "name": "lastValue",
                                                  "nodeType": "YulTypedName",
                                                  "src": "3890:9:4",
                                                  "type": ""
                                                }
                                              ]
                                            },
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3953:6:4"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "lastValue",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "3965:9:4"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "arguments": [
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "arguments": [
                                                                      {
                                                                        "kind": "number",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "3992:1:4",
                                                                        "type": "",
                                                                        "value": "3"
                                                                      },
                                                                      {
                                                                        "name": "newLen",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3995:6:4"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "shl",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "3988:3:4"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3988:14:4"
                                                                  },
                                                                  {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "4004:3:4",
                                                                    "type": "",
                                                                    "value": "248"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "and",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "3984:3:4"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "3984:24:4"
                                                              },
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "4014:1:4",
                                                                    "type": "",
                                                                    "value": "0"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "not",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "4010:3:4"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "4010:6:4"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "shr",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "3980:3:4"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3980:37:4"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "not",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "3976:3:4"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "3976:42:4"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3961:3:4"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "3961:58:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3946:6:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3946:74:4"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "3946:74:4"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "loopEnd",
                                              "nodeType": "YulIdentifier",
                                              "src": "3839:7:4"
                                            },
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "3848:6:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "3836:2:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3836:19:4"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "3833:201:4"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "4054:4:4"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "4068:1:4",
                                                      "type": "",
                                                      "value": "1"
                                                    },
                                                    {
                                                      "name": "newLen",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4071:6:4"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4064:3:4"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "4064:14:4"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "4080:1:4",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "4060:3:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "4060:22:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "4047:6:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4047:36:4"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "4047:36:4"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "3430:663:4",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3435:1:4",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "4110:234:4",
                                    "statements": [
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "4124:14:4",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4137:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulTypedName",
                                            "src": "4128:5:4",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "4173:67:4",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "4191:35:4",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4210:3:4"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4215:9:4"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4206:3:4"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "4206:19:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4200:5:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "4200:26:4"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "value",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4191:5:4"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "4154:6:4"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "4151:89:4"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "4260:4:4"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "value",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4319:5:4"
                                                },
                                                {
                                                  "name": "newLen",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4326:6:4"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "extract_used_part_and_set_length_of_short_byte_array",
                                                "nodeType": "YulIdentifier",
                                                "src": "4266:52:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "4266:67:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "4253:6:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4253:81:4"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "4253:81:4"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "4102:242:4",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "3410:6:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3418:2:4",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3407:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3407:14:4"
                              },
                              "nodeType": "YulSwitch",
                              "src": "3400:944:4"
                            }
                          ]
                        },
                        "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nodeType": "YulTypedName",
                            "src": "3079:4:4",
                            "type": ""
                          },
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "3085:3:4",
                            "type": ""
                          }
                        ],
                        "src": "2998:1352:4"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
                  "id": 4,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x20EC CODESIZE SUB DUP1 PUSH3 0x20EC DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1E4 JUMP JUMPDEST CALLER DUP1 PUSH3 0x5B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x66 DUP2 PUSH3 0xCF JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP4 MSTORE SWAP4 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP2 SSTORE SWAP1 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH3 0xB0 SWAP1 DUP3 PUSH3 0x2DD JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP PUSH1 0x3 PUSH3 0xC5 DUP5 DUP3 PUSH3 0x2DD JUMP JUMPDEST POP POP POP POP PUSH3 0x3A9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x164 JUMPI PUSH3 0x164 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x18F JUMPI PUSH3 0x18F PUSH3 0x11F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1D0 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1B1 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x21E DUP7 DUP4 DUP8 ADD PUSH3 0x135 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x244 DUP6 DUP3 DUP7 ADD PUSH3 0x135 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x263 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x284 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2D8 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x2B3 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2D4 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2BF JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2F9 JUMPI PUSH3 0x2F9 PUSH3 0x11F JUMP JUMPDEST PUSH3 0x311 DUP2 PUSH3 0x30A DUP5 SLOAD PUSH3 0x24E JUMP JUMPDEST DUP5 PUSH3 0x28A JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x349 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x330 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2D4 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x37A JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x359 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x399 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1D33 DUP1 PUSH3 0x3B9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB58131B0 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB58131B0 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xCFBC02D4 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xE0A8F6F5 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x756A4BA3 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xAFE666F6 EQ PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18A41AEC GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x18A41AEC EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x27F5884B EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x3932ABB1 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x7034731B EQ PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2A251A3 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xAA5ADFC EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xD61B519 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x15373E3D EQ PUSH2 0x143 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3C JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x229 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12E PUSH2 0x13E CALLDATASIZE PUSH1 0x4 PUSH2 0x186D JUMP JUMPDEST PUSH2 0x340 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x6EB JUMP JUMPDEST PUSH2 0x12E PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST PUSH2 0x108 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x108 JUMP JUMPDEST PUSH2 0x180 PUSH2 0xCDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x1923 JUMP JUMPDEST PUSH2 0x12E PUSH2 0xD6A JUMP JUMPDEST PUSH2 0x12E PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1936 JUMP JUMPDEST PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x112 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x1998 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x112 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x186D JUMP JUMPDEST PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x15A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP5 SWAP3 SWAP2 SWAP1 PUSH2 0x253 SWAP1 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP GT ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C72656164792061206D656D62657200000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP2 SSTORE SWAP2 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x2F5 SWAP1 DUP3 PUSH2 0x1B11 JUMP JUMPDEST POP SWAP1 POP POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3B09349069A59BCDE8C2609AFC86C80B77C81085AC8CD8662981621F7EA3574B DUP5 PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x1923 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND TIMESTAMP GT DUP1 ISZERO PUSH2 0x382 JUMPI POP PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x3CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74696E67207374696C6C20676F696E67206F6E0000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x3E8 JUMPI POP DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x442 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C20616C7265616479206578656375746564206F722063616E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x18D95B1959 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x1 PUSH2 0x44C PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST DUP2 PUSH1 0x3 ADD SLOAD GT PUSH2 0x4CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C20646F65736E27742068617665206D616A6F726974792076 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74650000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x4F1 JUMPI PUSH2 0x4F1 PUSH2 0x1C00 JUMP JUMPDEST SUB PUSH2 0x5CF JUMPI PUSH2 0x595 PUSH2 0x590 DUP3 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x50B SWAP1 PUSH2 0x1A8E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x537 SWAP1 PUSH2 0x1A8E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x584 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x559 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x584 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x567 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH1 0x14 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x15F7 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0x712AE1383F79AC853F8D882153778E0260EF8F03B504E2866E0593E04D2B291F SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5F4 JUMPI PUSH2 0x5F4 PUSH2 0x1C00 JUMP JUMPDEST SUB PUSH2 0x6E7 JUMPI PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x61C SWAP1 PUSH1 0x1 DUP6 ADD SWAP1 PUSH2 0x1C16 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x65E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x6AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C20657865637574696F6E206661696C656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST DUP2 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP3 SSTORE PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH32 0x712AE1383F79AC853F8D882153778E0260EF8F03B504E2866E0593E04D2B291F SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x708 SWAP1 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP GT PUSH2 0x746 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10309036B2B6B132B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x7A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13595B58995C881B9BDD08185C1C1C9BDD9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND TIMESTAMP GT DUP1 ISZERO PUSH2 0x7F6 JUMPI POP PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND TIMESTAMP LT JUMPDEST PUSH2 0x868 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74696E67206973206E6F7420616C6C6F7765642061742074686973207469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D65000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x89A JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x8E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920766F74656420666F7220746869732070726F706F73616C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST DUP4 ISZERO PUSH2 0x919 JUMPI PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x943 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x967 SWAP1 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP GT PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10309036B2B6B132B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xA08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13595B58995C881B9BDD08185C1C1C9BDD9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST TIMESTAMP PUSH1 0x0 PUSH2 0xA16 PUSH1 0x5 DUP4 PUSH2 0x1C8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA25 PUSH1 0x3C DUP4 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP9 SWAP1 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB PUSH1 0x14 ADD DUP2 MSTORE PUSH2 0x154 DUP4 ADD DUP5 MSTORE PUSH1 0x0 PUSH1 0x34 DUP5 ADD DUP2 DUP2 MSTORE PUSH1 0x54 DUP6 ADD DUP3 DUP2 MSTORE CALLER PUSH1 0x74 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x94 DUP8 ADD DUP6 DUP2 MSTORE PUSH2 0xDEAD PUSH1 0xB4 DUP10 ADD MSTORE PUSH6 0xFFFFFFFFFFFF DUP13 DUP2 AND PUSH1 0xD4 DUP11 ADD MSTORE DUP11 AND PUSH1 0xF4 DUP10 ADD MSTORE PUSH2 0x114 DUP9 ADD DUP6 SWAP1 MSTORE PUSH2 0x134 SWAP1 SWAP8 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 SLOAD DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP6 MSTORE SWAP6 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD DUP2 SLOAD SWAP7 MLOAD SWAP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x10000 MUL PUSH22 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 NOT SWAP6 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 AND PUSH2 0xFFFF NOT SWAP1 SWAP9 AND SWAP8 SWAP1 SWAP8 OR OR SWAP4 SWAP1 SWAP4 AND SWAP5 SWAP1 SWAP5 OR DUP3 SSTORE SWAP2 MLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0xB1F SWAP1 DUP3 PUSH2 0x1B11 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x2 DUP3 DUP2 ADD DUP1 SLOAD PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH32 0xFFFFFFFFFFFF0000000000000000000000000000000000000000000000000000 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xA0 SHL PUSH6 0xFFFFFFFFFFFF SWAP3 DUP4 AND MUL OR PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xD0 SHL SWAP2 SWAP1 SWAP5 AND MUL SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0x100 SWAP1 SWAP3 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD PUSH32 0x3CD05952BF89447515BA76534B26DF87104C2BA104027F22A518D767243973C1 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC0F SWAP2 SWAP1 PUSH2 0x1923 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 TIMESTAMP DUP3 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xC6C JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xC97 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND DUP3 GT JUMPDEST DUP1 ISZERO PUSH2 0xCC2 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND DUP3 LT JUMPDEST ISZERO PUSH2 0xCCE JUMPI PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 JUMPDEST PUSH1 0x1 ADD PUSH2 0xC31 JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0xCE9 SWAP1 PUSH2 0x1A8E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD15 SWAP1 PUSH2 0x1A8E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD62 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD37 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD62 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD45 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0xD72 PUSH2 0x16B5 JUMP JUMPDEST PUSH2 0xD7C PUSH1 0x0 PUSH2 0x16FB JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xD9B SWAP1 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP GT PUSH2 0xDD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10309036B2B6B132B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xE3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13595B58995C881B9BDD08185C1C1C9BDD9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST TIMESTAMP PUSH1 0x0 PUSH2 0xE4A PUSH1 0x5 DUP4 PUSH2 0x1C8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE59 PUSH1 0x3C DUP4 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE CALLER DUP5 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP6 ADD DUP14 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND PUSH1 0x80 DUP9 ADD MSTORE PUSH6 0xFFFFFFFFFFFF DUP12 DUP2 AND PUSH1 0xA0 DUP10 ADD MSTORE DUP10 AND PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD DUP7 SWAP1 MSTORE PUSH2 0x100 DUP1 DUP9 ADD DUP8 SWAP1 MSTORE PUSH1 0x2 SLOAD DUP8 MSTORE PUSH1 0x5 SWAP1 SWAP6 MSTORE SWAP7 SWAP1 SWAP5 KECCAK256 DUP6 MLOAD DUP2 SLOAD SWAP4 MLOAD SWAP3 MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP5 AND SWAP1 ISZERO ISZERO PUSH2 0xFF00 NOT AND OR SWAP2 ISZERO ISZERO SWAP1 SWAP4 MUL OR PUSH22 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 NOT AND PUSH3 0x10000 SWAP2 SWAP1 SWAP6 AND MUL SWAP4 SWAP1 SWAP4 OR DUP4 SSTORE MLOAD SWAP3 SWAP4 POP SWAP2 PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0xF1E SWAP1 DUP3 PUSH2 0x1B11 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x2 DUP3 DUP2 ADD DUP1 SLOAD PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH32 0xFFFFFFFFFFFF0000000000000000000000000000000000000000000000000000 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xA0 SHL PUSH6 0xFFFFFFFFFFFF SWAP3 DUP4 AND MUL OR PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xD0 SHL SWAP2 SWAP1 SWAP5 AND MUL SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0x100 SWAP1 SWAP3 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP3 DUP1 MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD PUSH32 0x3CD05952BF89447515BA76534B26DF87104C2BA104027F22A518D767243973C1 DUP9 PUSH1 0x40 MLOAD PUSH2 0xC0F SWAP2 SWAP1 PUSH2 0x1923 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x101D PUSH2 0xC28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x103A JUMPI PUSH2 0x103A PUSH2 0x177F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10B0 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD MSTORE DUP3 MSTORE PUSH1 0x0 NOT SWAP1 SWAP3 ADD SWAP2 ADD DUP2 PUSH2 0x1058 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP TIMESTAMP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x12B0 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x10F5 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1120 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND DUP4 GT JUMPDEST DUP1 ISZERO PUSH2 0x114B JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND DUP4 LT JUMPDEST ISZERO PUSH2 0x12A8 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH2 0x120 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO DUP4 MSTORE PUSH2 0x100 DUP3 DIV AND ISZERO ISZERO SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH3 0x10000 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 PUSH2 0x11B4 SWAP1 PUSH2 0x1A8E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11E0 SWAP1 PUSH2 0x1A8E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x122D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1202 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x122D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1210 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH6 0xFFFFFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE DUP5 MLOAD DUP6 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1296 JUMPI PUSH2 0x1296 PUSH2 0x1CB2 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 JUMPDEST PUSH1 0x1 ADD PUSH2 0x10B8 JUMP JUMPDEST POP SWAP2 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH2 0x12CD SWAP2 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH2 0x12D7 SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x12FF SWAP1 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP GT PUSH2 0x133D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10309036B2B6B132B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x13A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13595B58995C881B9BDD08185C1C1C9BDD9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x13E2 SWAP1 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP GT PUSH2 0x1420 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10309036B2B6B132B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1483 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13595B58995C881B9BDD08185C1C1C9BDD9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207065726D697373696F6E20746F2063616E63656C2070726F706F73616C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1509 JUMPI POP DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C20616C7265616479206578656375746564206F722063616E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x18D95B1959 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29F JUMP JUMPDEST DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR DUP2 SSTORE PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH32 0x789CF55BE980739DAD1D0699B93B58E806B51C9D96619BFA8FE0A28ABAA7B30C SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x15A8 PUSH2 0x16B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x15EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x29F JUMP JUMPDEST PUSH2 0x15F4 DUP2 PUSH2 0x16FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1660 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D656D62657220616C726561647920617070726F766564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP1 SLOAD DUP2 ADD SWAP1 SSTORE MLOAD PUSH32 0x3DA74045128FFF0396B39203F81BCEDCBCF28586F0F97FB0F41CEB5521566A15 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x177A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x17B0 JUMPI PUSH2 0x17B0 PUSH2 0x177F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x17D8 JUMPI PUSH2 0x17D8 PUSH2 0x177F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x17F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x181E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1827 DUP4 PUSH2 0x1763 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1843 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1854 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1863 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1795 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x187F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1899 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18D6 DUP3 PUSH2 0x1763 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1903 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x18E7 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x18D6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1949 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1971 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1980 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1795 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x198F PUSH1 0x20 DUP5 ADD PUSH2 0x1763 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A80 JUMPI PUSH1 0x3F NOT DUP10 DUP5 SUB ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD ISZERO ISZERO DUP5 MSTORE DUP8 DUP2 ADD MLOAD ISZERO ISZERO DUP9 DUP6 ADD MSTORE DUP7 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP6 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD PUSH2 0x120 DUP3 DUP8 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP1 PUSH2 0x1A10 DUP4 DUP9 ADD DUP3 PUSH2 0x18DD JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x80 DUP1 DUP4 ADD MLOAD PUSH2 0x1A2E DUP3 DUP9 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP POP PUSH1 0xA0 DUP3 DUP2 ADD MLOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP8 DUP4 ADD MSTORE POP POP PUSH1 0xC0 DUP3 DUP2 ADD MLOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP8 DUP4 ADD MSTORE POP POP PUSH1 0xE0 DUP3 DUP2 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 ADD MLOAD SWAP2 SWAP1 SWAP5 ADD MSTORE SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x19BF JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1AA2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x13BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1B0C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1AE9 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B08 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1AF5 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B2B JUMPI PUSH2 0x1B2B PUSH2 0x177F JUMP JUMPDEST PUSH2 0x1B3F DUP2 PUSH2 0x1B39 DUP5 SLOAD PUSH2 0x1A8E JUMP JUMPDEST DUP5 PUSH2 0x1AC2 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1B74 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1B5C JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1B08 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1BA3 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1B84 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1BC1 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1BFA JUMPI PUSH2 0x1BFA PUSH2 0x1BD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD PUSH2 0x1C24 DUP2 PUSH2 0x1A8E JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x1C3C JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1C51 JUMPI PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x1C80 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1C77 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x1C5E JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1CAB JUMPI PUSH2 0x1CAB PUSH2 0x1BD1 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1BFA JUMPI PUSH2 0x1BFA PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1CF8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 DIV MSIZE 0x25 PUSH3 0x889F8F 0xF 0xD9 GAS LOG1 DUP13 CREATE PUSH6 0xD58E6E32842C EXTCODEHASH DUP5 DUP1 CALLER TIMESTAMP PUSH3 0x40AA22 NOT 0x49 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
              "sourceMap": "274:15327:2:-:0;;;2833:296;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2923:10;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;1704:51:4;1677:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;274:15327:2;;;;;;;;;;;;2975:28;;;3029:4:::1;3013:20:::0;;;3051:10:::1;-1:-1:-1::0;3043:19:2;;;:7:::1;:19:::0;;;;;;;:28;;;;-1:-1:-1;;3043:28:2::1;::::0;::::1;;;::::0;;;;274:15327;;;;3043:28;;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;;3095:1:2::1;3081:15:::0;;-1:-1:-1;3106:6:2::1;:16;3115:7:::0;3106:6;:16:::1;:::i;:::-;;2935:194;2833:296:::0;;274:15327;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:127:4:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:4;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:4;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:4:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:4;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1766:380::-;1845:1;1841:12;;;;1888;;;1909:61;;1963:4;1955:6;1951:17;1941:27;;1909:61;2016:2;2008:6;2005:14;1985:18;1982:38;1979:161;;2062:10;2057:3;2053:20;2050:1;2043:31;2097:4;2094:1;2087:15;2125:4;2122:1;2115:15;1979:161;;1766:380;;;:::o;2277:545::-;2379:2;2374:3;2371:11;2368:448;;;2415:1;2440:5;2436:2;2429:17;2485:4;2481:2;2471:19;2555:2;2543:10;2539:19;2536:1;2532:27;2526:4;2522:38;2591:4;2579:10;2576:20;2573:47;;;-1:-1:-1;2614:4:4;2573:47;2669:2;2664:3;2660:12;2657:1;2653:20;2647:4;2643:31;2633:41;;2724:82;2742:2;2735:5;2732:13;2724:82;;;2787:17;;;2768:1;2757:13;2724:82;;;2728:3;;;2368:448;2277:545;;;:::o;2998:1352::-;3118:10;;-1:-1:-1;;;;;3140:30:4;;3137:56;;;3173:18;;:::i;:::-;3202:97;3292:6;3252:38;3284:4;3278:11;3252:38;:::i;:::-;3246:4;3202:97;:::i;:::-;3354:4;;3418:2;3407:14;;3435:1;3430:663;;;;4137:1;4154:6;4151:89;;;-1:-1:-1;4206:19:4;;;4200:26;4151:89;-1:-1:-1;;2955:1:4;2951:11;;;2947:24;2943:29;2933:40;2979:1;2975:11;;;2930:57;4253:81;;3400:944;;3430:663;2224:1;2217:14;;;2261:4;2248:18;;-1:-1:-1;;3466:20:4;;;3584:236;3598:7;3595:1;3592:14;3584:236;;;3687:19;;;3681:26;3666:42;;3779:27;;;;3747:1;3735:14;;;;3614:19;;3584:236;;;3588:3;3848:6;3839:7;3836:19;3833:201;;;3909:19;;;3903:26;-1:-1:-1;;3992:1:4;3988:14;;;4004:3;3984:24;3980:37;3976:42;3961:58;3946:74;;3833:201;-1:-1:-1;;;;;4080:1:4;4064:14;;;4060:22;4047:36;;-1:-1:-1;2998:1352:4:o;:::-;274:15327:2;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_checkOwner_84": {
                  "entryPoint": 5813,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_msgSender_159": {
                  "entryPoint": null,
                  "id": 159,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_transferOwnership_146": {
                  "entryPoint": 5883,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@approveMember_1039": {
                  "entryPoint": 5623,
                  "id": 1039,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@bytesToAddress_1049": {
                  "entryPoint": null,
                  "id": 1049,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@cancelProposal_1008": {
                  "entryPoint": 5061,
                  "id": 1008,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@castVote_700": {
                  "entryPoint": 1771,
                  "id": 700,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@checkIsMemberApproved_1081": {
                  "entryPoint": 4828,
                  "id": 1081,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@daoURI_216": {
                  "entryPoint": 3292,
                  "id": 216,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@executeProposal_813": {
                  "entryPoint": 832,
                  "id": 813,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@getOngoingProposalsCount_872": {
                  "entryPoint": 3112,
                  "id": 872,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getOngoingProposals_960": {
                  "entryPoint": 4113,
                  "id": 960,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@newMemberApprovalProposal_531": {
                  "entryPoint": 2378,
                  "id": 531,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@newProposal_607": {
                  "entryPoint": 3454,
                  "id": 607,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@owner_67": {
                  "entryPoint": null,
                  "id": 67,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@proposalThreshold_354": {
                  "entryPoint": 4794,
                  "id": 354,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@registerMember_448": {
                  "entryPoint": 553,
                  "id": 448,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@renounceOwnership_98": {
                  "entryPoint": 3434,
                  "id": 98,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@toBytes_1063": {
                  "entryPoint": null,
                  "id": 1063,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@transferOwnership_126": {
                  "entryPoint": 5536,
                  "id": 126,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@votingDelay_329": {
                  "entryPoint": null,
                  "id": 329,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@votingPeriod_338": {
                  "entryPoint": null,
                  "id": 338,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address": {
                  "entryPoint": 5987,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_available_length_string": {
                  "entryPoint": 6037,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 6331,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_string_memory_ptr": {
                  "entryPoint": 6155,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_bytes_memory_ptrt_address": {
                  "entryPoint": 6454,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 6253,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256t_bool": {
                  "entryPoint": 6278,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_encode_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_string": {
                  "entryPoint": 6365,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_bytes_storage__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 7190,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_array$_t_struct$_Proposal_$246_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Proposal_$246_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
                  "entryPoint": 6552,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 6435,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_1ed80dbd6dca446e698a4eabb0a8cbb85820e26a7b77774a890ffefff2b63d68__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_1ff520094f2722719f574911d75c1de55db2c63e3b4c3b886282397905c35e04__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_5c9009bc8bee59dbb920e11238c507982df9038214a09ed1af52892e51b5ea54__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_71e465b213fae575eff98ef3e42ebb338fdac662569c58a19b69696474e769fc__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_8cfc078b32cffb255e9e243136e6cde5d6a128600e2bb8733edd3b242e99fb55__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_8ebabe3ccf5c2f49d1b735f59bd3c0192bcfbdb2c10693c6c90eb8e5d3c1aa34__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_bec830c85e64815bcd0949fd1f66579df95e396bf9d122729ccf8df63010f70a__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_c63b1fb7949d1c007ce3b16ca28881aa200a07170d86eb2bba9d2376166ca211__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_d27203fcf6fbbfad1033321a968e800bedd57a10fcf4c94010e362c1f65d2021__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_dfc1e7d81d5851bb6264d6497aa3b1c2293167cdc5b1d514e67ce45c171905c1__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_e5d9f649299ee85783b2616e2f07c28a0fc3d2f87d807d27b247fea0d242005a__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint48": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "array_dataslot_string_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 7368,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint48": {
                  "entryPoint": 7308,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_t_uint256": {
                  "entryPoint": 7387,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 7143,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 6850,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
                  "entryPoint": 6929,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 6798,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 7121,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x21": {
                  "entryPoint": 7168,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 7346,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 6015,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:16991:4",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:4",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "115:76:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "125:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "137:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "148:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "133:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:4:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:9:4"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "178:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "160:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "160:25:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "160:25:4"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "84:9:4",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "95:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "106:4:4",
                            "type": ""
                          }
                        ],
                        "src": "14:177:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "245:147:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "255:29:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "277:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "264:12:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "264:20:4"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "255:5:4"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "370:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "379:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "382:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "372:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "372:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "372:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "306:5:4"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "317:5:4"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "324:42:4",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "313:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "313:54:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "303:2:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "303:65:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "296:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "296:73:4"
                              },
                              "nodeType": "YulIf",
                              "src": "293:93:4"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "224:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "235:5:4",
                            "type": ""
                          }
                        ],
                        "src": "196:196:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "429:152:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "446:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "449:77:4",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "439:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "439:88:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "439:88:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "543:1:4",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "546:4:4",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "536:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "536:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "536:15:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "567:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "570:4:4",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "560:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "560:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "560:15:4"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "397:184:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "661:557:4",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "671:28:4",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "681:18:4",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "675:2:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "726:22:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "728:16:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "728:18:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "728:18:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "714:6:4"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "722:2:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "711:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "711:14:4"
                              },
                              "nodeType": "YulIf",
                              "src": "708:40:4"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "757:17:4",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "771:2:4",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "767:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "767:7:4"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "761:2:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "783:23:4",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "803:2:4",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "797:5:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "797:9:4"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "787:6:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "815:73:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "837:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "length",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "861:6:4"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "869:2:4",
                                                    "type": "",
                                                    "value": "31"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "857:3:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "857:15:4"
                                              },
                                              {
                                                "name": "_2",
                                                "nodeType": "YulIdentifier",
                                                "src": "874:2:4"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "853:3:4"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "853:24:4"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "879:2:4",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "849:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "849:33:4"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "884:2:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "845:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "845:42:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "833:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "833:55:4"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "819:10:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "947:22:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "949:16:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "949:18:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "949:18:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "906:10:4"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "918:2:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "903:2:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "903:18:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "926:10:4"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "938:6:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "923:2:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "923:22:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "900:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "900:46:4"
                              },
                              "nodeType": "YulIf",
                              "src": "897:72:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "985:2:4",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "989:10:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "978:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "978:22:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "978:22:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1009:15:4",
                              "value": {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1018:6:4"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "1009:5:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1040:6:4"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1048:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1033:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1033:22:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1033:22:4"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1093:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1102:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1105:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1095:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1095:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1095:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "1074:3:4"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "1079:6:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1070:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1070:16:4"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "1088:3:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1067:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1067:25:4"
                              },
                              "nodeType": "YulIf",
                              "src": "1064:45:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1135:6:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1143:4:4",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1131:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1131:17:4"
                                  },
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "1150:3:4"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1155:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "1118:12:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1118:44:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1118:44:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "memPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "1186:6:4"
                                          },
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "1194:6:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1182:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1182:19:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1203:4:4",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1178:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1178:30:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1210:1:4",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1171:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1171:41:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1171:41:4"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_string",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "630:3:4",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "635:6:4",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "643:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "651:5:4",
                            "type": ""
                          }
                        ],
                        "src": "586:632:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1320:428:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1366:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1375:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1378:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1368:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1368:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1368:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1341:7:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1350:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1337:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1337:23:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1362:2:4",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1333:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1333:32:4"
                              },
                              "nodeType": "YulIf",
                              "src": "1330:52:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1391:39:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1420:9:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1401:18:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1401:29:4"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1391:6:4"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1439:46:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1470:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1481:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1466:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1466:18:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1453:12:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1453:32:4"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1443:6:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1528:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1537:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1540:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1530:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1530:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1530:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1500:6:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1508:18:4",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1497:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1497:30:4"
                              },
                              "nodeType": "YulIf",
                              "src": "1494:50:4"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1553:32:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1567:9:4"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1578:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1563:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1563:22:4"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1557:2:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1633:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1642:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1645:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1635:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1635:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1635:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "1612:2:4"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1616:4:4",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1608:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1608:13:4"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1623:7:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1604:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1604:27:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1597:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1597:35:4"
                              },
                              "nodeType": "YulIf",
                              "src": "1594:55:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1658:84:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1707:2:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1711:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1703:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1703:11:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1729:2:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "1716:12:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1716:16:4"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1734:7:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_string",
                                  "nodeType": "YulIdentifier",
                                  "src": "1668:34:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1668:74:4"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1658:6:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1278:9:4",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1289:7:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1301:6:4",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1309:6:4",
                            "type": ""
                          }
                        ],
                        "src": "1223:525:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1823:110:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1869:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1878:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1881:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1871:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1871:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1871:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1844:7:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1853:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1840:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1840:23:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1865:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1836:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1836:32:4"
                              },
                              "nodeType": "YulIf",
                              "src": "1833:52:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1894:33:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1917:9:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1904:12:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1904:23:4"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1894:6:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1789:9:4",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1800:7:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1812:6:4",
                            "type": ""
                          }
                        ],
                        "src": "1753:180:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2022:257:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2068:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2077:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2080:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2070:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2070:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2070:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2043:7:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2052:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2039:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2039:23:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2064:2:4",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2035:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2035:32:4"
                              },
                              "nodeType": "YulIf",
                              "src": "2032:52:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2093:33:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2116:9:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2103:12:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2103:23:4"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2093:6:4"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2135:45:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2165:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2176:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2161:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2161:18:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2148:12:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2148:32:4"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "2139:5:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2233:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2242:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2245:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2235:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2235:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2235:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2202:5:4"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "2223:5:4"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "2216:6:4"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2216:13:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "2209:6:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2209:21:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2199:2:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2199:32:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2192:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2192:40:4"
                              },
                              "nodeType": "YulIf",
                              "src": "2189:60:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2258:15:4",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2268:5:4"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2258:6:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1980:9:4",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1991:7:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2003:6:4",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2011:6:4",
                            "type": ""
                          }
                        ],
                        "src": "1938:341:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2354:116:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2400:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2409:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2412:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2402:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2402:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2402:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2375:7:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2384:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2371:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2371:23:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2396:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2367:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2367:32:4"
                              },
                              "nodeType": "YulIf",
                              "src": "2364:52:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2425:39:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2454:9:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2435:18:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2435:29:4"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2425:6:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2320:9:4",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2331:7:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2343:6:4",
                            "type": ""
                          }
                        ],
                        "src": "2284:186:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2525:373:4",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2535:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2555:5:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2549:5:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2549:12:4"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "2539:6:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2577:3:4"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2582:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2570:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2570:19:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2570:19:4"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2598:10:4",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2607:1:4",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "2602:1:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2669:110:4",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2683:14:4",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2693:4:4",
                                      "type": "",
                                      "value": "0x20"
                                    },
                                    "variables": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulTypedName",
                                        "src": "2687:2:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "pos",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2725:3:4"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2730:1:4"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "2721:3:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2721:11:4"
                                            },
                                            {
                                              "name": "_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "2734:2:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2717:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2717:20:4"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2753:5:4"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2760:1:4"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2749:3:4"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "2749:13:4"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2764:2:4"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "2745:3:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2745:22:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "2739:5:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2739:29:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2710:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2710:59:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2710:59:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "2628:1:4"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2631:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2625:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2625:13:4"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "2639:21:4",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2641:17:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2650:1:4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2653:4:4",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2646:3:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2646:12:4"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "2641:1:4"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "2621:3:4",
                                "statements": []
                              },
                              "src": "2617:162:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "2803:3:4"
                                          },
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "2808:6:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2799:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2799:16:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2817:4:4",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2795:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2795:27:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2824:1:4",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2788:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2788:38:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2788:38:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2835:57:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "2850:3:4"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "2863:6:4"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2871:2:4",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "2859:3:4"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2859:15:4"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2880:2:4",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "2876:3:4"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2876:7:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "2855:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2855:29:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2846:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2846:39:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2887:4:4",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2842:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2842:50:4"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "2835:3:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_string",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2502:5:4",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2509:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2517:3:4",
                            "type": ""
                          }
                        ],
                        "src": "2475:423:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3024:99:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3041:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3052:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3034:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3034:21:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3034:21:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3064:53:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3090:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3102:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3113:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3098:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3098:18:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_string",
                                  "nodeType": "YulIdentifier",
                                  "src": "3072:17:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3072:45:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3064:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2993:9:4",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3004:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3015:4:4",
                            "type": ""
                          }
                        ],
                        "src": "2903:220:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3224:432:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3270:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3279:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3282:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3272:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3272:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3272:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3245:7:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3254:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3241:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3241:23:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3266:2:4",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3237:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3237:32:4"
                              },
                              "nodeType": "YulIf",
                              "src": "3234:52:4"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3295:37:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3322:9:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3309:12:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3309:23:4"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "3299:6:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3375:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3384:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3387:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3377:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3377:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3377:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "3347:6:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3355:18:4",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3344:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3344:30:4"
                              },
                              "nodeType": "YulIf",
                              "src": "3341:50:4"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3400:32:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3414:9:4"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "3425:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3410:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3410:22:4"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "3404:2:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3480:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3489:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3492:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3482:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3482:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3482:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "3459:2:4"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3463:4:4",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3455:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3455:13:4"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3470:7:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3451:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3451:27:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3444:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3444:35:4"
                              },
                              "nodeType": "YulIf",
                              "src": "3441:55:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3505:86:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3554:2:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3558:4:4",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3550:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3550:13:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3578:2:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "3565:12:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3565:16:4"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3583:7:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_string",
                                  "nodeType": "YulIdentifier",
                                  "src": "3515:34:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3515:76:4"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3505:6:4"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3600:50:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3633:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3644:4:4",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3629:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3629:20:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3610:18:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3610:40:4"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3600:6:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes_memory_ptrt_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3182:9:4",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3193:7:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3205:6:4",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3213:6:4",
                            "type": ""
                          }
                        ],
                        "src": "3128:528:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3705:83:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3722:3:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3731:5:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3738:42:4",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3727:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3727:54:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3715:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3715:67:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3715:67:4"
                            }
                          ]
                        },
                        "name": "abi_encode_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3689:5:4",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3696:3:4",
                            "type": ""
                          }
                        ],
                        "src": "3661:127:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3894:125:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3904:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3916:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3927:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3912:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3912:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3904:4:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3946:9:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3961:6:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3969:42:4",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3957:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3957:55:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3939:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3939:74:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3939:74:4"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3863:9:4",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3874:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3885:4:4",
                            "type": ""
                          }
                        ],
                        "src": "3793:226:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4065:50:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4082:3:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4101:5:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "4094:6:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4094:13:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "4087:6:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4087:21:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4075:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4075:34:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4075:34:4"
                            }
                          ]
                        },
                        "name": "abi_encode_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4049:5:4",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4056:3:4",
                            "type": ""
                          }
                        ],
                        "src": "4024:91:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4163:55:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4180:3:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4189:5:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4196:14:4",
                                        "type": "",
                                        "value": "0xffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4185:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4185:26:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4173:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4173:39:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4173:39:4"
                            }
                          ]
                        },
                        "name": "abi_encode_uint48",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4147:5:4",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4154:3:4",
                            "type": ""
                          }
                        ],
                        "src": "4120:98:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4424:1756:4",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4434:12:4",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4444:2:4",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4438:2:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4455:32:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4473:9:4"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4484:2:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4469:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4469:18:4"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4459:6:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4503:9:4"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4514:2:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4496:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4496:21:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4496:21:4"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4526:17:4",
                              "value": {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "4537:6:4"
                              },
                              "variables": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulTypedName",
                                  "src": "4530:3:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4552:27:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4572:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4566:5:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4566:13:4"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "4556:6:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4595:6:4"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4603:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4588:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4588:22:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4588:22:4"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4619:12:4",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4629:2:4",
                                "type": "",
                                "value": "64"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "4623:2:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4640:25:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4651:9:4"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "4662:2:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4647:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4647:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "4640:3:4"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4674:53:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4696:9:4"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4711:1:4",
                                            "type": "",
                                            "value": "5"
                                          },
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "4714:6:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "4707:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4707:14:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4692:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4692:30:4"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "4724:2:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4688:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4688:39:4"
                              },
                              "variables": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulTypedName",
                                  "src": "4678:6:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4736:29:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4754:6:4"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4762:2:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4750:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4750:15:4"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "4740:6:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4774:10:4",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4783:1:4",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "4778:1:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4842:1309:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "4863:3:4"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "tail_2",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4876:6:4"
                                                },
                                                {
                                                  "name": "headStart",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4884:9:4"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sub",
                                                "nodeType": "YulIdentifier",
                                                "src": "4872:3:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "4872:22:4"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "4900:2:4",
                                                  "type": "",
                                                  "value": "63"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nodeType": "YulIdentifier",
                                                "src": "4896:3:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "4896:7:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "4868:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4868:36:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4856:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4856:49:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4856:49:4"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "4918:23:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "4934:6:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "4928:5:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4928:13:4"
                                    },
                                    "variables": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulTypedName",
                                        "src": "4922:2:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "4954:16:4",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4964:6:4",
                                      "type": "",
                                      "value": "0x0120"
                                    },
                                    "variables": [
                                      {
                                        "name": "_4",
                                        "nodeType": "YulTypedName",
                                        "src": "4958:2:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "_3",
                                              "nodeType": "YulIdentifier",
                                              "src": "5005:2:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "4999:5:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4999:9:4"
                                        },
                                        {
                                          "name": "tail_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "5010:6:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encode_bool",
                                        "nodeType": "YulIdentifier",
                                        "src": "4983:15:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4983:34:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4983:34:4"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5030:38:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "_3",
                                              "nodeType": "YulIdentifier",
                                              "src": "5060:2:4"
                                            },
                                            {
                                              "name": "_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "5064:2:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5056:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5056:11:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "5050:5:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5050:18:4"
                                    },
                                    "variables": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulTypedName",
                                        "src": "5034:12:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "memberValue0",
                                          "nodeType": "YulIdentifier",
                                          "src": "5097:12:4"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "tail_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "5115:6:4"
                                            },
                                            {
                                              "name": "_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "5123:2:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5111:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5111:15:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encode_bool",
                                        "nodeType": "YulIdentifier",
                                        "src": "5081:15:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5081:46:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5081:46:4"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5140:40:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "_3",
                                              "nodeType": "YulIdentifier",
                                              "src": "5172:2:4"
                                            },
                                            {
                                              "name": "_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "5176:2:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5168:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5168:11:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "5162:5:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5162:18:4"
                                    },
                                    "variables": [
                                      {
                                        "name": "memberValue0_1",
                                        "nodeType": "YulTypedName",
                                        "src": "5144:14:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "memberValue0_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "5212:14:4"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "tail_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "5232:6:4"
                                            },
                                            {
                                              "name": "_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "5240:2:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5228:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5228:15:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encode_address",
                                        "nodeType": "YulIdentifier",
                                        "src": "5193:18:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5193:51:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5193:51:4"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5257:14:4",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5267:4:4",
                                      "type": "",
                                      "value": "0x60"
                                    },
                                    "variables": [
                                      {
                                        "name": "_5",
                                        "nodeType": "YulTypedName",
                                        "src": "5261:2:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5284:40:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "_3",
                                              "nodeType": "YulIdentifier",
                                              "src": "5316:2:4"
                                            },
                                            {
                                              "name": "_5",
                                              "nodeType": "YulIdentifier",
                                              "src": "5320:2:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5312:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5312:11:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "5306:5:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5306:18:4"
                                    },
                                    "variables": [
                                      {
                                        "name": "memberValue0_2",
                                        "nodeType": "YulTypedName",
                                        "src": "5288:14:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "tail_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "5348:6:4"
                                            },
                                            {
                                              "name": "_5",
                                              "nodeType": "YulIdentifier",
                                              "src": "5356:2:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5344:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5344:15:4"
                                        },
                                        {
                                          "name": "_4",
                                          "nodeType": "YulIdentifier",
                                          "src": "5361:2:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5337:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5337:27:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5337:27:4"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5377:64:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "memberValue0_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "5409:14:4"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "tail_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "5429:6:4"
                                            },
                                            {
                                              "name": "_4",
                                              "nodeType": "YulIdentifier",
                                              "src": "5437:2:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5425:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5425:15:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encode_string",
                                        "nodeType": "YulIdentifier",
                                        "src": "5391:17:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5391:50:4"
                                    },
                                    "variables": [
                                      {
                                        "name": "tail_3",
                                        "nodeType": "YulTypedName",
                                        "src": "5381:6:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5454:14:4",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5464:4:4",
                                      "type": "",
                                      "value": "0x80"
                                    },
                                    "variables": [
                                      {
                                        "name": "_6",
                                        "nodeType": "YulTypedName",
                                        "src": "5458:2:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5481:40:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "_3",
                                              "nodeType": "YulIdentifier",
                                              "src": "5513:2:4"
                                            },
                                            {
                                              "name": "_6",
                                              "nodeType": "YulIdentifier",
                                              "src": "5517:2:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5509:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5509:11:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "5503:5:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5503:18:4"
                                    },
                                    "variables": [
                                      {
                                        "name": "memberValue0_3",
                                        "nodeType": "YulTypedName",
                                        "src": "5485:14:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "memberValue0_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "5553:14:4"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "tail_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "5573:6:4"
                                            },
                                            {
                                              "name": "_6",
                                              "nodeType": "YulIdentifier",
                                              "src": "5581:2:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5569:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5569:15:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encode_address",
                                        "nodeType": "YulIdentifier",
                                        "src": "5534:18:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5534:51:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5534:51:4"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5598:14:4",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5608:4:4",
                                      "type": "",
                                      "value": "0xa0"
                                    },
                                    "variables": [
                                      {
                                        "name": "_7",
                                        "nodeType": "YulTypedName",
                                        "src": "5602:2:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5625:40:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "_3",
                                              "nodeType": "YulIdentifier",
                                              "src": "5657:2:4"
                                            },
                                            {
                                              "name": "_7",
                                              "nodeType": "YulIdentifier",
                                              "src": "5661:2:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5653:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5653:11:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "5647:5:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5647:18:4"
                                    },
                                    "variables": [
                                      {
                                        "name": "memberValue0_4",
                                        "nodeType": "YulTypedName",
                                        "src": "5629:14:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "memberValue0_4",
                                          "nodeType": "YulIdentifier",
                                          "src": "5696:14:4"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "tail_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "5716:6:4"
                                            },
                                            {
                                              "name": "_7",
                                              "nodeType": "YulIdentifier",
                                              "src": "5724:2:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5712:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5712:15:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encode_uint48",
                                        "nodeType": "YulIdentifier",
                                        "src": "5678:17:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5678:50:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5678:50:4"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5741:14:4",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5751:4:4",
                                      "type": "",
                                      "value": "0xc0"
                                    },
                                    "variables": [
                                      {
                                        "name": "_8",
                                        "nodeType": "YulTypedName",
                                        "src": "5745:2:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5768:40:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "_3",
                                              "nodeType": "YulIdentifier",
                                              "src": "5800:2:4"
                                            },
                                            {
                                              "name": "_8",
                                              "nodeType": "YulIdentifier",
                                              "src": "5804:2:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5796:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5796:11:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "5790:5:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5790:18:4"
                                    },
                                    "variables": [
                                      {
                                        "name": "memberValue0_5",
                                        "nodeType": "YulTypedName",
                                        "src": "5772:14:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "memberValue0_5",
                                          "nodeType": "YulIdentifier",
                                          "src": "5839:14:4"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "tail_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "5859:6:4"
                                            },
                                            {
                                              "name": "_8",
                                              "nodeType": "YulIdentifier",
                                              "src": "5867:2:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5855:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5855:15:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encode_uint48",
                                        "nodeType": "YulIdentifier",
                                        "src": "5821:17:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5821:50:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5821:50:4"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5884:14:4",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5894:4:4",
                                      "type": "",
                                      "value": "0xe0"
                                    },
                                    "variables": [
                                      {
                                        "name": "_9",
                                        "nodeType": "YulTypedName",
                                        "src": "5888:2:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "tail_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "5922:6:4"
                                            },
                                            {
                                              "name": "_9",
                                              "nodeType": "YulIdentifier",
                                              "src": "5930:2:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5918:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5918:15:4"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "_3",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5945:2:4"
                                                },
                                                {
                                                  "name": "_9",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5949:2:4"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "5941:3:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "5941:11:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "5935:5:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5935:18:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5911:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5911:43:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5911:43:4"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5967:17:4",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5978:6:4",
                                      "type": "",
                                      "value": "0x0100"
                                    },
                                    "variables": [
                                      {
                                        "name": "_10",
                                        "nodeType": "YulTypedName",
                                        "src": "5971:3:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "tail_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "6008:6:4"
                                            },
                                            {
                                              "name": "_10",
                                              "nodeType": "YulIdentifier",
                                              "src": "6016:3:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "6004:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6004:16:4"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "_3",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "6032:2:4"
                                                },
                                                {
                                                  "name": "_10",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "6036:3:4"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "6028:3:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "6028:12:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "6022:5:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6022:19:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5997:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5997:45:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5997:45:4"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6055:16:4",
                                    "value": {
                                      "name": "tail_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "6065:6:4"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "tail_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "6055:6:4"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6084:25:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "6098:6:4"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "6106:2:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6094:3:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6094:15:4"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "6084:6:4"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6122:19:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "6133:3:4"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "6138:2:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6129:3:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6129:12:4"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "6122:3:4"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "4804:1:4"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4807:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4801:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4801:13:4"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "4815:18:4",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "4817:14:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "4826:1:4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4829:1:4",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "4822:3:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4822:9:4"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "4817:1:4"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "4797:3:4",
                                "statements": []
                              },
                              "src": "4793:1358:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6160:14:4",
                              "value": {
                                "name": "tail_2",
                                "nodeType": "YulIdentifier",
                                "src": "6168:6:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6160:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_struct$_Proposal_$246_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Proposal_$246_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4393:9:4",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4404:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4415:4:4",
                            "type": ""
                          }
                        ],
                        "src": "4223:1957:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6280:92:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6290:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6302:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6313:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6298:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6298:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6290:4:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6332:9:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "6357:6:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "6350:6:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6350:14:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "6343:6:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6343:22:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6325:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6325:41:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6325:41:4"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6249:9:4",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6260:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6271:4:4",
                            "type": ""
                          }
                        ],
                        "src": "6185:187:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6432:382:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6442:22:4",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6456:1:4",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "6459:4:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6452:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6452:12:4"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "6442:6:4"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6473:38:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "6503:4:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6509:1:4",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6499:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6499:12:4"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "6477:18:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6550:31:4",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6552:27:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "6566:6:4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6574:4:4",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "6562:3:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6562:17:4"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "6552:6:4"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "6530:18:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6523:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6523:26:4"
                              },
                              "nodeType": "YulIf",
                              "src": "6520:61:4"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6640:168:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6661:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6664:77:4",
                                          "type": "",
                                          "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "6654:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6654:88:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6654:88:4"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6762:1:4",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6765:4:4",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "6755:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6755:15:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6755:15:4"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6790:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6793:4:4",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6783:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6783:15:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6783:15:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "6596:18:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "6619:6:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6627:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "6616:2:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6616:14:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "6593:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6593:38:4"
                              },
                              "nodeType": "YulIf",
                              "src": "6590:218:4"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "6412:4:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "6421:6:4",
                            "type": ""
                          }
                        ],
                        "src": "6377:437:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6993:166:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7010:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7021:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7003:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7003:21:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7003:21:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7044:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7055:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7040:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7040:18:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7060:2:4",
                                    "type": "",
                                    "value": "16"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7033:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7033:30:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7033:30:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7083:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7094:2:4",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7079:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7079:18:4"
                                  },
                                  {
                                    "hexValue": "416c72656164792061206d656d626572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7099:18:4",
                                    "type": "",
                                    "value": "Already a member"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7072:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7072:46:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7072:46:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7127:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7139:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7150:2:4",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7135:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7135:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7127:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_dfc1e7d81d5851bb6264d6497aa3b1c2293167cdc5b1d514e67ce45c171905c1__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6970:9:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6984:4:4",
                            "type": ""
                          }
                        ],
                        "src": "6819:340:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7220:65:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7237:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "7240:3:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7230:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7230:14:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7230:14:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7253:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7271:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7274:4:4",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nodeType": "YulIdentifier",
                                  "src": "7261:9:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7261:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "7253:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_string_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "7203:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "7211:4:4",
                            "type": ""
                          }
                        ],
                        "src": "7164:121:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7371:464:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7404:425:4",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "7418:11:4",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7428:1:4",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulTypedName",
                                        "src": "7422:2:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "7449:2:4"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "7453:5:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "7442:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7442:17:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7442:17:4"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "7472:31:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "7494:2:4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7498:4:4",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "keccak256",
                                        "nodeType": "YulIdentifier",
                                        "src": "7484:9:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7484:19:4"
                                    },
                                    "variables": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulTypedName",
                                        "src": "7476:4:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "7516:57:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nodeType": "YulIdentifier",
                                          "src": "7539:4:4"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "7549:1:4",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "startIndex",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7556:10:4"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "7568:2:4",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "7552:3:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "7552:19:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nodeType": "YulIdentifier",
                                            "src": "7545:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7545:27:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "7535:3:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7535:38:4"
                                    },
                                    "variables": [
                                      {
                                        "name": "deleteStart",
                                        "nodeType": "YulTypedName",
                                        "src": "7520:11:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "7610:23:4",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "7612:19:4",
                                          "value": {
                                            "name": "data",
                                            "nodeType": "YulIdentifier",
                                            "src": "7627:4:4"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "deleteStart",
                                              "nodeType": "YulIdentifier",
                                              "src": "7612:11:4"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nodeType": "YulIdentifier",
                                          "src": "7592:10:4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7604:4:4",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nodeType": "YulIdentifier",
                                        "src": "7589:2:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7589:20:4"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "7586:47:4"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "7646:41:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nodeType": "YulIdentifier",
                                          "src": "7660:4:4"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "7670:1:4",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "len",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7677:3:4"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "7682:2:4",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "7673:3:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "7673:12:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nodeType": "YulIdentifier",
                                            "src": "7666:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7666:20:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "7656:3:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7656:31:4"
                                    },
                                    "variables": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulTypedName",
                                        "src": "7650:2:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "7700:24:4",
                                    "value": {
                                      "name": "deleteStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "7713:11:4"
                                    },
                                    "variables": [
                                      {
                                        "name": "start",
                                        "nodeType": "YulTypedName",
                                        "src": "7704:5:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "7798:21:4",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nodeType": "YulIdentifier",
                                                "src": "7807:5:4"
                                              },
                                              {
                                                "name": "_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "7814:2:4"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "7800:6:4"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7800:17:4"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "7800:17:4"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "start",
                                          "nodeType": "YulIdentifier",
                                          "src": "7748:5:4"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "7755:2:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nodeType": "YulIdentifier",
                                        "src": "7745:2:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7745:13:4"
                                    },
                                    "nodeType": "YulForLoop",
                                    "post": {
                                      "nodeType": "YulBlock",
                                      "src": "7759:26:4",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "7761:22:4",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nodeType": "YulIdentifier",
                                                "src": "7774:5:4"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "7781:1:4",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "7770:3:4"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7770:13:4"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "start",
                                              "nodeType": "YulIdentifier",
                                              "src": "7761:5:4"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "pre": {
                                      "nodeType": "YulBlock",
                                      "src": "7741:3:4",
                                      "statements": []
                                    },
                                    "src": "7737:82:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "len",
                                    "nodeType": "YulIdentifier",
                                    "src": "7387:3:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7392:2:4",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7384:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7384:11:4"
                              },
                              "nodeType": "YulIf",
                              "src": "7381:448:4"
                            }
                          ]
                        },
                        "name": "clean_up_bytearray_end_slots_string_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "7343:5:4",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nodeType": "YulTypedName",
                            "src": "7350:3:4",
                            "type": ""
                          },
                          {
                            "name": "startIndex",
                            "nodeType": "YulTypedName",
                            "src": "7355:10:4",
                            "type": ""
                          }
                        ],
                        "src": "7290:545:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7925:81:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7935:65:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "7950:4:4"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "7968:1:4",
                                                    "type": "",
                                                    "value": "3"
                                                  },
                                                  {
                                                    "name": "len",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "7971:3:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7964:3:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "7964:11:4"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "7981:1:4",
                                                    "type": "",
                                                    "value": "0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "not",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7977:3:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "7977:6:4"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shr",
                                              "nodeType": "YulIdentifier",
                                              "src": "7960:3:4"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7960:24:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "7956:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7956:29:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "7946:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7946:40:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7992:1:4",
                                        "type": "",
                                        "value": "1"
                                      },
                                      {
                                        "name": "len",
                                        "nodeType": "YulIdentifier",
                                        "src": "7995:3:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "7988:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7988:11:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "7943:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7943:57:4"
                              },
                              "variableNames": [
                                {
                                  "name": "used",
                                  "nodeType": "YulIdentifier",
                                  "src": "7935:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_used_part_and_set_length_of_short_byte_array",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "7902:4:4",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nodeType": "YulTypedName",
                            "src": "7908:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "used",
                            "nodeType": "YulTypedName",
                            "src": "7916:4:4",
                            "type": ""
                          }
                        ],
                        "src": "7840:166:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8107:1256:4",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8117:24:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "8137:3:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "8131:5:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8131:10:4"
                              },
                              "variables": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulTypedName",
                                  "src": "8121:6:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8184:22:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "8186:16:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8186:18:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8186:18:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "8156:6:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8164:18:4",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8153:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8153:30:4"
                              },
                              "nodeType": "YulIf",
                              "src": "8150:56:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "8259:4:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nodeType": "YulIdentifier",
                                            "src": "8297:4:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nodeType": "YulIdentifier",
                                          "src": "8291:5:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8291:11:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_byte_array_length",
                                      "nodeType": "YulIdentifier",
                                      "src": "8265:25:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8265:38:4"
                                  },
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "8305:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "clean_up_bytearray_end_slots_string_storage",
                                  "nodeType": "YulIdentifier",
                                  "src": "8215:43:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8215:97:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8215:97:4"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8321:18:4",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8338:1:4",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset",
                                  "nodeType": "YulTypedName",
                                  "src": "8325:9:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8348:23:4",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8367:4:4",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "8352:11:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8380:24:4",
                              "value": {
                                "name": "srcOffset_1",
                                "nodeType": "YulIdentifier",
                                "src": "8393:11:4"
                              },
                              "variableNames": [
                                {
                                  "name": "srcOffset",
                                  "nodeType": "YulIdentifier",
                                  "src": "8380:9:4"
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "8450:656:4",
                                    "statements": [
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "8464:35:4",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "8483:6:4"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "8495:2:4",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nodeType": "YulIdentifier",
                                                "src": "8491:3:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "8491:7:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "8479:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8479:20:4"
                                        },
                                        "variables": [
                                          {
                                            "name": "loopEnd",
                                            "nodeType": "YulTypedName",
                                            "src": "8468:7:4",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "8512:49:4",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "8556:4:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "array_dataslot_string_storage",
                                            "nodeType": "YulIdentifier",
                                            "src": "8526:29:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8526:35:4"
                                        },
                                        "variables": [
                                          {
                                            "name": "dstPtr",
                                            "nodeType": "YulTypedName",
                                            "src": "8516:6:4",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "8574:10:4",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8583:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nodeType": "YulTypedName",
                                            "src": "8578:1:4",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "8661:172:4",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8686:6:4"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "src",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8704:3:4"
                                                          },
                                                          {
                                                            "name": "srcOffset",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8709:9:4"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "8700:3:4"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "8700:19:4"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "8694:5:4"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "8694:26:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8679:6:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "8679:42:4"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "8679:42:4"
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "8738:24:4",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8752:6:4"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "8760:1:4",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8748:3:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "8748:14:4"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dstPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8738:6:4"
                                                }
                                              ]
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "8779:40:4",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "srcOffset",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8796:9:4"
                                                  },
                                                  {
                                                    "name": "srcOffset_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8807:11:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8792:3:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "8792:27:4"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "srcOffset",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8779:9:4"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "8608:1:4"
                                            },
                                            {
                                              "name": "loopEnd",
                                              "nodeType": "YulIdentifier",
                                              "src": "8611:7:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "8605:2:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8605:14:4"
                                        },
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nodeType": "YulBlock",
                                          "src": "8620:28:4",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "8622:24:4",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8631:1:4"
                                                  },
                                                  {
                                                    "name": "srcOffset_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8634:11:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8627:3:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "8627:19:4"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8622:1:4"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nodeType": "YulBlock",
                                          "src": "8601:3:4",
                                          "statements": []
                                        },
                                        "src": "8597:236:4"
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "8881:166:4",
                                          "statements": [
                                            {
                                              "nodeType": "YulVariableDeclaration",
                                              "src": "8899:43:4",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "8926:3:4"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "8931:9:4"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "8922:3:4"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "8922:19:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8916:5:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "8916:26:4"
                                              },
                                              "variables": [
                                                {
                                                  "name": "lastValue",
                                                  "nodeType": "YulTypedName",
                                                  "src": "8903:9:4",
                                                  "type": ""
                                                }
                                              ]
                                            },
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8966:6:4"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "lastValue",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "8978:9:4"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "arguments": [
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "arguments": [
                                                                      {
                                                                        "kind": "number",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "9005:1:4",
                                                                        "type": "",
                                                                        "value": "3"
                                                                      },
                                                                      {
                                                                        "name": "newLen",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "9008:6:4"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "shl",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "9001:3:4"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "9001:14:4"
                                                                  },
                                                                  {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "9017:3:4",
                                                                    "type": "",
                                                                    "value": "248"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "and",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "8997:3:4"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "8997:24:4"
                                                              },
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "9027:1:4",
                                                                    "type": "",
                                                                    "value": "0"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "not",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "9023:3:4"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "9023:6:4"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "shr",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "8993:3:4"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "8993:37:4"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "not",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "8989:3:4"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "8989:42:4"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "8974:3:4"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "8974:58:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8959:6:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "8959:74:4"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "8959:74:4"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "loopEnd",
                                              "nodeType": "YulIdentifier",
                                              "src": "8852:7:4"
                                            },
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "8861:6:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "8849:2:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8849:19:4"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "8846:201:4"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "9067:4:4"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "9081:1:4",
                                                      "type": "",
                                                      "value": "1"
                                                    },
                                                    {
                                                      "name": "newLen",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9084:6:4"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9077:3:4"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "9077:14:4"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "9093:1:4",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "9073:3:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "9073:22:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "9060:6:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "9060:36:4"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "9060:36:4"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "8443:663:4",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8448:1:4",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "9123:234:4",
                                    "statements": [
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "9137:14:4",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9150:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulTypedName",
                                            "src": "9141:5:4",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "9186:67:4",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "9204:35:4",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "9223:3:4"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "9228:9:4"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9219:3:4"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "9219:19:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "9213:5:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "9213:26:4"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "value",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "9204:5:4"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "9167:6:4"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "9164:89:4"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "9273:4:4"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "value",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "9332:5:4"
                                                },
                                                {
                                                  "name": "newLen",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "9339:6:4"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "extract_used_part_and_set_length_of_short_byte_array",
                                                "nodeType": "YulIdentifier",
                                                "src": "9279:52:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "9279:67:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "9266:6:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "9266:81:4"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "9266:81:4"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "9115:242:4",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "8423:6:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8431:2:4",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8420:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8420:14:4"
                              },
                              "nodeType": "YulSwitch",
                              "src": "8413:944:4"
                            }
                          ]
                        },
                        "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nodeType": "YulTypedName",
                            "src": "8092:4:4",
                            "type": ""
                          },
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "8098:3:4",
                            "type": ""
                          }
                        ],
                        "src": "8011:1352:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9542:171:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9559:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9570:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9552:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9552:21:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9552:21:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9593:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9604:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9589:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9589:18:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9609:2:4",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9582:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9582:30:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9582:30:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9632:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9643:2:4",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9628:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9628:18:4"
                                  },
                                  {
                                    "hexValue": "566f74696e67207374696c6c20676f696e67206f6e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9648:23:4",
                                    "type": "",
                                    "value": "Voting still going on"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9621:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9621:51:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9621:51:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9681:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9693:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9704:2:4",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9689:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9689:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9681:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_5c9009bc8bee59dbb920e11238c507982df9038214a09ed1af52892e51b5ea54__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9519:9:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9533:4:4",
                            "type": ""
                          }
                        ],
                        "src": "9368:345:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9892:227:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9909:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9920:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9902:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9902:21:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9902:21:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9943:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9954:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9939:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9939:18:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9959:2:4",
                                    "type": "",
                                    "value": "37"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9932:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9932:30:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9932:30:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9982:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9993:2:4",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9978:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9978:18:4"
                                  },
                                  {
                                    "hexValue": "50726f706f73616c20616c7265616479206578656375746564206f722063616e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9998:34:4",
                                    "type": "",
                                    "value": "Proposal already executed or can"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9971:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9971:62:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9971:62:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10053:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10064:2:4",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10049:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10049:18:4"
                                  },
                                  {
                                    "hexValue": "63656c6564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10069:7:4",
                                    "type": "",
                                    "value": "celed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10042:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10042:35:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10042:35:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10086:27:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10098:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10109:3:4",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10094:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10094:19:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10086:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_1ed80dbd6dca446e698a4eabb0a8cbb85820e26a7b77774a890ffefff2b63d68__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9869:9:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9883:4:4",
                            "type": ""
                          }
                        ],
                        "src": "9718:401:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10156:152:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10173:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10176:77:4",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10166:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10166:88:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10166:88:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10270:1:4",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10273:4:4",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10263:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10263:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10263:15:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10294:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10297:4:4",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "10287:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10287:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10287:15:4"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "10124:184:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10362:79:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10372:17:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "10384:1:4"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "10387:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "10380:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10380:9:4"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "10372:4:4"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "10413:22:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "10415:16:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10415:18:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10415:18:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "diff",
                                    "nodeType": "YulIdentifier",
                                    "src": "10404:4:4"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "10410:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "10401:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10401:11:4"
                              },
                              "nodeType": "YulIf",
                              "src": "10398:37:4"
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "10344:1:4",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "10347:1:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "10353:4:4",
                            "type": ""
                          }
                        ],
                        "src": "10313:128:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10620:225:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10637:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10648:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10630:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10630:21:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10630:21:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10671:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10682:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10667:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10667:18:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10687:2:4",
                                    "type": "",
                                    "value": "35"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10660:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10660:30:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10660:30:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10710:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10721:2:4",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10706:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10706:18:4"
                                  },
                                  {
                                    "hexValue": "50726f706f73616c20646f65736e27742068617665206d616a6f726974792076",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10726:34:4",
                                    "type": "",
                                    "value": "Proposal doesn't have majority v"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10699:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10699:62:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10699:62:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10781:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10792:2:4",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10777:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10777:18:4"
                                  },
                                  {
                                    "hexValue": "6f7465",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10797:5:4",
                                    "type": "",
                                    "value": "ote"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10770:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10770:33:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10770:33:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10812:27:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10824:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10835:3:4",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10820:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10820:19:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10812:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_d27203fcf6fbbfad1033321a968e800bedd57a10fcf4c94010e362c1f65d2021__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10597:9:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10611:4:4",
                            "type": ""
                          }
                        ],
                        "src": "10446:399:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10882:152:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10899:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10902:77:4",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10892:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10892:88:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10892:88:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10996:1:4",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10999:4:4",
                                    "type": "",
                                    "value": "0x21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10989:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10989:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10989:15:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11020:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11023:4:4",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "11013:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11013:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11013:15:4"
                            }
                          ]
                        },
                        "name": "panic_error_0x21",
                        "nodeType": "YulFunctionDefinition",
                        "src": "10850:184:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11173:706:4",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11183:12:4",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11194:1:4",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulTypedName",
                                  "src": "11187:3:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11204:30:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "11227:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "sload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11221:5:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11221:13:4"
                              },
                              "variables": [
                                {
                                  "name": "slotValue",
                                  "nodeType": "YulTypedName",
                                  "src": "11208:9:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11243:50:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "slotValue",
                                    "nodeType": "YulIdentifier",
                                    "src": "11283:9:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "extract_byte_array_length",
                                  "nodeType": "YulIdentifier",
                                  "src": "11257:25:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11257:36:4"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "11247:6:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11302:11:4",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11312:1:4",
                                "type": "",
                                "value": "1"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "11306:2:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "11363:126:4",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "pos",
                                              "nodeType": "YulIdentifier",
                                              "src": "11384:3:4"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "slotValue",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11393:9:4"
                                                },
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "11408:3:4",
                                                      "type": "",
                                                      "value": "255"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "not",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "11404:3:4"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "11404:8:4"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "and",
                                                "nodeType": "YulIdentifier",
                                                "src": "11389:3:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "11389:24:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "11377:6:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11377:37:4"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "11377:37:4"
                                      },
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "11427:52:4",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "pos",
                                              "nodeType": "YulIdentifier",
                                              "src": "11438:3:4"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "length",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11447:6:4"
                                                },
                                                {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "name": "length",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "11469:6:4"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "iszero",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "11462:6:4"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "11462:14:4"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "iszero",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "11455:6:4"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "11455:22:4"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mul",
                                                "nodeType": "YulIdentifier",
                                                "src": "11443:3:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "11443:35:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "11434:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11434:45:4"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "ret",
                                            "nodeType": "YulIdentifier",
                                            "src": "11427:3:4"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "11356:133:4",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11361:1:4",
                                    "type": "",
                                    "value": "0"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "11505:349:4",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "11526:1:4",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "name": "value0",
                                              "nodeType": "YulIdentifier",
                                              "src": "11529:6:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "11519:6:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11519:17:4"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "11519:17:4"
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "11549:14:4",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11559:4:4",
                                          "type": "",
                                          "value": "0x20"
                                        },
                                        "variables": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulTypedName",
                                            "src": "11553:2:4",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "11576:31:4",
                                        "value": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "11601:1:4",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "name": "_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "11604:2:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "keccak256",
                                            "nodeType": "YulIdentifier",
                                            "src": "11591:9:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11591:16:4"
                                        },
                                        "variables": [
                                          {
                                            "name": "dataPos",
                                            "nodeType": "YulTypedName",
                                            "src": "11580:7:4",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "11620:10:4",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11629:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nodeType": "YulTypedName",
                                            "src": "11624:1:4",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "11697:111:4",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "pos",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "11726:3:4"
                                                      },
                                                      {
                                                        "name": "i",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "11731:1:4"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "11722:3:4"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "11722:11:4"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "dataPos",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "11741:7:4"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "sload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "11735:5:4"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "11735:14:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11715:6:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "11715:35:4"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "11715:35:4"
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "11767:27:4",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dataPos",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "11782:7:4"
                                                  },
                                                  {
                                                    "name": "_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "11791:2:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11778:3:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "11778:16:4"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dataPos",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11767:7:4"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "11654:1:4"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "11657:6:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "11651:2:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11651:13:4"
                                        },
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nodeType": "YulBlock",
                                          "src": "11665:19:4",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "11667:15:4",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "11676:1:4"
                                                  },
                                                  {
                                                    "name": "_2",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "11679:2:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11672:3:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "11672:10:4"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11667:1:4"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nodeType": "YulBlock",
                                          "src": "11647:3:4",
                                          "statements": []
                                        },
                                        "src": "11643:165:4"
                                      },
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "11821:23:4",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "pos",
                                              "nodeType": "YulIdentifier",
                                              "src": "11832:3:4"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "11837:6:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "11828:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11828:16:4"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "ret",
                                            "nodeType": "YulIdentifier",
                                            "src": "11821:3:4"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "11498:356:4",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11503:1:4",
                                    "type": "",
                                    "value": "1"
                                  }
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slotValue",
                                    "nodeType": "YulIdentifier",
                                    "src": "11333:9:4"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11344:2:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "11329:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11329:18:4"
                              },
                              "nodeType": "YulSwitch",
                              "src": "11322:532:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11863:10:4",
                              "value": {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "11870:3:4"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "11863:3:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes_storage__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "11149:3:4",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11154:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "11165:3:4",
                            "type": ""
                          }
                        ],
                        "src": "11039:840:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12058:175:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12075:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12086:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12068:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12068:21:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12068:21:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12109:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12120:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12105:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12105:18:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12125:2:4",
                                    "type": "",
                                    "value": "25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12098:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12098:30:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12098:30:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12148:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12159:2:4",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12144:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12144:18:4"
                                  },
                                  {
                                    "hexValue": "50726f706f73616c20657865637574696f6e206661696c6564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12164:27:4",
                                    "type": "",
                                    "value": "Proposal execution failed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12137:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12137:55:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12137:55:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12201:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12213:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12224:2:4",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12209:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12209:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12201:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e5d9f649299ee85783b2616e2f07c28a0fc3d2f87d807d27b247fea0d242005a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12035:9:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12049:4:4",
                            "type": ""
                          }
                        ],
                        "src": "11884:349:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12412:162:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12429:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12440:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12422:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12422:21:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12422:21:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12463:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12474:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12459:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12459:18:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12479:2:4",
                                    "type": "",
                                    "value": "12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12452:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12452:30:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12452:30:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12502:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12513:2:4",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12498:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12498:18:4"
                                  },
                                  {
                                    "hexValue": "4e6f742061206d656d626572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12518:14:4",
                                    "type": "",
                                    "value": "Not a member"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12491:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12491:42:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12491:42:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12542:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12554:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12565:2:4",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12550:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12550:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12542:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_8cfc078b32cffb255e9e243136e6cde5d6a128600e2bb8733edd3b242e99fb55__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12389:9:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12403:4:4",
                            "type": ""
                          }
                        ],
                        "src": "12238:336:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12753:169:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12770:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12781:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12763:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12763:21:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12763:21:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12804:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12815:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12800:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12800:18:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12820:2:4",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12793:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12793:30:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12793:30:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12843:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12854:2:4",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12839:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12839:18:4"
                                  },
                                  {
                                    "hexValue": "4d656d626572206e6f7420617070726f766564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12859:21:4",
                                    "type": "",
                                    "value": "Member not approved"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12832:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12832:49:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12832:49:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12890:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12902:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12913:2:4",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12898:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12898:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12890:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_bec830c85e64815bcd0949fd1f66579df95e396bf9d122729ccf8df63010f70a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12730:9:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12744:4:4",
                            "type": ""
                          }
                        ],
                        "src": "12579:343:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13101:224:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13118:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13129:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13111:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13111:21:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13111:21:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13152:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13163:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13148:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13148:18:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13168:2:4",
                                    "type": "",
                                    "value": "34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13141:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13141:30:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13141:30:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13191:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13202:2:4",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13187:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13187:18:4"
                                  },
                                  {
                                    "hexValue": "566f74696e67206973206e6f7420616c6c6f7765642061742074686973207469",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13207:34:4",
                                    "type": "",
                                    "value": "Voting is not allowed at this ti"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13180:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13180:62:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13180:62:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13262:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13273:2:4",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13258:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13258:18:4"
                                  },
                                  {
                                    "hexValue": "6d65",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13278:4:4",
                                    "type": "",
                                    "value": "me"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13251:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13251:32:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13251:32:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13292:27:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13304:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13315:3:4",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13300:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13300:19:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13292:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_1ff520094f2722719f574911d75c1de55db2c63e3b4c3b886282397905c35e04__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13078:9:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13092:4:4",
                            "type": ""
                          }
                        ],
                        "src": "12927:398:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13504:181:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13521:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13532:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13514:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13514:21:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13514:21:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13555:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13566:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13551:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13551:18:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13571:2:4",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13544:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13544:30:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13544:30:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13594:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13605:2:4",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13590:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13590:18:4"
                                  },
                                  {
                                    "hexValue": "416c726561647920766f74656420666f7220746869732070726f706f73616c",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13610:33:4",
                                    "type": "",
                                    "value": "Already voted for this proposal"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13583:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13583:61:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13583:61:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13653:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13665:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13676:2:4",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13661:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13661:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13653:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_8ebabe3ccf5c2f49d1b735f59bd3c0192bcfbdb2c10693c6c90eb8e5d3c1aa34__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13481:9:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13495:4:4",
                            "type": ""
                          }
                        ],
                        "src": "13330:355:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13737:129:4",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "13747:24:4",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13757:14:4",
                                "type": "",
                                "value": "0xffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "13751:2:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13780:34:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "13795:1:4"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "13798:2:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "13791:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13791:10:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "13807:1:4"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "13810:2:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "13803:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13803:10:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13787:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13787:27:4"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "13780:3:4"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "13838:22:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "13840:16:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13840:18:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "13840:18:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "sum",
                                    "nodeType": "YulIdentifier",
                                    "src": "13829:3:4"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "13834:2:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "13826:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13826:11:4"
                              },
                              "nodeType": "YulIf",
                              "src": "13823:37:4"
                            }
                          ]
                        },
                        "name": "checked_add_t_uint48",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "13720:1:4",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "13723:1:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "13729:3:4",
                            "type": ""
                          }
                        ],
                        "src": "13690:176:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13965:1256:4",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "13975:24:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "13995:3:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "13989:5:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13989:10:4"
                              },
                              "variables": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulTypedName",
                                  "src": "13979:6:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14042:22:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "14044:16:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14044:18:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14044:18:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "14014:6:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14022:18:4",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "14011:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14011:30:4"
                              },
                              "nodeType": "YulIf",
                              "src": "14008:56:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "14117:4:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nodeType": "YulIdentifier",
                                            "src": "14155:4:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nodeType": "YulIdentifier",
                                          "src": "14149:5:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14149:11:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_byte_array_length",
                                      "nodeType": "YulIdentifier",
                                      "src": "14123:25:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14123:38:4"
                                  },
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "14163:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "clean_up_bytearray_end_slots_string_storage",
                                  "nodeType": "YulIdentifier",
                                  "src": "14073:43:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14073:97:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14073:97:4"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "14179:18:4",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14196:1:4",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset",
                                  "nodeType": "YulTypedName",
                                  "src": "14183:9:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "14206:23:4",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14225:4:4",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "14210:11:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14238:24:4",
                              "value": {
                                "name": "srcOffset_1",
                                "nodeType": "YulIdentifier",
                                "src": "14251:11:4"
                              },
                              "variableNames": [
                                {
                                  "name": "srcOffset",
                                  "nodeType": "YulIdentifier",
                                  "src": "14238:9:4"
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "14308:656:4",
                                    "statements": [
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "14322:35:4",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "14341:6:4"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "14353:2:4",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nodeType": "YulIdentifier",
                                                "src": "14349:3:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "14349:7:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "14337:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "14337:20:4"
                                        },
                                        "variables": [
                                          {
                                            "name": "loopEnd",
                                            "nodeType": "YulTypedName",
                                            "src": "14326:7:4",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "14370:49:4",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "14414:4:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "array_dataslot_string_storage",
                                            "nodeType": "YulIdentifier",
                                            "src": "14384:29:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "14384:35:4"
                                        },
                                        "variables": [
                                          {
                                            "name": "dstPtr",
                                            "nodeType": "YulTypedName",
                                            "src": "14374:6:4",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "14432:10:4",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14441:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nodeType": "YulTypedName",
                                            "src": "14436:1:4",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "14519:172:4",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "14544:6:4"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "src",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "14562:3:4"
                                                          },
                                                          {
                                                            "name": "srcOffset",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "14567:9:4"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "14558:3:4"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "14558:19:4"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "14552:5:4"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "14552:26:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "14537:6:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "14537:42:4"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "14537:42:4"
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "14596:24:4",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "14610:6:4"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "14618:1:4",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "14606:3:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "14606:14:4"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dstPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "14596:6:4"
                                                }
                                              ]
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "14637:40:4",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "srcOffset",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "14654:9:4"
                                                  },
                                                  {
                                                    "name": "srcOffset_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "14665:11:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "14650:3:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "14650:27:4"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "srcOffset",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "14637:9:4"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "14466:1:4"
                                            },
                                            {
                                              "name": "loopEnd",
                                              "nodeType": "YulIdentifier",
                                              "src": "14469:7:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "14463:2:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "14463:14:4"
                                        },
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nodeType": "YulBlock",
                                          "src": "14478:28:4",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "14480:24:4",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "14489:1:4"
                                                  },
                                                  {
                                                    "name": "srcOffset_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "14492:11:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "14485:3:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "14485:19:4"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "14480:1:4"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nodeType": "YulBlock",
                                          "src": "14459:3:4",
                                          "statements": []
                                        },
                                        "src": "14455:236:4"
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "14739:166:4",
                                          "statements": [
                                            {
                                              "nodeType": "YulVariableDeclaration",
                                              "src": "14757:43:4",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "14784:3:4"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "14789:9:4"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "14780:3:4"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "14780:19:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "14774:5:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "14774:26:4"
                                              },
                                              "variables": [
                                                {
                                                  "name": "lastValue",
                                                  "nodeType": "YulTypedName",
                                                  "src": "14761:9:4",
                                                  "type": ""
                                                }
                                              ]
                                            },
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "14824:6:4"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "lastValue",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "14836:9:4"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "arguments": [
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "arguments": [
                                                                      {
                                                                        "kind": "number",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "14863:1:4",
                                                                        "type": "",
                                                                        "value": "3"
                                                                      },
                                                                      {
                                                                        "name": "newLen",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "14866:6:4"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "shl",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "14859:3:4"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "14859:14:4"
                                                                  },
                                                                  {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "14875:3:4",
                                                                    "type": "",
                                                                    "value": "248"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "and",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "14855:3:4"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "14855:24:4"
                                                              },
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "14885:1:4",
                                                                    "type": "",
                                                                    "value": "0"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "not",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "14881:3:4"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "14881:6:4"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "shr",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "14851:3:4"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "14851:37:4"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "not",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "14847:3:4"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "14847:42:4"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "14832:3:4"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "14832:58:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "14817:6:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "14817:74:4"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "14817:74:4"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "loopEnd",
                                              "nodeType": "YulIdentifier",
                                              "src": "14710:7:4"
                                            },
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "14719:6:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "14707:2:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "14707:19:4"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "14704:201:4"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "14925:4:4"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "14939:1:4",
                                                      "type": "",
                                                      "value": "1"
                                                    },
                                                    {
                                                      "name": "newLen",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "14942:6:4"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "14935:3:4"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "14935:14:4"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "14951:1:4",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "14931:3:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "14931:22:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "14918:6:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "14918:36:4"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "14918:36:4"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "14301:663:4",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14306:1:4",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "14981:234:4",
                                    "statements": [
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "14995:14:4",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15008:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulTypedName",
                                            "src": "14999:5:4",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "15044:67:4",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "15062:35:4",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "15081:3:4"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "15086:9:4"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "15077:3:4"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "15077:19:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15071:5:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "15071:26:4"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "value",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15062:5:4"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "15025:6:4"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "15022:89:4"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "15131:4:4"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "value",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15190:5:4"
                                                },
                                                {
                                                  "name": "newLen",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15197:6:4"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "extract_used_part_and_set_length_of_short_byte_array",
                                                "nodeType": "YulIdentifier",
                                                "src": "15137:52:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "15137:67:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "15124:6:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "15124:81:4"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "15124:81:4"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "14973:242:4",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "14281:6:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14289:2:4",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "14278:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14278:14:4"
                              },
                              "nodeType": "YulSwitch",
                              "src": "14271:944:4"
                            }
                          ]
                        },
                        "name": "copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nodeType": "YulTypedName",
                            "src": "13950:4:4",
                            "type": ""
                          },
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "13956:3:4",
                            "type": ""
                          }
                        ],
                        "src": "13871:1350:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15345:99:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15362:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15373:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15355:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15355:21:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15355:21:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15385:53:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "15411:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15423:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15434:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15419:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15419:18:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_string",
                                  "nodeType": "YulIdentifier",
                                  "src": "15393:17:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15393:45:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15385:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15314:9:4",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "15325:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15336:4:4",
                            "type": ""
                          }
                        ],
                        "src": "15226:218:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15481:152:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15498:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15501:77:4",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15491:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15491:88:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15491:88:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15595:1:4",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15598:4:4",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15588:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15588:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15588:15:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15619:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15622:4:4",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "15612:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15612:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15612:15:4"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "15449:184:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15686:77:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15696:16:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "15707:1:4"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "15710:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15703:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15703:9:4"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "15696:3:4"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15735:22:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "15737:16:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15737:18:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15737:18:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "15727:1:4"
                                  },
                                  {
                                    "name": "sum",
                                    "nodeType": "YulIdentifier",
                                    "src": "15730:3:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "15724:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15724:10:4"
                              },
                              "nodeType": "YulIf",
                              "src": "15721:36:4"
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "15669:1:4",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "15672:1:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "15678:3:4",
                            "type": ""
                          }
                        ],
                        "src": "15638:125:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15814:228:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15845:168:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15866:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15869:77:4",
                                          "type": "",
                                          "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15859:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15859:88:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15859:88:4"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15967:1:4",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15970:4:4",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15960:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15960:15:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15960:15:4"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15995:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15998:4:4",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "15988:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15988:15:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15988:15:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "15834:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "15827:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15827:9:4"
                              },
                              "nodeType": "YulIf",
                              "src": "15824:189:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16022:14:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "16031:1:4"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "16034:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "16027:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16027:9:4"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "16022:1:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "15799:1:4",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "15802:1:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "15808:1:4",
                            "type": ""
                          }
                        ],
                        "src": "15768:274:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16221:182:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16238:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16249:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16231:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16231:21:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16231:21:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16272:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16283:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16268:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16268:18:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16288:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16261:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16261:30:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16261:30:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16311:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16322:2:4",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16307:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16307:18:4"
                                  },
                                  {
                                    "hexValue": "4e6f207065726d697373696f6e20746f2063616e63656c2070726f706f73616c",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16327:34:4",
                                    "type": "",
                                    "value": "No permission to cancel proposal"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16300:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16300:62:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16300:62:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16371:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16383:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16394:2:4",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16379:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16379:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16371:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c63b1fb7949d1c007ce3b16ca28881aa200a07170d86eb2bba9d2376166ca211__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16198:9:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16212:4:4",
                            "type": ""
                          }
                        ],
                        "src": "16047:356:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16582:173:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16599:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16610:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16592:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16592:21:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16592:21:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16633:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16644:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16629:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16629:18:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16649:2:4",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16622:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16622:30:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16622:30:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16672:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16683:2:4",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16668:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16668:18:4"
                                  },
                                  {
                                    "hexValue": "4d656d62657220616c726561647920617070726f766564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16688:25:4",
                                    "type": "",
                                    "value": "Member already approved"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16661:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16661:53:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16661:53:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16723:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16735:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16746:2:4",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16731:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16731:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16723:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_71e465b213fae575eff98ef3e42ebb338fdac662569c58a19b69696474e769fc__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16559:9:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16573:4:4",
                            "type": ""
                          }
                        ],
                        "src": "16408:347:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16879:110:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16896:3:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16909:2:4",
                                            "type": "",
                                            "value": "96"
                                          },
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "16913:6:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "16905:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16905:15:4"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16926:26:4",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "16922:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16922:31:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "16901:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16901:53:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16889:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16889:66:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16889:66:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16964:19:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16975:3:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16980:2:4",
                                    "type": "",
                                    "value": "20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16971:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16971:12:4"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "16964:3:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "16855:3:4",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "16860:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "16871:3:4",
                            "type": ""
                          }
                        ],
                        "src": "16760:229:4"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes_memory_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_string(add(_1, 0x20), calldataload(_1), dataEnd)\n        value1 := abi_decode_address(add(headStart, 0x20))\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_uint48(value, pos)\n    {\n        mstore(pos, and(value, 0xffffffffffff))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Proposal_$246_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Proposal_$246_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let tail_2 := add(add(headStart, shl(5, length)), _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            let _3 := mload(srcPtr)\n            let _4 := 0x0120\n            abi_encode_bool(mload(_3), tail_2)\n            let memberValue0 := mload(add(_3, _1))\n            abi_encode_bool(memberValue0, add(tail_2, _1))\n            let memberValue0_1 := mload(add(_3, _2))\n            abi_encode_address(memberValue0_1, add(tail_2, _2))\n            let _5 := 0x60\n            let memberValue0_2 := mload(add(_3, _5))\n            mstore(add(tail_2, _5), _4)\n            let tail_3 := abi_encode_string(memberValue0_2, add(tail_2, _4))\n            let _6 := 0x80\n            let memberValue0_3 := mload(add(_3, _6))\n            abi_encode_address(memberValue0_3, add(tail_2, _6))\n            let _7 := 0xa0\n            let memberValue0_4 := mload(add(_3, _7))\n            abi_encode_uint48(memberValue0_4, add(tail_2, _7))\n            let _8 := 0xc0\n            let memberValue0_5 := mload(add(_3, _8))\n            abi_encode_uint48(memberValue0_5, add(tail_2, _8))\n            let _9 := 0xe0\n            mstore(add(tail_2, _9), mload(add(_3, _9)))\n            let _10 := 0x0100\n            mstore(add(tail_2, _10), mload(add(_3, _10)))\n            tail_2 := tail_3\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_dfc1e7d81d5851bb6264d6497aa3b1c2293167cdc5b1d514e67ce45c171905c1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Already a member\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_5c9009bc8bee59dbb920e11238c507982df9038214a09ed1af52892e51b5ea54__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Voting still going on\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1ed80dbd6dca446e698a4eabb0a8cbb85820e26a7b77774a890ffefff2b63d68__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Proposal already executed or can\")\n        mstore(add(headStart, 96), \"celed\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_d27203fcf6fbbfad1033321a968e800bedd57a10fcf4c94010e362c1f65d2021__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Proposal doesn't have majority v\")\n        mstore(add(headStart, 96), \"ote\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_bytes_storage__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        let _1 := 1\n        switch and(slotValue, _1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value0)\n            let _2 := 0x20\n            let dataPos := keccak256(0, _2)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        end := ret\n    }\n    function abi_encode_tuple_t_stringliteral_e5d9f649299ee85783b2616e2f07c28a0fc3d2f87d807d27b247fea0d242005a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Proposal execution failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8cfc078b32cffb255e9e243136e6cde5d6a128600e2bb8733edd3b242e99fb55__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Not a member\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bec830c85e64815bcd0949fd1f66579df95e396bf9d122729ccf8df63010f70a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Member not approved\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1ff520094f2722719f574911d75c1de55db2c63e3b4c3b886282397905c35e04__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Voting is not allowed at this ti\")\n        mstore(add(headStart, 96), \"me\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ebabe3ccf5c2f49d1b735f59bd3c0192bcfbdb2c10693c6c90eb8e5d3c1aa34__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Already voted for this proposal\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint48(x, y) -> sum\n    {\n        let _1 := 0xffffffffffff\n        sum := add(and(x, _1), and(y, _1))\n        if gt(sum, _1) { panic_error_0x11() }\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_c63b1fb7949d1c007ce3b16ca28881aa200a07170d86eb2bba9d2376166ca211__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"No permission to cancel proposal\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_71e465b213fae575eff98ef3e42ebb338fdac662569c58a19b69696474e769fc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Member already approved\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        end := add(pos, 20)\n    }\n}",
                  "id": 4,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063b58131b011610066578063b58131b0146101d8578063cfbc02d4146101e0578063e0a8f6f514610203578063f2fde38b1461021657600080fd5b8063715018a61461018d578063756a4ba3146101955780638da5cb5b146101a8578063afe666f6146101c357600080fd5b806318a41aec116100d357806318a41aec1461015657806327f5884b146101695780633932abb1146101715780637034731b1461017857600080fd5b806302a251a3146101055780630aa5adfc1461011b5780630d61b5191461013057806315373e3d14610143575b600080fd5b603c5b6040519081526020015b60405180910390f35b61012e61012936600461180b565b610229565b005b61012e61013e36600461186d565b610340565b61012e610151366004611886565b6106eb565b61012e6101643660046118bb565b61094a565b610108610c28565b6005610108565b610180610cdc565b6040516101129190611923565b61012e610d6a565b61012e6101a3366004611936565b610d7e565b6000546040516001600160a01b039091168152602001610112565b6101cb611011565b6040516101129190611998565b6101086112ba565b6101f36101ee3660046118bb565b6112dc565b6040519015158152602001610112565b61012e61021136600461186d565b6113c5565b61012e6102243660046118bb565b6115a0565b6001600160a01b038216600090815260046020526040812060010180548492919061025390611a8e565b905011156102a85760405162461bcd60e51b815260206004820152601060248201527f416c72656164792061206d656d6265720000000000000000000000000000000060448201526064015b60405180910390fd5b604080518082018252600080825260208083018681526001600160a01b038816835260049091529290208151815460ff191690151517815591519091829160018201906102f59082611b11565b50905050836001600160a01b03167f3b09349069a59bcde8c2609afc86c80b77c81085ac8cd8662981621f7ea3574b846040516103329190611923565b60405180910390a250505050565b60008181526005602052604090206002810154600160a01b900465ffffffffffff164211801561038257506002810154600160d01b900465ffffffffffff1642105b156103cf5760405162461bcd60e51b815260206004820152601560248201527f566f74696e67207374696c6c20676f696e67206f6e0000000000000000000000604482015260640161029f565b805460ff161580156103e857508054610100900460ff16155b6104425760405162461bcd60e51b815260206004820152602560248201527f50726f706f73616c20616c7265616479206578656375746564206f722063616e60448201526418d95b195960da1b606482015260840161029f565b600161044c6112ba565b6104569190611be7565b8160030154116104ce5760405162461bcd60e51b815260206004820152602360248201527f50726f706f73616c20646f65736e27742068617665206d616a6f72697479207660448201527f6f74650000000000000000000000000000000000000000000000000000000000606482015260840161029f565b60008281526007602052604081205460ff1660018111156104f1576104f1611c00565b036105cf5761059561059082600101805461050b90611a8e565b80601f016020809104026020016040519081016040528092919081815260200182805461053790611a8e565b80156105845780601f1061055957610100808354040283529160200191610584565b820191906000526020600020905b81548152906001019060200180831161056757829003601f168201915b50505050506014015190565b6115f7565b805460ff1916600117815560405182907f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f90600090a25050565b600160008381526007602052604090205460ff1660018111156105f4576105f4611c00565b036106e75760028101546040516000916001600160a01b03169061061c906001850190611c16565b6000604051808303816000865af19150503d8060008114610659576040519150601f19603f3d011682016040523d82523d6000602084013e61065e565b606091505b50509050806106af5760405162461bcd60e51b815260206004820152601960248201527f50726f706f73616c20657865637574696f6e206661696c656400000000000000604482015260640161029f565b815460ff1916600117825560405183907f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f90600090a2505b5050565b336000818152600460205260408120600101805461070890611a8e565b9050116107465760405162461bcd60e51b815260206004820152600c60248201526b2737ba10309036b2b6b132b960a11b604482015260640161029f565b6001600160a01b03811660009081526004602052604090205460ff1615156001146107a95760405162461bcd60e51b815260206004820152601360248201527213595b58995c881b9bdd08185c1c1c9bdd9959606a1b604482015260640161029f565b600083815260066020908152604080832060059092529091206002810154600160a01b900465ffffffffffff16421180156107f657506002810154600160d01b900465ffffffffffff1642105b6108685760405162461bcd60e51b815260206004820152602260248201527f566f74696e67206973206e6f7420616c6c6f776564206174207468697320746960448201527f6d65000000000000000000000000000000000000000000000000000000000000606482015260840161029f565b3360009081526020839052604090205460ff1615801561089a575033600090815260018301602052604090205460ff16155b6108e65760405162461bcd60e51b815260206004820152601f60248201527f416c726561647920766f74656420666f7220746869732070726f706f73616c00604482015260640161029f565b8315610919576003810180546001908101909155336000908152602084905260409020805460ff19169091179055610943565b600481018054600190810190915533600090815283820160205260409020805460ff191690911790555b5050505050565b336000818152600460205260408120600101805461096790611a8e565b9050116109a55760405162461bcd60e51b815260206004820152600c60248201526b2737ba10309036b2b6b132b960a11b604482015260640161029f565b6001600160a01b03811660009081526004602052604090205460ff161515600114610a085760405162461bcd60e51b815260206004820152601360248201527213595b58995c881b9bdd08185c1c1c9bdd9959606a1b604482015260640161029f565b426000610a16600583611c8c565b90506000610a25603c83611c8c565b60408051606088901b6bffffffffffffffffffffffff191660208083019190915282518083036014018152610154830184526000603484018181526054850182815233607487019081526094870185815261dead60b489015265ffffffffffff8c811660d48a01528a1660f48901526101148801859052610134909701849052600254845260059095529590912081518154965194516001600160a01b0316620100000275ffffffffffffffffffffffffffffffffffffffff0000199515156101000261ff00199215159290921661ffff19909816979097171793909316949094178255915193945090926001820190610b1f9082611b11565b5060808201516002828101805460a086015160c08701516001600160a01b039095167fffffffffffff000000000000000000000000000000000000000000000000000090921691909117600160a01b65ffffffffffff928316021779ffffffffffffffffffffffffffffffffffffffffffffffffffff16600160d01b91909416029290921790915560e0830151600383015561010090920151600490910155546000908152600760205260408120805460ff1916600183021790555060006002547f3cd05952bf89447515ba76534b26df87104c2ba104027f22a518d767243973c183604051610c0f9190611923565b60405180910390a3505060028054600101905550505050565b60025460009042825b82811015610cd65760008181526005602052604090205460ff16158015610c6c5750600081815260056020526040902054610100900460ff16155b8015610c975750600081815260056020526040902060020154600160a01b900465ffffffffffff1682115b8015610cc25750600081815260056020526040902060020154600160d01b900465ffffffffffff1682105b15610cce576001909301925b600101610c31565b50505090565b60038054610ce990611a8e565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1590611a8e565b8015610d625780601f10610d3757610100808354040283529160200191610d62565b820191906000526020600020905b815481529060010190602001808311610d4557829003601f168201915b505050505081565b610d726116b5565b610d7c60006116fb565b565b3360008181526004602052604081206001018054610d9b90611a8e565b905011610dd95760405162461bcd60e51b815260206004820152600c60248201526b2737ba10309036b2b6b132b960a11b604482015260640161029f565b6001600160a01b03811660009081526004602052604090205460ff161515600114610e3c5760405162461bcd60e51b815260206004820152601360248201527213595b58995c881b9bdd08185c1c1c9bdd9959606a1b604482015260640161029f565b426000610e4a600583611c8c565b90506000610e59603c83611c8c565b60408051610120810182526000808252602080830182815233848601908152606085018d81526001600160a01b038d8116608088015265ffffffffffff8b811660a0890152891660c088015260e087018690526101008088018790526002548752600590955296909420855181549351925161ffff1990941690151561ff001916179115159093021775ffffffffffffffffffffffffffffffffffffffff0000191662010000919095160293909317835551929350916001820190610f1e9082611b11565b5060808201516002828101805460a086015160c08701516001600160a01b039095167fffffffffffff000000000000000000000000000000000000000000000000000090921691909117600160a01b65ffffffffffff928316021779ffffffffffffffffffffffffffffffffffffffffffffffffffff16600160d01b91909416029290921790915560e083015160038301556101009092015160049091015554600090815260076020526040902080546001919060ff19168280021790555060016002547f3cd05952bf89447515ba76534b26df87104c2ba104027f22a518d767243973c188604051610c0f9190611923565b6060600061101d610c28565b905060008167ffffffffffffffff81111561103a5761103a61177f565b6040519080825280602002602001820160405280156110b057816020015b6040805161012081018252600080825260208083018290529282018190526060808301526080820181905260a0820181905260c0820181905260e0820181905261010082015282526000199092019101816110585790505b509050426000805b6002548110156112b05760008181526005602052604090205460ff161580156110f55750600081815260056020526040902054610100900460ff16155b80156111205750600081815260056020526040902060020154600160a01b900465ffffffffffff1683115b801561114b5750600081815260056020526040902060020154600160d01b900465ffffffffffff1683105b156112a857600081815260056020908152604091829020825161012081018452815460ff80821615158352610100820416151593820193909352620100009092046001600160a01b0316928201929092526001820180549192916060840191906111b490611a8e565b80601f01602080910402602001604051908101604052809291908181526020018280546111e090611a8e565b801561122d5780601f106112025761010080835404028352916020019161122d565b820191906000526020600020905b81548152906001019060200180831161121057829003601f168201915b505050918352505060028201546001600160a01b038116602083015265ffffffffffff600160a01b820481166040840152600160d01b9091041660608201526003820154608082015260049091015460a090910152845185908490811061129657611296611cb2565b60209081029190910101526001909101905b6001016110b8565b5091949350505050565b6000600260015460016112cd9190611cc8565b6112d79190611cdb565b905090565b33600081815260046020526040812060010180549192918391906112ff90611a8e565b90501161133d5760405162461bcd60e51b815260206004820152600c60248201526b2737ba10309036b2b6b132b960a11b604482015260640161029f565b6001600160a01b03811660009081526004602052604090205460ff1615156001146113a05760405162461bcd60e51b815260206004820152601360248201527213595b58995c881b9bdd08185c1c1c9bdd9959606a1b604482015260640161029f565b6001600160a01b03831660009081526004602052604090205460ff1691505b50919050565b33600081815260046020526040812060010180546113e290611a8e565b9050116114205760405162461bcd60e51b815260206004820152600c60248201526b2737ba10309036b2b6b132b960a11b604482015260640161029f565b6001600160a01b03811660009081526004602052604090205460ff1615156001146114835760405162461bcd60e51b815260206004820152601360248201527213595b58995c881b9bdd08185c1c1c9bdd9959606a1b604482015260640161029f565b600082815260056020526040902080546201000090046001600160a01b031633146114f05760405162461bcd60e51b815260206004820181905260248201527f4e6f207065726d697373696f6e20746f2063616e63656c2070726f706f73616c604482015260640161029f565b805460ff1615801561150957508054610100900460ff16155b6115635760405162461bcd60e51b815260206004820152602560248201527f50726f706f73616c20616c7265616479206578656375746564206f722063616e60448201526418d95b195960da1b606482015260840161029f565b805461ff00191661010017815560405183907f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c90600090a2505050565b6115a86116b5565b6001600160a01b0381166115eb576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526000600482015260240161029f565b6115f4816116fb565b50565b6001600160a01b03811660009081526004602052604090205460ff16156116605760405162461bcd60e51b815260206004820152601760248201527f4d656d62657220616c726561647920617070726f766564000000000000000000604482015260640161029f565b6001600160a01b038116600081815260046020526040808220805460ff19166001908117909155805481019055517f3da74045128fff0396b39203f81bcedcbcf28586f0f97fb0f41ceb5521566a159190a250565b6000546001600160a01b03163314610d7c576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161029f565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461177a57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156117b0576117b061177f565b604051601f8501601f19908116603f011681019082821181831017156117d8576117d861177f565b816040528093508581528686860111156117f157600080fd5b858560208301376000602087830101525050509392505050565b6000806040838503121561181e57600080fd5b61182783611763565b9150602083013567ffffffffffffffff81111561184357600080fd5b8301601f8101851361185457600080fd5b61186385823560208401611795565b9150509250929050565b60006020828403121561187f57600080fd5b5035919050565b6000806040838503121561189957600080fd5b82359150602083013580151581146118b057600080fd5b809150509250929050565b6000602082840312156118cd57600080fd5b6118d682611763565b9392505050565b6000815180845260005b81811015611903576020818501810151868301820152016118e7565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006118d660208301846118dd565b6000806040838503121561194957600080fd5b823567ffffffffffffffff81111561196057600080fd5b8301601f8101851361197157600080fd5b61198085823560208401611795565b92505061198f60208401611763565b90509250929050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015611a8057603f19898403018552815180511515845287810151151588850152868101516001600160a01b0316878501526060808201516101208287018190529190611a10838801826118dd565b92505050608080830151611a2e828801826001600160a01b03169052565b505060a08281015165ffffffffffff811687830152505060c08281015165ffffffffffff811687830152505060e0828101519086015261010091820151919094015293860193908601906001016119bf565b509098975050505050505050565b600181811c90821680611aa257607f821691505b6020821081036113bf57634e487b7160e01b600052602260045260246000fd5b601f821115611b0c57600081815260208120601f850160051c81016020861015611ae95750805b601f850160051c820191505b81811015611b0857828155600101611af5565b5050505b505050565b815167ffffffffffffffff811115611b2b57611b2b61177f565b611b3f81611b398454611a8e565b84611ac2565b602080601f831160018114611b745760008415611b5c5750858301515b600019600386901b1c1916600185901b178555611b08565b600085815260208120601f198616915b82811015611ba357888601518255948401946001909101908401611b84565b5085821015611bc15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b81810381811115611bfa57611bfa611bd1565b92915050565b634e487b7160e01b600052602160045260246000fd5b6000808354611c2481611a8e565b60018281168015611c3c5760018114611c5157611c80565b60ff1984168752821515830287019450611c80565b8760005260208060002060005b85811015611c775781548a820152908401908201611c5e565b50505082870194505b50929695505050505050565b65ffffffffffff818116838216019080821115611cab57611cab611bd1565b5092915050565b634e487b7160e01b600052603260045260246000fd5b80820180821115611bfa57611bfa611bd1565b600082611cf857634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212209004592562889f8f0fd95aa18cf065d58e6e32842c3f848033426240aa22194964736f6c63430008140033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB58131B0 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB58131B0 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xCFBC02D4 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xE0A8F6F5 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x756A4BA3 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xAFE666F6 EQ PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18A41AEC GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x18A41AEC EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x27F5884B EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x3932ABB1 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x7034731B EQ PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2A251A3 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xAA5ADFC EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xD61B519 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x15373E3D EQ PUSH2 0x143 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3C JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x229 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12E PUSH2 0x13E CALLDATASIZE PUSH1 0x4 PUSH2 0x186D JUMP JUMPDEST PUSH2 0x340 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x6EB JUMP JUMPDEST PUSH2 0x12E PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST PUSH2 0x108 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x108 JUMP JUMPDEST PUSH2 0x180 PUSH2 0xCDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x1923 JUMP JUMPDEST PUSH2 0x12E PUSH2 0xD6A JUMP JUMPDEST PUSH2 0x12E PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1936 JUMP JUMPDEST PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x112 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x1998 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x112 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x186D JUMP JUMPDEST PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x15A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP5 SWAP3 SWAP2 SWAP1 PUSH2 0x253 SWAP1 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP GT ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C72656164792061206D656D62657200000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP2 SSTORE SWAP2 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x2F5 SWAP1 DUP3 PUSH2 0x1B11 JUMP JUMPDEST POP SWAP1 POP POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3B09349069A59BCDE8C2609AFC86C80B77C81085AC8CD8662981621F7EA3574B DUP5 PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x1923 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND TIMESTAMP GT DUP1 ISZERO PUSH2 0x382 JUMPI POP PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x3CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74696E67207374696C6C20676F696E67206F6E0000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x3E8 JUMPI POP DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x442 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C20616C7265616479206578656375746564206F722063616E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x18D95B1959 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x1 PUSH2 0x44C PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST DUP2 PUSH1 0x3 ADD SLOAD GT PUSH2 0x4CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C20646F65736E27742068617665206D616A6F726974792076 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74650000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x4F1 JUMPI PUSH2 0x4F1 PUSH2 0x1C00 JUMP JUMPDEST SUB PUSH2 0x5CF JUMPI PUSH2 0x595 PUSH2 0x590 DUP3 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x50B SWAP1 PUSH2 0x1A8E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x537 SWAP1 PUSH2 0x1A8E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x584 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x559 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x584 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x567 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH1 0x14 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x15F7 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0x712AE1383F79AC853F8D882153778E0260EF8F03B504E2866E0593E04D2B291F SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5F4 JUMPI PUSH2 0x5F4 PUSH2 0x1C00 JUMP JUMPDEST SUB PUSH2 0x6E7 JUMPI PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x61C SWAP1 PUSH1 0x1 DUP6 ADD SWAP1 PUSH2 0x1C16 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x65E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x6AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C20657865637574696F6E206661696C656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST DUP2 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP3 SSTORE PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH32 0x712AE1383F79AC853F8D882153778E0260EF8F03B504E2866E0593E04D2B291F SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x708 SWAP1 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP GT PUSH2 0x746 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10309036B2B6B132B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x7A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13595B58995C881B9BDD08185C1C1C9BDD9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND TIMESTAMP GT DUP1 ISZERO PUSH2 0x7F6 JUMPI POP PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND TIMESTAMP LT JUMPDEST PUSH2 0x868 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74696E67206973206E6F7420616C6C6F7765642061742074686973207469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D65000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x89A JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x8E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920766F74656420666F7220746869732070726F706F73616C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST DUP4 ISZERO PUSH2 0x919 JUMPI PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x943 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x967 SWAP1 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP GT PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10309036B2B6B132B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xA08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13595B58995C881B9BDD08185C1C1C9BDD9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST TIMESTAMP PUSH1 0x0 PUSH2 0xA16 PUSH1 0x5 DUP4 PUSH2 0x1C8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA25 PUSH1 0x3C DUP4 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP9 SWAP1 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB PUSH1 0x14 ADD DUP2 MSTORE PUSH2 0x154 DUP4 ADD DUP5 MSTORE PUSH1 0x0 PUSH1 0x34 DUP5 ADD DUP2 DUP2 MSTORE PUSH1 0x54 DUP6 ADD DUP3 DUP2 MSTORE CALLER PUSH1 0x74 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x94 DUP8 ADD DUP6 DUP2 MSTORE PUSH2 0xDEAD PUSH1 0xB4 DUP10 ADD MSTORE PUSH6 0xFFFFFFFFFFFF DUP13 DUP2 AND PUSH1 0xD4 DUP11 ADD MSTORE DUP11 AND PUSH1 0xF4 DUP10 ADD MSTORE PUSH2 0x114 DUP9 ADD DUP6 SWAP1 MSTORE PUSH2 0x134 SWAP1 SWAP8 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 SLOAD DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP6 MSTORE SWAP6 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD DUP2 SLOAD SWAP7 MLOAD SWAP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x10000 MUL PUSH22 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 NOT SWAP6 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 AND PUSH2 0xFFFF NOT SWAP1 SWAP9 AND SWAP8 SWAP1 SWAP8 OR OR SWAP4 SWAP1 SWAP4 AND SWAP5 SWAP1 SWAP5 OR DUP3 SSTORE SWAP2 MLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0xB1F SWAP1 DUP3 PUSH2 0x1B11 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x2 DUP3 DUP2 ADD DUP1 SLOAD PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH32 0xFFFFFFFFFFFF0000000000000000000000000000000000000000000000000000 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xA0 SHL PUSH6 0xFFFFFFFFFFFF SWAP3 DUP4 AND MUL OR PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xD0 SHL SWAP2 SWAP1 SWAP5 AND MUL SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0x100 SWAP1 SWAP3 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD PUSH32 0x3CD05952BF89447515BA76534B26DF87104C2BA104027F22A518D767243973C1 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC0F SWAP2 SWAP1 PUSH2 0x1923 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 TIMESTAMP DUP3 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xC6C JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xC97 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND DUP3 GT JUMPDEST DUP1 ISZERO PUSH2 0xCC2 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND DUP3 LT JUMPDEST ISZERO PUSH2 0xCCE JUMPI PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 JUMPDEST PUSH1 0x1 ADD PUSH2 0xC31 JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0xCE9 SWAP1 PUSH2 0x1A8E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD15 SWAP1 PUSH2 0x1A8E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD62 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD37 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD62 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD45 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0xD72 PUSH2 0x16B5 JUMP JUMPDEST PUSH2 0xD7C PUSH1 0x0 PUSH2 0x16FB JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xD9B SWAP1 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP GT PUSH2 0xDD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10309036B2B6B132B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xE3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13595B58995C881B9BDD08185C1C1C9BDD9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST TIMESTAMP PUSH1 0x0 PUSH2 0xE4A PUSH1 0x5 DUP4 PUSH2 0x1C8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE59 PUSH1 0x3C DUP4 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE CALLER DUP5 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP6 ADD DUP14 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND PUSH1 0x80 DUP9 ADD MSTORE PUSH6 0xFFFFFFFFFFFF DUP12 DUP2 AND PUSH1 0xA0 DUP10 ADD MSTORE DUP10 AND PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD DUP7 SWAP1 MSTORE PUSH2 0x100 DUP1 DUP9 ADD DUP8 SWAP1 MSTORE PUSH1 0x2 SLOAD DUP8 MSTORE PUSH1 0x5 SWAP1 SWAP6 MSTORE SWAP7 SWAP1 SWAP5 KECCAK256 DUP6 MLOAD DUP2 SLOAD SWAP4 MLOAD SWAP3 MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP5 AND SWAP1 ISZERO ISZERO PUSH2 0xFF00 NOT AND OR SWAP2 ISZERO ISZERO SWAP1 SWAP4 MUL OR PUSH22 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 NOT AND PUSH3 0x10000 SWAP2 SWAP1 SWAP6 AND MUL SWAP4 SWAP1 SWAP4 OR DUP4 SSTORE MLOAD SWAP3 SWAP4 POP SWAP2 PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0xF1E SWAP1 DUP3 PUSH2 0x1B11 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x2 DUP3 DUP2 ADD DUP1 SLOAD PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH32 0xFFFFFFFFFFFF0000000000000000000000000000000000000000000000000000 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xA0 SHL PUSH6 0xFFFFFFFFFFFF SWAP3 DUP4 AND MUL OR PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xD0 SHL SWAP2 SWAP1 SWAP5 AND MUL SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0x100 SWAP1 SWAP3 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP3 DUP1 MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD PUSH32 0x3CD05952BF89447515BA76534B26DF87104C2BA104027F22A518D767243973C1 DUP9 PUSH1 0x40 MLOAD PUSH2 0xC0F SWAP2 SWAP1 PUSH2 0x1923 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x101D PUSH2 0xC28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x103A JUMPI PUSH2 0x103A PUSH2 0x177F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10B0 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD MSTORE DUP3 MSTORE PUSH1 0x0 NOT SWAP1 SWAP3 ADD SWAP2 ADD DUP2 PUSH2 0x1058 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP TIMESTAMP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x12B0 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x10F5 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1120 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND DUP4 GT JUMPDEST DUP1 ISZERO PUSH2 0x114B JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND DUP4 LT JUMPDEST ISZERO PUSH2 0x12A8 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH2 0x120 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO DUP4 MSTORE PUSH2 0x100 DUP3 DIV AND ISZERO ISZERO SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH3 0x10000 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 PUSH2 0x11B4 SWAP1 PUSH2 0x1A8E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11E0 SWAP1 PUSH2 0x1A8E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x122D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1202 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x122D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1210 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH6 0xFFFFFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE DUP5 MLOAD DUP6 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1296 JUMPI PUSH2 0x1296 PUSH2 0x1CB2 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 JUMPDEST PUSH1 0x1 ADD PUSH2 0x10B8 JUMP JUMPDEST POP SWAP2 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH2 0x12CD SWAP2 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH2 0x12D7 SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x12FF SWAP1 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP GT PUSH2 0x133D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10309036B2B6B132B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x13A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13595B58995C881B9BDD08185C1C1C9BDD9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x13E2 SWAP1 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP GT PUSH2 0x1420 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10309036B2B6B132B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1483 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13595B58995C881B9BDD08185C1C1C9BDD9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207065726D697373696F6E20746F2063616E63656C2070726F706F73616C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1509 JUMPI POP DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C20616C7265616479206578656375746564206F722063616E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x18D95B1959 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29F JUMP JUMPDEST DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR DUP2 SSTORE PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH32 0x789CF55BE980739DAD1D0699B93B58E806B51C9D96619BFA8FE0A28ABAA7B30C SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x15A8 PUSH2 0x16B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x15EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x29F JUMP JUMPDEST PUSH2 0x15F4 DUP2 PUSH2 0x16FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1660 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D656D62657220616C726561647920617070726F766564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP1 SLOAD DUP2 ADD SWAP1 SSTORE MLOAD PUSH32 0x3DA74045128FFF0396B39203F81BCEDCBCF28586F0F97FB0F41CEB5521566A15 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x177A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x17B0 JUMPI PUSH2 0x17B0 PUSH2 0x177F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x17D8 JUMPI PUSH2 0x17D8 PUSH2 0x177F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x17F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x181E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1827 DUP4 PUSH2 0x1763 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1843 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1854 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1863 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1795 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x187F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1899 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18D6 DUP3 PUSH2 0x1763 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1903 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x18E7 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x18D6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1949 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1971 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1980 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1795 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x198F PUSH1 0x20 DUP5 ADD PUSH2 0x1763 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A80 JUMPI PUSH1 0x3F NOT DUP10 DUP5 SUB ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD ISZERO ISZERO DUP5 MSTORE DUP8 DUP2 ADD MLOAD ISZERO ISZERO DUP9 DUP6 ADD MSTORE DUP7 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP6 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD PUSH2 0x120 DUP3 DUP8 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP1 PUSH2 0x1A10 DUP4 DUP9 ADD DUP3 PUSH2 0x18DD JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x80 DUP1 DUP4 ADD MLOAD PUSH2 0x1A2E DUP3 DUP9 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP POP PUSH1 0xA0 DUP3 DUP2 ADD MLOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP8 DUP4 ADD MSTORE POP POP PUSH1 0xC0 DUP3 DUP2 ADD MLOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP8 DUP4 ADD MSTORE POP POP PUSH1 0xE0 DUP3 DUP2 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 ADD MLOAD SWAP2 SWAP1 SWAP5 ADD MSTORE SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x19BF JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1AA2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x13BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1B0C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1AE9 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B08 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1AF5 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B2B JUMPI PUSH2 0x1B2B PUSH2 0x177F JUMP JUMPDEST PUSH2 0x1B3F DUP2 PUSH2 0x1B39 DUP5 SLOAD PUSH2 0x1A8E JUMP JUMPDEST DUP5 PUSH2 0x1AC2 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1B74 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1B5C JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1B08 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1BA3 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1B84 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1BC1 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1BFA JUMPI PUSH2 0x1BFA PUSH2 0x1BD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD PUSH2 0x1C24 DUP2 PUSH2 0x1A8E JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x1C3C JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1C51 JUMPI PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x1C80 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1C77 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x1C5E JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1CAB JUMPI PUSH2 0x1CAB PUSH2 0x1BD1 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1BFA JUMPI PUSH2 0x1BFA PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1CF8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 DIV MSIZE 0x25 PUSH3 0x889F8F 0xF 0xD9 GAS LOG1 DUP13 CREATE PUSH6 0xD58E6E32842C EXTCODEHASH DUP5 DUP1 CALLER TIMESTAMP PUSH3 0x40AA22 NOT 0x49 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
              "sourceMap": "274:15327:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3741:92;3812:2;3741:92;;;160:25:4;;;148:2;133:18;3741:92:2;;;;;;;;5235:333;;;;;;:::i;:::-;;:::i;:::-;;9629:1117;;;;;;:::i;:::-;;:::i;8302:875::-;;;;;;:::i;:::-;;:::i;5795:905::-;;;;;;:::i;:::-;;:::i;11049:649::-;;;:::i;3386:91::-;3456:1;3386:91;;749:20;;;:::i;:::-;;;;;;;:::i;2293:101:0:-;;;:::i;7045:866:2:-;;;;;;:::i;:::-;;:::i;1638:85:0:-;1684:7;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:0;;;3939:74:4;;3927:2;3912:18;1638:85:0;3793:226:4;12020:850:2;;;:::i;:::-;;;;;;;:::i;4109:119::-;;;:::i;15440:159::-;;;;;;:::i;:::-;;:::i;:::-;;;6350:14:4;;6343:22;6325:41;;6313:2;6298:18;15440:159:2;6185:187:4;13177:471:2;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;5235:333:2:-;-1:-1:-1;;;;;4471:17:2;;4509:1;4471:17;;;:7;:17;;;;;:27;;4465:41;;5356:10;;4509:1;4471:27;4465:41;;;:::i;:::-;;;:45;4463:48;4442:111;;;;-1:-1:-1;;;4442:111:2;;7021:2:4;4442:111:2;;;7003:21:4;7060:2;7040:18;;;7033:30;7099:18;7079;;;7072:46;7135:18;;4442:111:2;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;5408:29:2;;;-1:-1:-1;;;;;5478:19:2;::::1;::::0;;:7:::1;:19:::0;;;;;;:28;;;;-1:-1:-1;;5478:28:2::1;::::0;::::1;;;::::0;;;;-1:-1:-1;;;;;5478:28:2;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;;;;;5538:10;-1:-1:-1::0;;;;;5521:40:2::1;;5550:10;5521:40;;;;;;:::i;:::-;;;;;;;;5368:200;5235:333:::0;;;:::o;9629:1117::-;9691:25;9719:21;;;:9;:21;;;;;9791:18;;;;-1:-1:-1;;;9791:18:2;;;;9773:15;:36;:95;;;;-1:-1:-1;9847:21:2;;;;-1:-1:-1;;;9847:21:2;;;;9829:15;:39;9773:95;9771:98;9750:166;;;;-1:-1:-1;;;9750:166:2;;9570:2:4;9750:166:2;;;9552:21:4;9609:2;9589:18;;;9582:30;9648:23;9628:18;;;9621:51;9689:18;;9750:166:2;9368:345:4;9750:166:2;9948:17;;;;9947:18;:40;;;;-1:-1:-1;9970:17:2;;;;;;;9969:18;9947:40;9926:124;;;;-1:-1:-1;;;9926:124:2;;9920:2:4;9926:124:2;;;9902:21:4;9959:2;9939:18;;;9932:30;9998:34;9978:18;;;9971:62;-1:-1:-1;;;10049:18:4;;;10042:35;10094:19;;9926:124:2;9718:401:4;9926:124:2;10123:1;10101:19;:17;:19::i;:::-;:23;;;;:::i;:::-;10081:8;:17;;;:43;10060:125;;;;-1:-1:-1;;;10060:125:2;;10648:2:4;10060:125:2;;;10630:21:4;10687:2;10667:18;;;10660:30;10726:34;10706:18;;;10699:62;10797:5;10777:18;;;10770:33;10820:19;;10060:125:2;10446:399:4;10060:125:2;10227:30;10199:24;;;:12;:24;;;;;;;;;:58;;;;;;;:::i;:::-;;10195:545;;10273:44;10287:29;10302:8;:13;;10287:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14654:2;14645:12;14639:19;;14506:168;10287:29;10273:13;:44::i;:::-;10331:24;;-1:-1:-1;;10331:24:2;10351:4;10331:24;;;10374:28;;10391:10;;10374:28;;10331:17;;10374:28;9681:1065;9629:1117;:::o;10195:545::-;10451:28;10423:24;;;;:12;:24;;;;;;;;;:56;;;;;;;:::i;:::-;;10419:321;;10514:15;;;;:35;;10496:12;;-1:-1:-1;;;;;10514:15:2;;:35;;:15;10535:13;;;10514:35;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10495:54;;;10568:7;10563:82;;10595:35;;-1:-1:-1;;;10595:35:2;;12086:2:4;10595:35:2;;;12068:21:4;12125:2;12105:18;;;12098:30;12164:27;12144:18;;;12137:55;12209:18;;10595:35:2;11884:349:4;10563:82:2;10658:24;;-1:-1:-1;;10658:24:2;10678:4;10658:24;;;10701:28;;10718:10;;10701:28;;10658:17;;10701:28;10481:259;10419:321;9681:1065;9629:1117;:::o;8302:875::-;8400:10;4848:1;4810:17;;;:7;:17;;;;;:27;;4804:41;;;;;:::i;:::-;;;:45;4782:106;;;;-1:-1:-1;;;4782:106:2;;12440:2:4;4782:106:2;;;12422:21:4;12479:2;12459:18;;;12452:30;-1:-1:-1;;;12498:18:4;;;12491:42;12550:18;;4782:106:2;12238:336:4;4782:106:2;-1:-1:-1;;;;;4906:17:2;;;;;;:7;:17;;;;;:24;;;:32;;:24;:32;4898:64;;;;-1:-1:-1;;;4898:64:2;;12781:2:4;4898:64:2;;;12763:21:4;12820:2;12800:18;;;12793:30;-1:-1:-1;;;12839:18:4;;;12832:49;12898:18;;4898:64:2;12579:343:4;4898:64:2;8422:27:::1;8452:26:::0;;;:13:::1;:26;::::0;;;;;;;8516:9:::1;:22:::0;;;;;;8588:18:::1;::::0;::::1;::::0;-1:-1:-1;;;8588:18:2;::::1;;;8570:15;:36;:95:::0;::::1;;;-1:-1:-1::0;8644:21:2::1;::::0;::::1;::::0;-1:-1:-1;;;8644:21:2;::::1;;;8626:15;:39;8570:95;8549:176;;;::::0;-1:-1:-1;;;8549:176:2;;13129:2:4;8549:176:2::1;::::0;::::1;13111:21:4::0;13168:2;13148:18;;;13141:30;13207:34;13187:18;;;13180:62;13278:4;13258:18;;;13251:32;13300:19;;8549:176:2::1;12927:398:4::0;8549:176:2::1;8773:10;8757:15;:27:::0;;;::::1;::::0;;;;;;;::::1;;8756:28;:59:::0;::::1;;;-1:-1:-1::0;8804:10:2::1;8789:26;::::0;;;:14:::1;::::0;::::1;:26;::::0;;;;;::::1;;8788:27;8756:59;8735:137;;;::::0;-1:-1:-1;;;8735:137:2;;13532:2:4;8735:137:2::1;::::0;::::1;13514:21:4::0;13571:2;13551:18;;;13544:30;13610:33;13590:18;;;13583:61;13661:18;;8735:137:2::1;13330:355:4::0;8735:137:2::1;8887:10;8883:288;;;8941:17;::::0;::::1;:19:::0;;::::1;::::0;;::::1;::::0;;;9004:10:::1;8941:17;8988:27:::0;;;::::1;::::0;;;;;;:34;;-1:-1:-1;;8988:34:2::1;::::0;;::::1;::::0;;8883:288:::1;;;9081:16;::::0;::::1;:18:::0;;::::1;::::0;;::::1;::::0;;;9142:10:::1;9081:16;9127:26:::0;;;:14;;::::1;:26;::::0;;;;:33;;-1:-1:-1;;9127:33:2::1;::::0;;::::1;::::0;;8883:288:::1;8412:765;;8302:875:::0;;;:::o;5795:905::-;5884:10;4848:1;4810:17;;;:7;:17;;;;;:27;;4804:41;;;;;:::i;:::-;;;:45;4782:106;;;;-1:-1:-1;;;4782:106:2;;12440:2:4;4782:106:2;;;12422:21:4;12479:2;12459:18;;;12452:30;-1:-1:-1;;;12498:18:4;;;12491:42;12550:18;;4782:106:2;12238:336:4;4782:106:2;-1:-1:-1;;;;;4906:17:2;;;;;;:7;:17;;;;;:24;;;:32;;:24;:32;4898:64;;;;-1:-1:-1;;;4898:64:2;;12781:2:4;4898:64:2;;;12763:21:4;12820:2;12800:18;;;12793:30;-1:-1:-1;;;12839:18:4;;;12832:49;12898:18;;4898:64:2;12579:343:4;4898:64:2;5934:15:::1;5906:18;5975:35;3456:1:::0;5934:15;5975:35:::1;:::i;:::-;5960:50:::0;-1:-1:-1;6020:10:2::1;6033:30;3812:2:::0;5960:50;6033:30:::1;:::i;:::-;15080:19:::0;;;15049:12;16905:15:4;;;-1:-1:-1;;16901:53:4;15080:19:2;;;;16889:66:4;;;;15080:19:2;;;;;;;;;6150:284;;;;;6073:18:::1;16971:12:4::0;;;6150:284:2;;;;;;;;;6183:10:::1;6150:284:::0;;;;;;;;;;;;6367:6:::1;6150:284:::0;;;;::::1;::::0;;::::1;::::0;;;;;::::1;::::0;;;;;;;;;;;;;;;;;6133:13:::1;::::0;6123:24;;:9:::1;:24:::0;;;;;;;:311;;;;;;;;-1:-1:-1;;;;;6123:311:2::1;::::0;::::1;-1:-1:-1::0;;6123:311:2;::::1;;6150:284:::0;6123:311:::1;-1:-1:-1::0;;6123:311:2;::::1;;::::0;;;;-1:-1:-1;;6123:311:2;;;;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;;6020:43;;-1:-1:-1;15080:19:2;;-1:-1:-1;6123:311:2;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;6123:311:2::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;6123:311:2;;::::1;::::0;;;;;;;;-1:-1:-1;;;6123:311:2::1;::::0;;::::1;;;::::0;::::1;-1:-1:-1::0;;;6123:311:2;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;6457:13;-1:-1:-1;6444:27:2;;;:12:::1;:27;::::0;;;;:60;;-1:-1:-1;;6444:60:2::1;-1:-1:-1::0;;6444:60:2::1;;::::0;;-1:-1:-1;6575:30:2::1;6548:13;;6519:115;6619:5;6519:115;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;6668:13:2::1;:15:::0;;::::1;;::::0;;-1:-1:-1;;;;5795:905:2:o;11049:649::-;11182:13;;11130:20;;11232:15;11130:20;11258:434;11278:5;11274:1;:9;11258:434;;;11323:12;;;;:9;:12;;;;;:21;;;11322:22;:64;;;;-1:-1:-1;11365:12:2;;;;:9;:12;;;;;:21;;;;;;11364:22;11322:64;:125;;;;-1:-1:-1;11425:12:2;;;;:9;:12;;;;;:22;;;-1:-1:-1;;;11425:22:2;;;;11406:41;;11322:125;:189;;;;-1:-1:-1;11486:12:2;;;;:9;:12;;;;;:25;;;-1:-1:-1;;;11486:25:2;;;;11467:44;;11322:189;11301:322;;;11576:14;;;;;11301:322;11664:3;;11258:434;;;;11156:542;;11049:649;:::o;749:20::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;7045:866:2:-;7149:10;4848:1;4810:17;;;:7;:17;;;;;:27;;4804:41;;;;;:::i;:::-;;;:45;4782:106;;;;-1:-1:-1;;;4782:106:2;;12440:2:4;4782:106:2;;;12422:21:4;12479:2;12459:18;;;12452:30;-1:-1:-1;;;12498:18:4;;;12491:42;12550:18;;4782:106:2;12238:336:4;4782:106:2;-1:-1:-1;;;;;4906:17:2;;;;;;:7;:17;;;;;:24;;;:32;;:24;:32;4898:64;;;;-1:-1:-1;;;4898:64:2;;12781:2:4;4898:64:2;;;12763:21:4;12820:2;12800:18;;;12793:30;-1:-1:-1;;;12839:18:4;;;12832:49;12898:18;;4898:64:2;12579:343:4;4898:64:2;7199:15:::1;7171:18;7240:35;3456:1:::0;7199:15;7240:35:::1;:::i;:::-;7225:50:::0;-1:-1:-1;7285:10:2::1;7298:30;3812:2:::0;7225:50;7298:30:::1;:::i;:::-;7365:280;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;7365:280:2;;;::::1;::::0;;::::1;::::0;;;7398:10:::1;7365:280:::0;;;;;;;;;;;;-1:-1:-1;;;;;7365:280:2;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;;;::::1;::::0;;;;;;;;;;;;;;;;;7348:13:::1;::::0;7338:24;;:9:::1;:24:::0;;;;;;;:307;;;;;;;;-1:-1:-1;;7338:307:2;;;;::::1;;-1:-1:-1::0;;7338:307:2;;;::::1;;::::0;;::::1;;-1:-1:-1::0;;7338:307:2::1;::::0;;;;::::1;;::::0;;;::::1;::::0;;;7365:280;;-1:-1:-1;7365:280:2;-1:-1:-1;7338:307:2;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;7338:307:2::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;7338:307:2;;::::1;::::0;;;;;;;;-1:-1:-1;;;7338:307:2::1;::::0;;::::1;;;::::0;::::1;-1:-1:-1::0;;;7338:307:2;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;7668:13;-1:-1:-1;7655:27:2;;;:12:::1;:27;::::0;;;;:58;;-1:-1:-1;;7655:27:2;-1:-1:-1;;7655:58:2::1;-1:-1:-1::0;;7655:58:2::1;;::::0;;-1:-1:-1;7784:28:2::1;7757:13;;7728:117;7826:9;7728:117;;;;;;:::i;12020:850::-:0;12072:17;12101:20;12124:26;:24;:26::i;:::-;12101:49;;12160:34;12212:12;12197:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12197:28:2;;-1:-1:-1;;12197:28:2;;;;;;;;;;;-1:-1:-1;12160:65:2;-1:-1:-1;12262:15:2;12235:24;;12339:491;12359:13;;12355:1;:17;12339:491;;;12412:12;;;;:9;:12;;;;;:21;;;12411:22;:64;;;;-1:-1:-1;12454:12:2;;;;:9;:12;;;;;:21;;;;;;12453:22;12411:64;:125;;;;-1:-1:-1;12514:12:2;;;;:9;:12;;;;;:22;;;-1:-1:-1;;;12514:22:2;;;;12495:41;;12411:125;:189;;;;-1:-1:-1;12575:12:2;;;;:9;:12;;;;;:25;;;-1:-1:-1;;;12575:25:2;;;;12556:44;;12411:189;12390:371;;;12659:12;;;;:9;:12;;;;;;;;;12633:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12633:38:2;;;;;;;;;;;;;;;12659:12;12633:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12633:38:2;;;-1:-1:-1;;12633:38:2;;;;-1:-1:-1;;;;;12633:38:2;;;;;;;-1:-1:-1;;;12633:38:2;;;;;;;;-1:-1:-1;;;12633:38:2;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:16;;12650:5;;12633:23;;;;;;:::i;:::-;;;;;;;;;;:38;12721:7;;;;;12390:371;12802:3;;12339:491;;;-1:-1:-1;12847:16:2;;12020:850;-1:-1:-1;;;;12020:850:2:o;4109:119::-;4159:17;4220:1;4201:11;;4215:1;4201:15;;;;:::i;:::-;4200:21;;;;:::i;:::-;4188:33;;4109:119;:::o;15440:159::-;15525:10;15546:4;4810:17;;;:7;:17;;;;;:27;;4804:41;;15546:4;;15525:10;15546:4;;4810:27;4804:41;;;:::i;:::-;;;:45;4782:106;;;;-1:-1:-1;;;4782:106:2;;12440:2:4;4782:106:2;;;12422:21:4;12479:2;12459:18;;;12452:30;-1:-1:-1;;;12498:18:4;;;12491:42;12550:18;;4782:106:2;12238:336:4;4782:106:2;-1:-1:-1;;;;;4906:17:2;;;;;;:7;:17;;;;;:24;;;:32;;:24;:32;4898:64;;;;-1:-1:-1;;;4898:64:2;;12781:2:4;4898:64:2;;;12763:21:4;12820:2;12800:18;;;12793:30;-1:-1:-1;;;12839:18:4;;;12832:49;12898:18;;4898:64:2;12579:343:4;4898:64:2;-1:-1:-1;;;;;15569:16:2;::::1;;::::0;;;:7:::1;:16;::::0;;;;:23;::::1;;::::0;-1:-1:-1;4972:1:2::1;15440:159:::0;;;;:::o;13177:471::-;13239:10;4848:1;4810:17;;;:7;:17;;;;;:27;;4804:41;;;;;:::i;:::-;;;:45;4782:106;;;;-1:-1:-1;;;4782:106:2;;12440:2:4;4782:106:2;;;12422:21:4;12479:2;12459:18;;;12452:30;-1:-1:-1;;;12498:18:4;;;12491:42;12550:18;;4782:106:2;12238:336:4;4782:106:2;-1:-1:-1;;;;;4906:17:2;;;;;;:7;:17;;;;;:24;;;:32;;:24;:32;4898:64;;;;-1:-1:-1;;;4898:64:2;;12781:2:4;4898:64:2;;;12763:21:4;12820:2;12800:18;;;12793:30;-1:-1:-1;;;12839:18:4;;;12832:49;12898:18;;4898:64:2;12579:343:4;4898:64:2;13261:25:::1;13289:21:::0;;;:9:::1;:21;::::0;;;;13341:17;;;;::::1;-1:-1:-1::0;;;;;13341:17:2::1;13362:10;13341:31;13320:110;;;::::0;-1:-1:-1;;;13320:110:2;;16249:2:4;13320:110:2::1;::::0;::::1;16231:21:4::0;;;16268:18;;;16261:30;16327:34;16307:18;;;16300:62;16379:18;;13320:110:2::1;16047:356:4::0;13320:110:2::1;13462:17:::0;;::::1;;13461:18;:40:::0;::::1;;;-1:-1:-1::0;13484:17:2;;::::1;::::0;::::1;;;13483:18;13461:40;13440:124;;;::::0;-1:-1:-1;;;13440:124:2;;9920:2:4;13440:124:2::1;::::0;::::1;9902:21:4::0;9959:2;9939:18;;;9932:30;9998:34;9978:18;;;9971:62;-1:-1:-1;;;10049:18:4;;;10042:35;10094:19;;13440:124:2::1;9718:401:4::0;13440:124:2::1;13574:24:::0;;-1:-1:-1;;13574:24:2::1;;;::::0;;13613:28:::1;::::0;13630:10;;13613:28:::1;::::0;13574:17:::1;::::0;13613:28:::1;13251:397;13177:471:::0;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;::::1;::::0;;2700:1:::1;2672:31;::::0;::::1;3939:74:4::0;3912:18;;2672:31:0::1;3793:226:4::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;13906:268:2:-;-1:-1:-1;;;;;13975:18:2;;;;;;:7;:18;;;;;:25;;;13974:26;13966:62;;;;-1:-1:-1;;;13966:62:2;;16610:2:4;13966:62:2;;;16592:21:4;16649:2;16629:18;;;16622:30;16688:25;16668:18;;;16661:53;16731:18;;13966:62:2;16408:347:4;13966:62:2;-1:-1:-1;;;;;14038:18:2;;;;;;:7;:18;;;;;;:32;;-1:-1:-1;;14038:32:2;14066:4;14038:32;;;;;;14104:13;;;;;;14142:25;;;14038:18;14142:25;13906:268;:::o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:1;1855:23:0;1851:101;;1901:40;;;;;735:10:1;1901:40:0;;;3939:74:4;3912:18;;1901:40:0;3793:226:4;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;;;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;196:196:4:-;264:20;;-1:-1:-1;;;;;313:54:4;;303:65;;293:93;;382:1;379;372:12;293:93;196:196;;;:::o;397:184::-;-1:-1:-1;;;446:1:4;439:88;546:4;543:1;536:15;570:4;567:1;560:15;586:632;651:5;681:18;722:2;714:6;711:14;708:40;;;728:18;;:::i;:::-;803:2;797:9;771:2;857:15;;-1:-1:-1;;853:24:4;;;879:2;849:33;845:42;833:55;;;903:18;;;923:22;;;900:46;897:72;;;949:18;;:::i;:::-;989:10;985:2;978:22;1018:6;1009:15;;1048:6;1040;1033:22;1088:3;1079:6;1074:3;1070:16;1067:25;1064:45;;;1105:1;1102;1095:12;1064:45;1155:6;1150:3;1143:4;1135:6;1131:17;1118:44;1210:1;1203:4;1194:6;1186;1182:19;1178:30;1171:41;;;;586:632;;;;;:::o;1223:525::-;1301:6;1309;1362:2;1350:9;1341:7;1337:23;1333:32;1330:52;;;1378:1;1375;1368:12;1330:52;1401:29;1420:9;1401:29;:::i;:::-;1391:39;;1481:2;1470:9;1466:18;1453:32;1508:18;1500:6;1497:30;1494:50;;;1540:1;1537;1530:12;1494:50;1563:22;;1616:4;1608:13;;1604:27;-1:-1:-1;1594:55:4;;1645:1;1642;1635:12;1594:55;1668:74;1734:7;1729:2;1716:16;1711:2;1707;1703:11;1668:74;:::i;:::-;1658:84;;;1223:525;;;;;:::o;1753:180::-;1812:6;1865:2;1853:9;1844:7;1840:23;1836:32;1833:52;;;1881:1;1878;1871:12;1833:52;-1:-1:-1;1904:23:4;;1753:180;-1:-1:-1;1753:180:4:o;1938:341::-;2003:6;2011;2064:2;2052:9;2043:7;2039:23;2035:32;2032:52;;;2080:1;2077;2070:12;2032:52;2116:9;2103:23;2093:33;;2176:2;2165:9;2161:18;2148:32;2223:5;2216:13;2209:21;2202:5;2199:32;2189:60;;2245:1;2242;2235:12;2189:60;2268:5;2258:15;;;1938:341;;;;;:::o;2284:186::-;2343:6;2396:2;2384:9;2375:7;2371:23;2367:32;2364:52;;;2412:1;2409;2402:12;2364:52;2435:29;2454:9;2435:29;:::i;:::-;2425:39;2284:186;-1:-1:-1;;;2284:186:4:o;2475:423::-;2517:3;2555:5;2549:12;2582:6;2577:3;2570:19;2607:1;2617:162;2631:6;2628:1;2625:13;2617:162;;;2693:4;2749:13;;;2745:22;;2739:29;2721:11;;;2717:20;;2710:59;2646:12;2617:162;;;2621:3;2824:1;2817:4;2808:6;2803:3;2799:16;2795:27;2788:38;2887:4;2880:2;2876:7;2871:2;2863:6;2859:15;2855:29;2850:3;2846:39;2842:50;2835:57;;;2475:423;;;;:::o;2903:220::-;3052:2;3041:9;3034:21;3015:4;3072:45;3113:2;3102:9;3098:18;3090:6;3072:45;:::i;3128:528::-;3205:6;3213;3266:2;3254:9;3245:7;3241:23;3237:32;3234:52;;;3282:1;3279;3272:12;3234:52;3322:9;3309:23;3355:18;3347:6;3344:30;3341:50;;;3387:1;3384;3377:12;3341:50;3410:22;;3463:4;3455:13;;3451:27;-1:-1:-1;3441:55:4;;3492:1;3489;3482:12;3441:55;3515:76;3583:7;3578:2;3565:16;3558:4;3554:2;3550:13;3515:76;:::i;:::-;3505:86;;;3610:40;3644:4;3633:9;3629:20;3610:40;:::i;:::-;3600:50;;3128:528;;;;;:::o;4223:1957::-;4415:4;4444:2;4484;4473:9;4469:18;4514:2;4503:9;4496:21;4537:6;4572;4566:13;4603:6;4595;4588:22;4629:2;4619:12;;4662:2;4651:9;4647:18;4640:25;;4724:2;4714:6;4711:1;4707:14;4696:9;4692:30;4688:39;4762:2;4754:6;4750:15;4783:1;4793:1358;4807:6;4804:1;4801:13;4793:1358;;;-1:-1:-1;;4872:22:4;;;4868:36;4856:49;;4928:13;;4999:9;;4094:13;4087:21;4075:34;;5056:11;;;5050:18;4094:13;4087:21;5111:15;;;4075:34;5168:11;;;5162:18;-1:-1:-1;;;;;3727:54:4;5228:15;;;3715:67;5267:4;5312:11;;;5306:18;4964:6;5344:15;;;5337:27;;;4964:6;5267:4;5391:50;5425:15;;;5306:18;5391:50;:::i;:::-;5377:64;;;;5464:4;5517:2;5513;5509:11;5503:18;5534:51;5581:2;5573:6;5569:15;5553:14;-1:-1:-1;;;;;3727:54:4;3715:67;;3661:127;5534:51;-1:-1:-1;;5608:4:4;5653:11;;;5647:18;4196:14;4185:26;;5712:15;;;4173:39;-1:-1:-1;;5751:4:4;5796:11;;;5790:18;4196:14;4185:26;;5855:15;;;4173:39;-1:-1:-1;;5894:4:4;5941:11;;;5935:18;5918:15;;;5911:43;5978:6;6028:12;;;6022:19;6004:16;;;;5997:45;6129:12;;;;6094:15;;;;4829:1;4822:9;4793:1358;;;-1:-1:-1;6168:6:4;;4223:1957;-1:-1:-1;;;;;;;;4223:1957:4:o;6377:437::-;6456:1;6452:12;;;;6499;;;6520:61;;6574:4;6566:6;6562:17;6552:27;;6520:61;6627:2;6619:6;6616:14;6596:18;6593:38;6590:218;;-1:-1:-1;;;6661:1:4;6654:88;6765:4;6762:1;6755:15;6793:4;6790:1;6783:15;7290:545;7392:2;7387:3;7384:11;7381:448;;;7428:1;7453:5;7449:2;7442:17;7498:4;7494:2;7484:19;7568:2;7556:10;7552:19;7549:1;7545:27;7539:4;7535:38;7604:4;7592:10;7589:20;7586:47;;;-1:-1:-1;7627:4:4;7586:47;7682:2;7677:3;7673:12;7670:1;7666:20;7660:4;7656:31;7646:41;;7737:82;7755:2;7748:5;7745:13;7737:82;;;7800:17;;;7781:1;7770:13;7737:82;;;7741:3;;;7381:448;7290:545;;;:::o;8011:1352::-;8137:3;8131:10;8164:18;8156:6;8153:30;8150:56;;;8186:18;;:::i;:::-;8215:97;8305:6;8265:38;8297:4;8291:11;8265:38;:::i;:::-;8259:4;8215:97;:::i;:::-;8367:4;;8431:2;8420:14;;8448:1;8443:663;;;;9150:1;9167:6;9164:89;;;-1:-1:-1;9219:19:4;;;9213:26;9164:89;-1:-1:-1;;7968:1:4;7964:11;;;7960:24;7956:29;7946:40;7992:1;7988:11;;;7943:57;9266:81;;8413:944;;8443:663;7237:1;7230:14;;;7274:4;7261:18;;-1:-1:-1;;8479:20:4;;;8597:236;8611:7;8608:1;8605:14;8597:236;;;8700:19;;;8694:26;8679:42;;8792:27;;;;8760:1;8748:14;;;;8627:19;;8597:236;;;8601:3;8861:6;8852:7;8849:19;8846:201;;;8922:19;;;8916:26;-1:-1:-1;;9005:1:4;9001:14;;;9017:3;8997:24;8993:37;8989:42;8974:58;8959:74;;8846:201;-1:-1:-1;;;;;9093:1:4;9077:14;;;9073:22;9060:36;;-1:-1:-1;8011:1352:4:o;10124:184::-;-1:-1:-1;;;10173:1:4;10166:88;10273:4;10270:1;10263:15;10297:4;10294:1;10287:15;10313:128;10380:9;;;10401:11;;;10398:37;;;10415:18;;:::i;:::-;10313:128;;;;:::o;10850:184::-;-1:-1:-1;;;10899:1:4;10892:88;10999:4;10996:1;10989:15;11023:4;11020:1;11013:15;11039:840;11165:3;11194:1;11227:6;11221:13;11257:36;11283:9;11257:36;:::i;:::-;11312:1;11329:18;;;11356:133;;;;11503:1;11498:356;;;;11322:532;;11356:133;-1:-1:-1;;11389:24:4;;11377:37;;11462:14;;11455:22;11443:35;;11434:45;;;-1:-1:-1;11356:133:4;;11498:356;11529:6;11526:1;11519:17;11559:4;11604:2;11601:1;11591:16;11629:1;11643:165;11657:6;11654:1;11651:13;11643:165;;;11735:14;;11722:11;;;11715:35;11778:16;;;;11672:10;;11643:165;;;11647:3;;;11837:6;11832:3;11828:16;11821:23;;11322:532;-1:-1:-1;11870:3:4;;11039:840;-1:-1:-1;;;;;;11039:840:4:o;13690:176::-;13757:14;13791:10;;;13803;;;13787:27;;13826:11;;;13823:37;;;13840:18;;:::i;:::-;13823:37;13690:176;;;;:::o;15449:184::-;-1:-1:-1;;;15498:1:4;15491:88;15598:4;15595:1;15588:15;15622:4;15619:1;15612:15;15638:125;15703:9;;;15724:10;;;15721:36;;;15737:18;;:::i;15768:274::-;15808:1;15834;15824:189;;-1:-1:-1;;;15866:1:4;15859:88;15970:4;15967:1;15960:15;15998:4;15995:1;15988:15;15824:189;-1:-1:-1;16027:9:4;;15768:274::o"
            },
            "methodIdentifiers": {
              "cancelProposal(uint256)": "e0a8f6f5",
              "castVote(uint256,bool)": "15373e3d",
              "checkIsMemberApproved(address)": "cfbc02d4",
              "daoURI()": "7034731b",
              "executeProposal(uint256)": "0d61b519",
              "getOngoingProposals()": "afe666f6",
              "getOngoingProposalsCount()": "27f5884b",
              "newMemberApprovalProposal(address)": "18a41aec",
              "newProposal(bytes,address)": "756a4ba3",
              "owner()": "8da5cb5b",
              "proposalThreshold()": "b58131b0",
              "registerMember(address,string)": "0aa5adfc",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b",
              "votingDelay()": "3932abb1",
              "votingPeriod()": "02a251a3"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_daoURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ownerURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"MemberApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newMember\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_memberURI\",\"type\":\"string\"}],\"name\":\"MemberRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"enum FinCubeDAO.ProposalType\",\"name\":\"proposalType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"cancelProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isYesVote\",\"type\":\"bool\"}],\"name\":\"castVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"checkIsMemberApproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daoURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOngoingProposals\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"voteStart\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"voteDuration\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"yesvotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"novotes\",\"type\":\"uint256\"}],\"internalType\":\"struct FinCubeDAO.Proposal[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOngoingProposalsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ongoingCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMember\",\"type\":\"address\"}],\"name\":\"newMemberApprovalProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"newProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMember\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_memberURI\",\"type\":\"string\"}],\"name\":\"registerMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"cancelProposal(uint256)\":{\"details\":\"Only the proposer of the proposal can call this function.The proposal must not have been executed or canceled before.\",\"params\":{\"proposalId\":\"The ID of the proposal to be canceled.\"}},\"castVote(uint256,bool)\":{\"details\":\"This function can only be called by an existing member. It also checks if the voting period is active and if the member has not already voted for this proposal.\",\"params\":{\"_isYesVote\":\"Whether the vote is a \\\"yes\\\" vote (true) or a \\\"no\\\" vote (false).\",\"_proposalId\":\"The ID of the proposal to vote for.\"}},\"checkIsMemberApproved(address)\":{\"details\":\"This function can only be called by an existing member.\",\"params\":{\"_member\":\"The address of the member to be checked.\"},\"returns\":{\"_0\":\"A boolean indicating whether the member is approved or not.\"}},\"constructor\":{\"params\":{\"_ownerURI\":\"The URI that identifies the owner member.\"}},\"executeProposal(uint256)\":{\"details\":\"This function checks if the voting period has ended, if the proposal has not been executed or canceled, and if the proposal has received enough \\\"yes\\\" votes to meet the proposal threshold. It then executes the proposal based on its type (approving a new member or setting a token address).\",\"params\":{\"proposalId\":\"The ID of the proposal to be executed.\"}},\"getOngoingProposals()\":{\"details\":\"This function first calls `getOngoingProposalsCount` to get the count of ongoing proposals, then iterates through the proposals mapping and populates an array with the ongoing proposals.\",\"returns\":{\"_0\":\"An array of ongoing proposals.\"}},\"getOngoingProposalsCount()\":{\"details\":\"This function iterates through the proposals mapping and counts the proposals that have not been executed or canceled and are within the voting period.\",\"returns\":{\"ongoingCount\":\"The count of ongoing proposals.\"}},\"newMemberApprovalProposal(address)\":{\"details\":\"This function can only be called by an existing member.\",\"params\":{\"_newMember\":\"The address of the new member to be approved.\"}},\"newProposal(bytes,address)\":{\"details\":\"This function can only be called by an existing member.\",\"params\":{\"_calldata\":\"the calldata of function to be invoked. _target the address of contract having the function\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proposalThreshold()\":{\"details\":\"The proposal threshold is calculated as (memberCount + 1) / 2.\",\"returns\":{\"threshold\":\"The proposal threshold.\"}},\"registerMember(address,string)\":{\"details\":\"This function can only be called by non-existing members.\",\"params\":{\"_memberURI\":\"The URI of the new member.\",\"_newMember\":\"The address of the new member to be registered.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"votingDelay()\":{\"details\":\"This function is marked as `pure` because it does not read or modify the contract's state.\",\"returns\":{\"_0\":\"The voting delay period in seconds (currently 5 seconds).\"}},\"votingPeriod()\":{\"details\":\"This function is marked as `pure` because it does not read or modify the contract's state.\",\"returns\":{\"_0\":\"The voting period duration in seconds (currently 60 seconds).\"}}},\"title\":\"FinCubeDAO\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancelProposal(uint256)\":{\"notice\":\"Cancels a proposal that has not been executed or canceled yet.\"},\"castVote(uint256,bool)\":{\"notice\":\"Casts a vote for a proposal.\"},\"checkIsMemberApproved(address)\":{\"notice\":\"Checks if a member is approved.\"},\"constructor\":{\"notice\":\"Initializes the contract with the owner as the first member.\"},\"executeProposal(uint256)\":{\"notice\":\"Executes a proposal if it meets the requirements.\"},\"getOngoingProposals()\":{\"notice\":\"Returns an array of ongoing proposals.\"},\"getOngoingProposalsCount()\":{\"notice\":\"Returns the count of ongoing proposals.\"},\"newMemberApprovalProposal(address)\":{\"notice\":\"Creates a new proposal for approving a new member.\"},\"newProposal(bytes,address)\":{\"notice\":\"Creates a new proposal. This is a generalized proposal which can invoke any public function of any contract using calldata.\"},\"proposalThreshold()\":{\"notice\":\"Returns the proposal threshold, which is the minimum number of \\\"yes\\\" votes required for a proposal to be executed.\"},\"registerMember(address,string)\":{\"notice\":\"Register a new member.\"},\"votingDelay()\":{\"notice\":\"Returns the voting delay period in seconds.\"},\"votingPeriod()\":{\"notice\":\"Returns the voting period duration in seconds.\"}},\"notice\":\"This contract implements a decentralized autonomous organization (DAO) for managing a community of members and proposals.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FincubeDAO.sol\":\"FinCubeDAO\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/FincubeDAO.sol\":{\"keccak256\":\"0x7efe03b330fbaacaaacee08cf8c1f636a99bbf271c3c2bdbe9842f11d9cc4e99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f64fc453f945ae5d49bef65795872c6781b01ed2d6898b21f46b92f9276a7af\",\"dweb:/ipfs/Qmc5H48Jh4WprrfCa5jsEHzq2Qqfk7PQguam5bTRBKFiZ5\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 8,
                "contract": "contracts/FincubeDAO.sol:FinCubeDAO",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 212,
                "contract": "contracts/FincubeDAO.sol:FinCubeDAO",
                "label": "memberCount",
                "offset": 0,
                "slot": "1",
                "type": "t_uint256"
              },
              {
                "astId": 214,
                "contract": "contracts/FincubeDAO.sol:FinCubeDAO",
                "label": "proposalCount",
                "offset": 0,
                "slot": "2",
                "type": "t_uint256"
              },
              {
                "astId": 216,
                "contract": "contracts/FincubeDAO.sol:FinCubeDAO",
                "label": "daoURI",
                "offset": 0,
                "slot": "3",
                "type": "t_string_storage"
              },
              {
                "astId": 261,
                "contract": "contracts/FincubeDAO.sol:FinCubeDAO",
                "label": "members",
                "offset": 0,
                "slot": "4",
                "type": "t_mapping(t_address,t_struct(Member)222_storage)"
              },
              {
                "astId": 266,
                "contract": "contracts/FincubeDAO.sol:FinCubeDAO",
                "label": "proposals",
                "offset": 0,
                "slot": "5",
                "type": "t_mapping(t_uint256,t_struct(Proposal)246_storage)"
              },
              {
                "astId": 271,
                "contract": "contracts/FincubeDAO.sol:FinCubeDAO",
                "label": "proposalVotes",
                "offset": 0,
                "slot": "6",
                "type": "t_mapping(t_uint256,t_struct(ProposalVotes)256_storage)"
              },
              {
                "astId": 276,
                "contract": "contracts/FincubeDAO.sol:FinCubeDAO",
                "label": "proposalType",
                "offset": 0,
                "slot": "7",
                "type": "t_mapping(t_uint256,t_enum(ProposalType)226)"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_bytes_storage": {
                "encoding": "bytes",
                "label": "bytes",
                "numberOfBytes": "32"
              },
              "t_enum(ProposalType)226": {
                "encoding": "inplace",
                "label": "enum FinCubeDAO.ProposalType",
                "numberOfBytes": "1"
              },
              "t_mapping(t_address,t_bool)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => bool)",
                "numberOfBytes": "32",
                "value": "t_bool"
              },
              "t_mapping(t_address,t_struct(Member)222_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct FinCubeDAO.Member)",
                "numberOfBytes": "32",
                "value": "t_struct(Member)222_storage"
              },
              "t_mapping(t_uint256,t_enum(ProposalType)226)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => enum FinCubeDAO.ProposalType)",
                "numberOfBytes": "32",
                "value": "t_enum(ProposalType)226"
              },
              "t_mapping(t_uint256,t_struct(Proposal)246_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => struct FinCubeDAO.Proposal)",
                "numberOfBytes": "32",
                "value": "t_struct(Proposal)246_storage"
              },
              "t_mapping(t_uint256,t_struct(ProposalVotes)256_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => struct FinCubeDAO.ProposalVotes)",
                "numberOfBytes": "32",
                "value": "t_struct(ProposalVotes)256_storage"
              },
              "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
              },
              "t_struct(Member)222_storage": {
                "encoding": "inplace",
                "label": "struct FinCubeDAO.Member",
                "members": [
                  {
                    "astId": 219,
                    "contract": "contracts/FincubeDAO.sol:FinCubeDAO",
                    "label": "status",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_bool"
                  },
                  {
                    "astId": 221,
                    "contract": "contracts/FincubeDAO.sol:FinCubeDAO",
                    "label": "memberURI",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_string_storage"
                  }
                ],
                "numberOfBytes": "64"
              },
              "t_struct(Proposal)246_storage": {
                "encoding": "inplace",
                "label": "struct FinCubeDAO.Proposal",
                "members": [
                  {
                    "astId": 229,
                    "contract": "contracts/FincubeDAO.sol:FinCubeDAO",
                    "label": "executed",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_bool"
                  },
                  {
                    "astId": 231,
                    "contract": "contracts/FincubeDAO.sol:FinCubeDAO",
                    "label": "canceled",
                    "offset": 1,
                    "slot": "0",
                    "type": "t_bool"
                  },
                  {
                    "astId": 233,
                    "contract": "contracts/FincubeDAO.sol:FinCubeDAO",
                    "label": "proposer",
                    "offset": 2,
                    "slot": "0",
                    "type": "t_address"
                  },
                  {
                    "astId": 235,
                    "contract": "contracts/FincubeDAO.sol:FinCubeDAO",
                    "label": "data",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_bytes_storage"
                  },
                  {
                    "astId": 237,
                    "contract": "contracts/FincubeDAO.sol:FinCubeDAO",
                    "label": "target",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_address"
                  },
                  {
                    "astId": 239,
                    "contract": "contracts/FincubeDAO.sol:FinCubeDAO",
                    "label": "voteStart",
                    "offset": 20,
                    "slot": "2",
                    "type": "t_uint48"
                  },
                  {
                    "astId": 241,
                    "contract": "contracts/FincubeDAO.sol:FinCubeDAO",
                    "label": "voteDuration",
                    "offset": 26,
                    "slot": "2",
                    "type": "t_uint48"
                  },
                  {
                    "astId": 243,
                    "contract": "contracts/FincubeDAO.sol:FinCubeDAO",
                    "label": "yesvotes",
                    "offset": 0,
                    "slot": "3",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 245,
                    "contract": "contracts/FincubeDAO.sol:FinCubeDAO",
                    "label": "novotes",
                    "offset": 0,
                    "slot": "4",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "160"
              },
              "t_struct(ProposalVotes)256_storage": {
                "encoding": "inplace",
                "label": "struct FinCubeDAO.ProposalVotes",
                "members": [
                  {
                    "astId": 251,
                    "contract": "contracts/FincubeDAO.sol:FinCubeDAO",
                    "label": "isYesVote",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_mapping(t_address,t_bool)"
                  },
                  {
                    "astId": 255,
                    "contract": "contracts/FincubeDAO.sol:FinCubeDAO",
                    "label": "isNoVote",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_mapping(t_address,t_bool)"
                  }
                ],
                "numberOfBytes": "64"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              },
              "t_uint48": {
                "encoding": "inplace",
                "label": "uint48",
                "numberOfBytes": "6"
              }
            }
          }
        }
      },
      "contracts/TokenAddress.sol": {
        "TokenAddressContract": {
          "abi": [
            {
              "inputs": [],
              "name": "getToken",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "remove",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenAddress",
                  "type": "address"
                }
              ],
              "name": "set",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50610160806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806321df0da7146100515780632801617e1461007a57806329092d0e146100b9578063fc0c546a146100e7575b600080fd5b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b6100b76100883660046100fa565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b005b6100b76100c73660046100fa565b506000805473ffffffffffffffffffffffffffffffffffffffff19169055565b60005461005e906001600160a01b031681565b60006020828403121561010c57600080fd5b81356001600160a01b038116811461012357600080fd5b939250505056fea26469706673582212209fcc4902e078bd77b2b13549896e7ae95a101b2effbe5648290f58586b3707cd64736f6c63430008140033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x160 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x2801617E EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x29092D0E EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH2 0x88 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB7 PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x5E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xCC 0x49 MUL 0xE0 PUSH25 0xBD77B2B13549896E7AE95A101B2EFFBE5648290F58586B3707 0xCD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
              "sourceMap": "60:305:3:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@getToken_1113": {
                  "entryPoint": null,
                  "id": 1113,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@remove_1105": {
                  "entryPoint": null,
                  "id": 1105,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@set_1096": {
                  "entryPoint": null,
                  "id": 1096,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@token_1086": {
                  "entryPoint": null,
                  "id": 1086,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 250,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:556:4",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:4",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "115:125:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "125:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "137:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "148:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "133:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:4:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:9:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "182:6:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "190:42:4",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "178:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "178:55:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "160:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "160:74:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "160:74:4"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "84:9:4",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "95:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "106:4:4",
                            "type": ""
                          }
                        ],
                        "src": "14:226:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "315:239:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "361:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "370:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "373:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "363:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "363:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "363:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "336:7:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "345:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "332:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "332:23:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "357:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "328:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "328:32:4"
                              },
                              "nodeType": "YulIf",
                              "src": "325:52:4"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "386:36:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "412:9:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "399:12:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "399:23:4"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "390:5:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "508:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "517:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "520:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "510:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "510:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "510:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "444:5:4"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "455:5:4"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "462:42:4",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "451:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "451:54:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "441:2:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "441:65:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "434:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "434:73:4"
                              },
                              "nodeType": "YulIf",
                              "src": "431:93:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "533:15:4",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "543:5:4"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "533:6:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "281:9:4",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "292:7:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "304:6:4",
                            "type": ""
                          }
                        ],
                        "src": "245:309:4"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n}",
                  "id": 4,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806321df0da7146100515780632801617e1461007a57806329092d0e146100b9578063fc0c546a146100e7575b600080fd5b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b6100b76100883660046100fa565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b005b6100b76100c73660046100fa565b506000805473ffffffffffffffffffffffffffffffffffffffff19169055565b60005461005e906001600160a01b031681565b60006020828403121561010c57600080fd5b81356001600160a01b038116811461012357600080fd5b939250505056fea26469706673582212209fcc4902e078bd77b2b13549896e7ae95a101b2effbe5648290f58586b3707cd64736f6c63430008140033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x2801617E EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x29092D0E EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH2 0x88 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB7 PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x5E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xCC 0x49 MUL 0xE0 PUSH25 0xBD77B2B13549896E7AE95A101B2EFFBE5648290F58586B3707 0xCD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
              "sourceMap": "60:305:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;285:78;325:7;351:5;-1:-1:-1;;;;;351:5:3;285:78;;;-1:-1:-1;;;;;178:55:4;;;160:74;;148:2;133:18;285:78:3;;;;;;;127:79;;;;;;:::i;:::-;179:5;:20;;-1:-1:-1;;179:20:3;-1:-1:-1;;;;;179:20:3;;;;;;;;;;127:79;;;216:62;;;;;;:::i;:::-;-1:-1:-1;266:5:3;259:12;;-1:-1:-1;;259:12:3;;;216:62;96:20;;;;;-1:-1:-1;;;;;96:20:3;;;245:309:4;304:6;357:2;345:9;336:7;332:23;328:32;325:52;;;373:1;370;363:12;325:52;412:9;399:23;-1:-1:-1;;;;;455:5:4;451:54;444:5;441:65;431:93;;520:1;517;510:12;431:93;543:5;245:309;-1:-1:-1;;;245:309:4:o"
            },
            "methodIdentifiers": {
              "getToken()": "21df0da7",
              "remove(address)": "29092d0e",
              "set(address)": "2801617e",
              "token()": "fc0c546a"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenAddress.sol\":\"TokenAddressContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/TokenAddress.sol\":{\"keccak256\":\"0x0674aab0a2bed4c1b7112b67eaf0ef219fa09ecf7b380ceaebe8061a6d8b524b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffcb186abddc1971f87db633b26cb6609e3a6b2f928d7e883ddf0d310326e4fd\",\"dweb:/ipfs/QmSNDQGz2CBDZqtT4DV573fP51oN7d9eKQHafej4Aj3X7c\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 1086,
                "contract": "contracts/TokenAddress.sol:TokenAddressContract",
                "label": "token",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              }
            }
          }
        }
      }
    }
  }
}